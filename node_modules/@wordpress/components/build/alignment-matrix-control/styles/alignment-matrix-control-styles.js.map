{"version":3,"sources":["@wordpress/components/src/alignment-matrix-control/styles/alignment-matrix-control-styles.js"],"names":["rootBase","rootSize","size","css","Root","Row","pointActive","isActive","boxShadow","COLORS","gray","pointColor","lightGray","pointColorHover","blue","medium","focus","pointBase","props","Point","Cell"],"mappings":";;;;;;;;;;;AAIA;;AAKA;;;;;;;;;;;;;;AAEO,MAAMA,QAAQ,GAAG,MAAM;AAC7B;AAOA,CARM;;;;AAUP,MAAMC,QAAQ,GAAG,SAAqB;AAAA,MAAnB;AAAEC,IAAAA,IAAI,GAAG;AAAT,GAAmB;AACrC,0BAAOC,UAAP,0CACyCD,IADzC,uBAEWA,IAFX;AAIA,CALD;;AAOO,MAAME,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,GACbJ,QADa,8EAObC,QAPa,i+FAAV;;AAUA,MAAMI,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAT;;;AAMP,MAAMC,WAAW,GAAG,SAAoB;AAAA,MAAlB;AAAEC,IAAAA;AAAF,GAAkB;AACvC,QAAMC,SAAS,GAAGD,QAAQ,GAAI,aAAaE,cAAOC,IAAP,CAAa,GAAb,CAAoB,EAArC,GAAyC,IAAnE;AACA,QAAMC,UAAU,GAAGJ,QAAQ,GAAGE,cAAOC,IAAP,CAAa,GAAb,CAAH,GAAwBD,cAAOG,SAAP,CAAkB,GAAlB,CAAnD;AACA,QAAMC,eAAe,GAAGN,QAAQ,GAC7BE,cAAOC,IAAP,CAAa,GAAb,CAD6B,GAE7BD,cAAOK,IAAP,CAAYC,MAAZ,CAAmBC,KAFtB;AAIA,0BAAOb,UAAP,iBACgBK,SADhB,aAEWG,UAFX,uBAKYE,eALZ;AAQA,CAfD;;AAiBO,MAAMI,SAAS,GAAKC,KAAF,IAAa;AACrC,0BAAOf,UAAP,yGAOI,yBAAc,YAAd,CAPJ,OAQIG,WAAW,CAAEY,KAAF,CARf;AAUA,CAXM;;;AAaA,MAAMC,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,4BAGdF,SAHc,i+FAAX;;AAMA,MAAMG,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAV","sourcesContent":["/**\n * External dependencies\n */\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/react';\n\n/**\n * Internal dependencies\n */\nimport { COLORS, reduceMotion } from '../../utils';\n\nexport const rootBase = () => {\n\treturn css`\n\t\tborder-radius: 2px;\n\t\tbox-sizing: border-box;\n\t\tdisplay: grid;\n\t\tgrid-template-columns: repeat( 3, 1fr );\n\t\toutline: none;\n\t`;\n};\n\nconst rootSize = ( { size = 92 } ) => {\n\treturn css`\n\t\tgrid-template-rows: repeat( 3, calc( ${ size }px / 3 ) );\n\t\twidth: ${ size }px;\n\t`;\n};\n\nexport const Root = styled.div`\n\t${ rootBase };\n\n\tborder: 1px solid transparent;\n\tcursor: pointer;\n\tgrid-template-columns: auto;\n\n\t${ rootSize };\n`;\n\nexport const Row = styled.div`\n\tbox-sizing: border-box;\n\tdisplay: grid;\n\tgrid-template-columns: repeat( 3, 1fr );\n`;\n\nconst pointActive = ( { isActive } ) => {\n\tconst boxShadow = isActive ? `0 0 0 2px ${ COLORS.gray[ 900 ] }` : null;\n\tconst pointColor = isActive ? COLORS.gray[ 900 ] : COLORS.lightGray[ 800 ];\n\tconst pointColorHover = isActive\n\t\t? COLORS.gray[ 900 ]\n\t\t: COLORS.blue.medium.focus;\n\n\treturn css`\n\t\tbox-shadow: ${ boxShadow };\n\t\tcolor: ${ pointColor };\n\n\t\t*:hover > & {\n\t\t\tcolor: ${ pointColorHover };\n\t\t}\n\t`;\n};\n\nexport const pointBase = ( props ) => {\n\treturn css`\n\t\tbackground: currentColor;\n\t\tbox-sizing: border-box;\n\t\tdisplay: grid;\n\t\tmargin: auto;\n\t\ttransition: all 120ms linear;\n\n\t\t${ reduceMotion( 'transition' ) }\n\t\t${ pointActive( props ) }\n\t`;\n};\n\nexport const Point = styled.span`\n\theight: 6px;\n\twidth: 6px;\n\t${ pointBase }\n`;\n\nexport const Cell = styled.span`\n\tappearance: none;\n\tborder: none;\n\tbox-sizing: border-box;\n\tmargin: 0;\n\tdisplay: flex;\n\tposition: relative;\n\toutline: none;\n\talign-items: center;\n\tjustify-content: center;\n\tpadding: 0;\n`;\n"]}