{"version":3,"sources":["@wordpress/components/src/border-box-control/styles.ts"],"names":["BorderBoxControl","css","LinkedBorderControl","BorderBoxControlLinkedButton","BorderBoxStyleWithFallback","border","color","COLORS","gray","style","width","CONFIG","borderWidth","clampedWidth","hasVisibleBorder","borderStyle","BorderBoxControlVisualizer","borders","top","bottom","borderLeft","left","borderRight","right","BorderBoxControlSplitControls","marginRight","marginLeft","CenteredBorderControl"],"mappings":";;;;;;;AAGA;;AAKA;;AACA;;;;AAKO,MAAMA,gBAAgB,oBAAGC,UAAH,0wFAAtB;;AAEA,MAAMC,mBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AAIA,MAAMC,4BAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlC;;;AAMP,MAAMC,0BAA0B,GAAKC,MAAF,IAAuB;AACzD,QAAM;AACLC,IAAAA,KAAK,GAAGC,cAAOC,IAAP,CAAa,GAAb,CADH;AAELC,IAAAA,KAAK,GAAG,OAFH;AAGLC,IAAAA,KAAK,GAAGC,cAAOC;AAHV,MAIFP,MAAM,IAAI,EAJd;AAMA,QAAMQ,YAAY,GACjBH,KAAK,KAAKC,cAAOC,WAAjB,GAAgC,cAAcF,KAAO,SAArD,GAAgEA,KADjE;AAEA,QAAMI,gBAAgB,GAAK,CAAC,CAAEJ,KAAH,IAAYA,KAAK,KAAK,GAAxB,IAAiC,CAAC,CAAEJ,KAA7D;AACA,QAAMS,WAAW,GAAGD,gBAAgB,GAAGL,KAAK,IAAI,OAAZ,GAAsBA,KAA1D;AAEA,SAAQ,GAAGH,KAAO,IAAIS,WAAa,IAAIF,YAAc,EAArD;AACA,CAbD;;AAeO,MAAMG,0BAA0B,GAAKC,OAAF,IAAyB;AAClE,0BAAOhB,UAAP,6EAMgBG,0BAA0B,CAAEa,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEC,GAAX,CAN1C,qBAOmBd,0BAA0B,CAAEa,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEE,MAAX,CAP7C,OAQI,gBAAK;AACPC,IAAAA,UAAU,EAAEhB,0BAA0B,CAAEa,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEI,IAAX;AAD/B,GAAL,GARJ,OAWI,gBAAK;AACPC,IAAAA,WAAW,EAAElB,0BAA0B,CAAEa,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEM,KAAX;AADhC,GAAL,GAXJ;AAeA,CAhBM;;;AAkBA,MAAMC,6BAA6B,oBAAGvB,UAAH,+BAGtC,gBAAK;AAAEwB,EAAAA,WAAW,EAAE,kBAAO,CAAP;AAAf,CAAL,EAAkC;AAAEC,EAAAA,UAAU,EAAE,kBAAO,CAAP;AAAd,CAAlC,GAHsC,+xFAAnC;;AAMA,MAAMC,qBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B","sourcesContent":["/**\n * External dependencies\n */\nimport { css } from '@emotion/react';\n\n/**\n * Internal dependencies\n */\nimport { COLORS, CONFIG, rtl } from '../utils';\nimport { space } from '../ui/utils/space';\n\nimport type { Border } from '../border-control/types';\nimport type { Borders } from './types';\n\nexport const BorderBoxControl = css``;\n\nexport const LinkedBorderControl = css`\n\tflex: 1;\n`;\n\nexport const BorderBoxControlLinkedButton = css`\n\tflex: 0;\n\tflex-basis: 36px;\n\tmargin-top: 7px;\n`;\n\nconst BorderBoxStyleWithFallback = ( border?: Border ) => {\n\tconst {\n\t\tcolor = COLORS.gray[ 200 ],\n\t\tstyle = 'solid',\n\t\twidth = CONFIG.borderWidth,\n\t} = border || {};\n\n\tconst clampedWidth =\n\t\twidth !== CONFIG.borderWidth ? `clamp(1px, ${ width }, 10px)` : width;\n\tconst hasVisibleBorder = ( !! width && width !== '0' ) || !! color;\n\tconst borderStyle = hasVisibleBorder ? style || 'solid' : style;\n\n\treturn `${ color } ${ borderStyle } ${ clampedWidth }`;\n};\n\nexport const BorderBoxControlVisualizer = ( borders?: Borders ) => {\n\treturn css`\n\t\tposition: absolute;\n\t\ttop: 20px;\n\t\tright: 30px;\n\t\tbottom: 20px;\n\t\tleft: 30px;\n\t\tborder-top: ${ BorderBoxStyleWithFallback( borders?.top ) };\n\t\tborder-bottom: ${ BorderBoxStyleWithFallback( borders?.bottom ) };\n\t\t${ rtl( {\n\t\t\tborderLeft: BorderBoxStyleWithFallback( borders?.left ),\n\t\t} )() }\n\t\t${ rtl( {\n\t\t\tborderRight: BorderBoxStyleWithFallback( borders?.right ),\n\t\t} )() }\n\t`;\n};\n\nexport const BorderBoxControlSplitControls = css`\n\tposition: relative;\n\tflex: 1;\n\t${ rtl( { marginRight: space( 3 ) }, { marginLeft: space( 3 ) } )() }\n`;\n\nexport const CenteredBorderControl = css`\n\tgrid-column: span 2;\n\tmargin: 0 auto;\n`;\n"]}