{"version":3,"sources":["@wordpress/components/src/slot-fill/bubbles-virtually/slot.js"],"names":["Slot","forwardedRef","name","fillProps","as","Component","props","registry","SlotFillContext","ref","registerSlot","unregisterSlot","updateSlot"],"mappings":";;;;;;;;;AAIA;;;;AAMA;;AAKA;;AAfA;;AACA;AACA;AACA;;AASA;AACA;AACA;AAGA,SAASA,IAAT,OAECC,YAFD,EAGE;AAAA,MAFD;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,SAAS,GAAG,EAApB;AAAwBC,IAAAA,EAAE,EAAEC,SAAS,GAAG,KAAxC;AAA+C,OAAGC;AAAlD,GAEC;AACD,QAAMC,QAAQ,GAAG,yBAAYC,wBAAZ,CAAjB;AACA,QAAMC,GAAG,GAAG,sBAAZ;AAEA,gCAAiB,MAAM;AACtBF,IAAAA,QAAQ,CAACG,YAAT,CAAuBR,IAAvB,EAA6BO,GAA7B,EAAkCN,SAAlC;AACA,WAAO,MAAM;AACZI,MAAAA,QAAQ,CAACI,cAAT,CAAyBT,IAAzB,EAA+BO,GAA/B;AACA,KAFD,CAFsB,CAKtB;AACA;AACA;AACA;AACA,GATD,EASG,CAAEF,QAAQ,CAACG,YAAX,EAAyBH,QAAQ,CAACI,cAAlC,EAAkDT,IAAlD,CATH,EAJC,CAcD;AACA;;AACA,gCAAiB,MAAM;AACtBK,IAAAA,QAAQ,CAACK,UAAT,CAAqBV,IAArB,EAA2BC,SAA3B;AACA,GAFD;AAIA,SACC,4BAAC,SAAD;AAAW,IAAA,GAAG,EAAG,2BAAc,CAAEF,YAAF,EAAgBQ,GAAhB,CAAd;AAAjB,KAA8DH,KAA9D,EADD;AAGA;;eAEc,yBAAYN,IAAZ,C","sourcesContent":["// @ts-nocheck\n/**\n * WordPress dependencies\n */\nimport {\n\tuseRef,\n\tuseLayoutEffect,\n\tuseContext,\n\tforwardRef,\n} from '@wordpress/element';\nimport { useMergeRefs } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport SlotFillContext from './slot-fill-context';\n\nfunction Slot(\n\t{ name, fillProps = {}, as: Component = 'div', ...props },\n\tforwardedRef\n) {\n\tconst registry = useContext( SlotFillContext );\n\tconst ref = useRef();\n\n\tuseLayoutEffect( () => {\n\t\tregistry.registerSlot( name, ref, fillProps );\n\t\treturn () => {\n\t\t\tregistry.unregisterSlot( name, ref );\n\t\t};\n\t\t// We are not including fillProps in the deps because we don't want to\n\t\t// unregister and register the slot whenever fillProps change, which would\n\t\t// cause the fill to be re-mounted. We are only considering the initial value\n\t\t// of fillProps.\n\t}, [ registry.registerSlot, registry.unregisterSlot, name ] );\n\t// fillProps may be an update that interacts with the layout, so we\n\t// useLayoutEffect.\n\tuseLayoutEffect( () => {\n\t\tregistry.updateSlot( name, fillProps );\n\t} );\n\n\treturn (\n\t\t<Component ref={ useMergeRefs( [ forwardedRef, ref ] ) } { ...props } />\n\t);\n}\n\nexport default forwardRef( Slot );\n"]}