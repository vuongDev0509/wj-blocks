"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useBaseField = useBaseField;

var _element = require("@wordpress/element");

var _context = require("../ui/context");

var _controlGroup = require("../ui/control-group");

var _flex = require("../flex");

var styles = _interopRequireWildcard(require("./styles"));

var _useCx = require("../utils/hooks/use-cx");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

/**
 * @typedef OwnProps
 * @property {boolean} [hasError=false] Renders an error.
 * @property {boolean} [disabled]       Whether the field is disabled.
 * @property {boolean} [isInline=false] Renders as an inline element (layout).
 * @property {boolean} [isSubtle=false] Renders a subtle variant.
 */

/** @typedef {import('../flex/types').FlexProps & OwnProps} Props */

/**
 * @param {import('../ui/context').WordPressComponentProps<Props, 'div'>} props
 */
function useBaseField(props) {
  const {
    className,
    hasError = false,
    isInline = false,
    isSubtle = false,
    // Extract these because useFlex doesn't accept it.
    defaultValue,
    disabled,
    ...flexProps
  } = (0, _context.useContextSystem)(props, 'BaseField');
  const {
    styles: controlGroupStyles
  } = (0, _controlGroup.useControlGroupContext)();
  const cx = (0, _useCx.useCx)();
  const classes = (0, _element.useMemo)(() => cx(styles.BaseField, controlGroupStyles, isSubtle && styles.subtle, hasError && styles.error, isInline && styles.inline, className), [className, controlGroupStyles, cx, hasError, isInline, isSubtle]);
  return { ...(0, _flex.useFlex)({ ...flexProps,
      className: classes
    }),
    disabled,
    defaultValue
  };
}
//# sourceMappingURL=hook.js.map