function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }

/**
 * External dependencies
 */
import { css } from '@emotion/react';

/**
 * Internal dependencies
 */
import { COLORS, CONFIG, rtl } from '../utils';
import { space } from '../ui/utils/space';
import { StyledField, StyledLabel } from '../base-control/styles/base-control-styles';
import { BackdropUI } from '../input-control/styles/input-control-styles';
import { Root as UnitControlWrapper } from '../unit-control/styles/unit-control-styles';
const labelStyles = process.env.NODE_ENV === "production" ? {
  name: "f3vz0n",
  styles: "font-weight:500"
} : {
  name: "rst95r-labelStyles",
  styles: "font-weight:500;label:labelStyles;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW9CdUIiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9ib3JkZXItY29udHJvbC9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgdHlwZSB7IENTU1Byb3BlcnRpZXMgfSBmcm9tICdyZWFjdCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IENPTE9SUywgQ09ORklHLCBydGwgfSBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uL3VpL3V0aWxzL3NwYWNlJztcbmltcG9ydCB7XG5cdFN0eWxlZEZpZWxkLFxuXHRTdHlsZWRMYWJlbCxcbn0gZnJvbSAnLi4vYmFzZS1jb250cm9sL3N0eWxlcy9iYXNlLWNvbnRyb2wtc3R5bGVzJztcbmltcG9ydCB7IEJhY2tkcm9wVUkgfSBmcm9tICcuLi9pbnB1dC1jb250cm9sL3N0eWxlcy9pbnB1dC1jb250cm9sLXN0eWxlcyc7XG5pbXBvcnQgeyBSb290IGFzIFVuaXRDb250cm9sV3JhcHBlciB9IGZyb20gJy4uL3VuaXQtY29udHJvbC9zdHlsZXMvdW5pdC1jb250cm9sLXN0eWxlcyc7XG5cbmltcG9ydCB0eXBlIHsgQm9yZGVyIH0gZnJvbSAnLi90eXBlcyc7XG5cbmNvbnN0IGxhYmVsU3R5bGVzID0gY3NzYFxuXHRmb250LXdlaWdodDogNTAwO1xuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2wgPSBjc3NgXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcbmA7XG5cbmV4cG9ydCBjb25zdCBpbm5lcldyYXBwZXIgPSAoKSA9PiBjc3NgXG5cdGJvcmRlcjogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH07XG5cdGJvcmRlci1yYWRpdXM6IDJweDtcblx0ZmxleDogMSAwIDQwJTtcblxuXHQvKlxuXHQgKiBOZWVkcyBtb3JlIHRob3VnaHQuIEFpbSBpcyB0byBwcmV2ZW50IHRoZSBib3JkZXIgZm9yIEJvcmRlckJveENvbnRyb2xcblx0ICogc2hvd2luZyB0aHJvdWdoIHRoZSBjb250cm9sLiBMaWtlbHkgbmVlZHMgdG8gdGFrZSBpbnRvIGFjY291bnRcblx0ICogbGlnaHQvZGFyayB0aGVtZXMgZXRjLlxuXHQgKi9cblx0YmFja2dyb3VuZDogI2ZmZjtcblxuXHQvKlxuXHQgKiBGb3JjZXMgdGhlIHdpZHRoIGNvbnRyb2wgdG8gZmlsbCBhdmFpbGFibGUgc3BhY2UgZ2l2ZW4gVW5pdENvbnRyb2xcblx0ICogcGFzc2VzIGl0cyBjbGFzc05hbWUgZGlyZWN0bHkgdGhyb3VnaCB0byB0aGUgaW5wdXQuXG5cdCAqL1xuXHQkeyBVbml0Q29udHJvbFdyYXBwZXIgfSB7XG5cdFx0ZmxleDogMTtcblx0XHQkeyBydGwoIHsgbWFyZ2luTGVmdDogMCB9ICkoKSB9XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCB3cmFwcGVyV2lkdGggPSAoIHdpZHRoOiBDU1NQcm9wZXJ0aWVzWyAnd2lkdGgnIF0gKSA9PiB7XG5cdHJldHVybiBjc3NgXG5cdFx0d2lkdGg6ICR7IHdpZHRoIH07XG5cdFx0ZmxleDogMCAwIGF1dG87XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbERyb3Bkb3duID0gKCkgPT4gY3NzYFxuXHRiYWNrZ3JvdW5kOiAjZmZmO1xuXHQkeyBydGwoXG5cdFx0e1xuXHRcdFx0Ym9yZGVyUmFkaXVzOiBgMXB4IDAgMCAxcHhgLFxuXHRcdFx0Ym9yZGVyUmlnaHQ6IGAkeyBDT05GSUcuYm9yZGVyV2lkdGggfSBzb2xpZCAkeyBDT0xPUlMuZ3JheVsgMjAwIF0gfWAsXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRib3JkZXJSYWRpdXM6IGAwIDFweCAxcHggMGAsXG5cdFx0XHRib3JkZXJMZWZ0OiBgJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH1gLFxuXHRcdH1cblx0KSgpIH1cblxuXHQmJiA+IGJ1dHRvbiB7XG5cdFx0cGFkZGluZzogJHsgc3BhY2UoIDEgKSB9O1xuXHRcdGJvcmRlci1yYWRpdXM6IGluaGVyaXQ7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBjb2xvckluZGljYXRvckJvcmRlciA9ICggYm9yZGVyPzogQm9yZGVyICkgPT4ge1xuXHRjb25zdCB7IGNvbG9yLCBzdHlsZSB9ID0gYm9yZGVyIHx8IHt9O1xuXG5cdGNvbnN0IGZhbGxiYWNrQ29sb3IgPVxuXHRcdCEhIHN0eWxlICYmIHN0eWxlICE9PSAnbm9uZScgPyBDT0xPUlMuZ3JheVsgMzAwIF0gOiB1bmRlZmluZWQ7XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRib3JkZXItc3R5bGU6ICR7IHN0eWxlID09PSAnbm9uZScgPyAnc29saWQnIDogc3R5bGUgfTtcblx0XHRib3JkZXItY29sb3I6ICR7IGNvbG9yIHx8IGZhbGxiYWNrQ29sb3IgfTtcblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBjb2xvckluZGljYXRvcldyYXBwZXIgPSAoIGJvcmRlcj86IEJvcmRlciApID0+IHtcblx0Y29uc3QgeyBzdHlsZSB9ID0gYm9yZGVyIHx8IHt9O1xuXG5cdHJldHVybiBjc3NgXG5cdFx0Ym9yZGVyLXJhZGl1czogOTk5OXB4O1xuXHRcdGJvcmRlcjogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuXHRcdCR7IHN0eWxlID8gY29sb3JJbmRpY2F0b3JCb3JkZXIoIGJvcmRlciApIDogdW5kZWZpbmVkIH1cblx0XHR3aWR0aDogMjhweDtcblx0XHRoZWlnaHQ6IDI4cHg7XG5cdFx0cGFkZGluZzogMnB4O1xuXG5cdFx0Lypcblx0XHQgKiBDb2xvckluZGljYXRvclxuXHRcdCAqXG5cdFx0ICogVGhlIHRyYW5zcGFyZW50IGNvbG9ycyB1c2VkIGhlcmUgZW5zdXJlIHZpc2liaWxpdHkgb2YgdGhlIGluZGljYXRvclxuXHRcdCAqIG92ZXIgdGhlIGFjdGl2ZSBzdGF0ZSBvZiB0aGUgYm9yZGVyIGNvbnRyb2wgZHJvcGRvd24ncyB0b2dnbGUgYnV0dG9uLlxuXHRcdCAqL1xuXHRcdCYgPiBzcGFuIHtcblx0XHRcdGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChcblx0XHRcdFx0LTQ1ZGVnLFxuXHRcdFx0XHR0cmFuc3BhcmVudCA0OCUsXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA0OCUsXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA1MiUsXG5cdFx0XHRcdHRyYW5zcGFyZW50IDUyJVxuXHRcdFx0KTtcblx0XHR9XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXIgPSBjc3NgXG5cdC8qIFJlbW92ZSBwYWRkaW5nIGZyb20gY29udGVudCwgdGhpcyB3aWxsIGJlIHJlLWFkZGVkIHZpYSBpbm5lciBlbGVtZW50cyovXG5cdCYmID4gZGl2ID4gZGl2IHtcblx0XHRwYWRkaW5nOiAwO1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXJDb250cm9scyA9IGNzc2Bcblx0cGFkZGluZzogJHsgc3BhY2UoIDIgKSB9O1xuXG5cdD4gZGl2OmZpcnN0LW9mLXR5cGUgPiAkeyBTdHlsZWRMYWJlbCB9IHtcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xuXHRcdCR7IGxhYmVsU3R5bGVzIH1cblx0fVxuXG5cdCYmICR7IFN0eWxlZExhYmVsIH0gKyBidXR0b246bm90KCAuaGFzLXRleHQgKSB7XG5cdFx0bWluLXdpZHRoOiAyNHB4O1xuXHRcdHBhZGRpbmc6IDA7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sUG9wb3ZlckNvbnRlbnQgPSBjc3NgYDtcbmV4cG9ydCBjb25zdCBib3JkZXJDb2xvckluZGljYXRvciA9IGNzc2BgO1xuXG5leHBvcnQgY29uc3QgcmVzZXRCdXR0b24gPSBjc3NgXG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXHR3aWR0aDogMTAwJTtcblxuXHQvKiBPdmVycmlkZSBidXR0b24gY29tcG9uZW50IHN0eWxpbmcgKi9cblx0JiYge1xuXHRcdGJvcmRlci10b3A6ICR7IENPTkZJRy5ib3JkZXJXaWR0aCB9IHNvbGlkICR7IENPTE9SUy5ncmF5WyAyMDAgXSB9O1xuXHRcdGhlaWdodDogNDZweDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlcldpZHRoQ29udHJvbCA9ICgpID0+IGNzc2Bcblx0LyogVGFyZ2V0IHRoZSBJbnB1dENvbnRyb2wncyBiYWNrZHJvcCAqL1xuXHQmJiYgJHsgQmFja2Ryb3BVSSB9IHtcblx0XHRib3JkZXI6IG5vbmU7XG5cdH1cblxuXHQvKiBTcGVjaWZpY2l0eSByZXF1aXJlZCB0byBvdmVyY29tZSBVbml0Q29udHJvbCBwYWRkaW5nICovXG5cdC8qIFNlZSBwYWNrYWdlcy9jb21wb25lbnRzL3NyYy91bml0LWNvbnRyb2wvc3R5bGVzL3VuaXQtY29udHJvbC1zdHlsZXMudHMgKi9cblx0JiYmIGlucHV0IHtcblx0XHQkeyBydGwoIHsgcGFkZGluZ1JpZ2h0OiAwIH0gKSgpIH1cblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xTdHlsZVBpY2tlciA9IGNzc2Bcblx0JHsgU3R5bGVkTGFiZWwgfSB7XG5cdFx0JHsgbGFiZWxTdHlsZXMgfVxuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyU3R5bGVCdXR0b24gPSBjc3NgXG5cdCYmJiYmIHtcblx0XHRtaW4td2lkdGg6IDMwcHg7XG5cdFx0d2lkdGg6IDMwcHg7XG5cdFx0aGVpZ2h0OiAzMHB4O1xuXHRcdHBhZGRpbmc6IDNweDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlclNsaWRlciA9ICgpID0+IGNzc2Bcblx0ZmxleDogMSAxIDYwJTtcblx0JHsgcnRsKCB7IG1hcmdpblJpZ2h0OiBzcGFjZSggMyApIH0gKSgpIH1cblxuXHQkeyBTdHlsZWRGaWVsZCB9IHtcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xuXHRcdGZvbnQtc2l6ZTogMDtcblx0XHRkaXNwbGF5OiBmbGV4O1xuXHR9XG5gO1xuIl19 */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};
export const borderControl = process.env.NODE_ENV === "production" ? {
  name: "bjn8wh",
  styles: "position:relative"
} : {
  name: "1aimwta-borderControl",
  styles: "position:relative;label:borderControl;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXdCZ0MiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9ib3JkZXItY29udHJvbC9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgdHlwZSB7IENTU1Byb3BlcnRpZXMgfSBmcm9tICdyZWFjdCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IENPTE9SUywgQ09ORklHLCBydGwgfSBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uL3VpL3V0aWxzL3NwYWNlJztcbmltcG9ydCB7XG5cdFN0eWxlZEZpZWxkLFxuXHRTdHlsZWRMYWJlbCxcbn0gZnJvbSAnLi4vYmFzZS1jb250cm9sL3N0eWxlcy9iYXNlLWNvbnRyb2wtc3R5bGVzJztcbmltcG9ydCB7IEJhY2tkcm9wVUkgfSBmcm9tICcuLi9pbnB1dC1jb250cm9sL3N0eWxlcy9pbnB1dC1jb250cm9sLXN0eWxlcyc7XG5pbXBvcnQgeyBSb290IGFzIFVuaXRDb250cm9sV3JhcHBlciB9IGZyb20gJy4uL3VuaXQtY29udHJvbC9zdHlsZXMvdW5pdC1jb250cm9sLXN0eWxlcyc7XG5cbmltcG9ydCB0eXBlIHsgQm9yZGVyIH0gZnJvbSAnLi90eXBlcyc7XG5cbmNvbnN0IGxhYmVsU3R5bGVzID0gY3NzYFxuXHRmb250LXdlaWdodDogNTAwO1xuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2wgPSBjc3NgXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcbmA7XG5cbmV4cG9ydCBjb25zdCBpbm5lcldyYXBwZXIgPSAoKSA9PiBjc3NgXG5cdGJvcmRlcjogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH07XG5cdGJvcmRlci1yYWRpdXM6IDJweDtcblx0ZmxleDogMSAwIDQwJTtcblxuXHQvKlxuXHQgKiBOZWVkcyBtb3JlIHRob3VnaHQuIEFpbSBpcyB0byBwcmV2ZW50IHRoZSBib3JkZXIgZm9yIEJvcmRlckJveENvbnRyb2xcblx0ICogc2hvd2luZyB0aHJvdWdoIHRoZSBjb250cm9sLiBMaWtlbHkgbmVlZHMgdG8gdGFrZSBpbnRvIGFjY291bnRcblx0ICogbGlnaHQvZGFyayB0aGVtZXMgZXRjLlxuXHQgKi9cblx0YmFja2dyb3VuZDogI2ZmZjtcblxuXHQvKlxuXHQgKiBGb3JjZXMgdGhlIHdpZHRoIGNvbnRyb2wgdG8gZmlsbCBhdmFpbGFibGUgc3BhY2UgZ2l2ZW4gVW5pdENvbnRyb2xcblx0ICogcGFzc2VzIGl0cyBjbGFzc05hbWUgZGlyZWN0bHkgdGhyb3VnaCB0byB0aGUgaW5wdXQuXG5cdCAqL1xuXHQkeyBVbml0Q29udHJvbFdyYXBwZXIgfSB7XG5cdFx0ZmxleDogMTtcblx0XHQkeyBydGwoIHsgbWFyZ2luTGVmdDogMCB9ICkoKSB9XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCB3cmFwcGVyV2lkdGggPSAoIHdpZHRoOiBDU1NQcm9wZXJ0aWVzWyAnd2lkdGgnIF0gKSA9PiB7XG5cdHJldHVybiBjc3NgXG5cdFx0d2lkdGg6ICR7IHdpZHRoIH07XG5cdFx0ZmxleDogMCAwIGF1dG87XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbERyb3Bkb3duID0gKCkgPT4gY3NzYFxuXHRiYWNrZ3JvdW5kOiAjZmZmO1xuXHQkeyBydGwoXG5cdFx0e1xuXHRcdFx0Ym9yZGVyUmFkaXVzOiBgMXB4IDAgMCAxcHhgLFxuXHRcdFx0Ym9yZGVyUmlnaHQ6IGAkeyBDT05GSUcuYm9yZGVyV2lkdGggfSBzb2xpZCAkeyBDT0xPUlMuZ3JheVsgMjAwIF0gfWAsXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRib3JkZXJSYWRpdXM6IGAwIDFweCAxcHggMGAsXG5cdFx0XHRib3JkZXJMZWZ0OiBgJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH1gLFxuXHRcdH1cblx0KSgpIH1cblxuXHQmJiA+IGJ1dHRvbiB7XG5cdFx0cGFkZGluZzogJHsgc3BhY2UoIDEgKSB9O1xuXHRcdGJvcmRlci1yYWRpdXM6IGluaGVyaXQ7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBjb2xvckluZGljYXRvckJvcmRlciA9ICggYm9yZGVyPzogQm9yZGVyICkgPT4ge1xuXHRjb25zdCB7IGNvbG9yLCBzdHlsZSB9ID0gYm9yZGVyIHx8IHt9O1xuXG5cdGNvbnN0IGZhbGxiYWNrQ29sb3IgPVxuXHRcdCEhIHN0eWxlICYmIHN0eWxlICE9PSAnbm9uZScgPyBDT0xPUlMuZ3JheVsgMzAwIF0gOiB1bmRlZmluZWQ7XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRib3JkZXItc3R5bGU6ICR7IHN0eWxlID09PSAnbm9uZScgPyAnc29saWQnIDogc3R5bGUgfTtcblx0XHRib3JkZXItY29sb3I6ICR7IGNvbG9yIHx8IGZhbGxiYWNrQ29sb3IgfTtcblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBjb2xvckluZGljYXRvcldyYXBwZXIgPSAoIGJvcmRlcj86IEJvcmRlciApID0+IHtcblx0Y29uc3QgeyBzdHlsZSB9ID0gYm9yZGVyIHx8IHt9O1xuXG5cdHJldHVybiBjc3NgXG5cdFx0Ym9yZGVyLXJhZGl1czogOTk5OXB4O1xuXHRcdGJvcmRlcjogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuXHRcdCR7IHN0eWxlID8gY29sb3JJbmRpY2F0b3JCb3JkZXIoIGJvcmRlciApIDogdW5kZWZpbmVkIH1cblx0XHR3aWR0aDogMjhweDtcblx0XHRoZWlnaHQ6IDI4cHg7XG5cdFx0cGFkZGluZzogMnB4O1xuXG5cdFx0Lypcblx0XHQgKiBDb2xvckluZGljYXRvclxuXHRcdCAqXG5cdFx0ICogVGhlIHRyYW5zcGFyZW50IGNvbG9ycyB1c2VkIGhlcmUgZW5zdXJlIHZpc2liaWxpdHkgb2YgdGhlIGluZGljYXRvclxuXHRcdCAqIG92ZXIgdGhlIGFjdGl2ZSBzdGF0ZSBvZiB0aGUgYm9yZGVyIGNvbnRyb2wgZHJvcGRvd24ncyB0b2dnbGUgYnV0dG9uLlxuXHRcdCAqL1xuXHRcdCYgPiBzcGFuIHtcblx0XHRcdGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChcblx0XHRcdFx0LTQ1ZGVnLFxuXHRcdFx0XHR0cmFuc3BhcmVudCA0OCUsXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA0OCUsXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA1MiUsXG5cdFx0XHRcdHRyYW5zcGFyZW50IDUyJVxuXHRcdFx0KTtcblx0XHR9XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXIgPSBjc3NgXG5cdC8qIFJlbW92ZSBwYWRkaW5nIGZyb20gY29udGVudCwgdGhpcyB3aWxsIGJlIHJlLWFkZGVkIHZpYSBpbm5lciBlbGVtZW50cyovXG5cdCYmID4gZGl2ID4gZGl2IHtcblx0XHRwYWRkaW5nOiAwO1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXJDb250cm9scyA9IGNzc2Bcblx0cGFkZGluZzogJHsgc3BhY2UoIDIgKSB9O1xuXG5cdD4gZGl2OmZpcnN0LW9mLXR5cGUgPiAkeyBTdHlsZWRMYWJlbCB9IHtcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xuXHRcdCR7IGxhYmVsU3R5bGVzIH1cblx0fVxuXG5cdCYmICR7IFN0eWxlZExhYmVsIH0gKyBidXR0b246bm90KCAuaGFzLXRleHQgKSB7XG5cdFx0bWluLXdpZHRoOiAyNHB4O1xuXHRcdHBhZGRpbmc6IDA7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sUG9wb3ZlckNvbnRlbnQgPSBjc3NgYDtcbmV4cG9ydCBjb25zdCBib3JkZXJDb2xvckluZGljYXRvciA9IGNzc2BgO1xuXG5leHBvcnQgY29uc3QgcmVzZXRCdXR0b24gPSBjc3NgXG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXHR3aWR0aDogMTAwJTtcblxuXHQvKiBPdmVycmlkZSBidXR0b24gY29tcG9uZW50IHN0eWxpbmcgKi9cblx0JiYge1xuXHRcdGJvcmRlci10b3A6ICR7IENPTkZJRy5ib3JkZXJXaWR0aCB9IHNvbGlkICR7IENPTE9SUy5ncmF5WyAyMDAgXSB9O1xuXHRcdGhlaWdodDogNDZweDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlcldpZHRoQ29udHJvbCA9ICgpID0+IGNzc2Bcblx0LyogVGFyZ2V0IHRoZSBJbnB1dENvbnRyb2wncyBiYWNrZHJvcCAqL1xuXHQmJiYgJHsgQmFja2Ryb3BVSSB9IHtcblx0XHRib3JkZXI6IG5vbmU7XG5cdH1cblxuXHQvKiBTcGVjaWZpY2l0eSByZXF1aXJlZCB0byBvdmVyY29tZSBVbml0Q29udHJvbCBwYWRkaW5nICovXG5cdC8qIFNlZSBwYWNrYWdlcy9jb21wb25lbnRzL3NyYy91bml0LWNvbnRyb2wvc3R5bGVzL3VuaXQtY29udHJvbC1zdHlsZXMudHMgKi9cblx0JiYmIGlucHV0IHtcblx0XHQkeyBydGwoIHsgcGFkZGluZ1JpZ2h0OiAwIH0gKSgpIH1cblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xTdHlsZVBpY2tlciA9IGNzc2Bcblx0JHsgU3R5bGVkTGFiZWwgfSB7XG5cdFx0JHsgbGFiZWxTdHlsZXMgfVxuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyU3R5bGVCdXR0b24gPSBjc3NgXG5cdCYmJiYmIHtcblx0XHRtaW4td2lkdGg6IDMwcHg7XG5cdFx0d2lkdGg6IDMwcHg7XG5cdFx0aGVpZ2h0OiAzMHB4O1xuXHRcdHBhZGRpbmc6IDNweDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlclNsaWRlciA9ICgpID0+IGNzc2Bcblx0ZmxleDogMSAxIDYwJTtcblx0JHsgcnRsKCB7IG1hcmdpblJpZ2h0OiBzcGFjZSggMyApIH0gKSgpIH1cblxuXHQkeyBTdHlsZWRGaWVsZCB9IHtcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xuXHRcdGZvbnQtc2l6ZTogMDtcblx0XHRkaXNwbGF5OiBmbGV4O1xuXHR9XG5gO1xuIl19 */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};
export const innerWrapper = () => /*#__PURE__*/css("border:", CONFIG.borderWidth, " solid ", COLORS.gray[200], ";border-radius:2px;flex:1 0 40%;background:#fff;", UnitControlWrapper, "{flex:1;", rtl({
  marginLeft: 0
})(), ";}" + (process.env.NODE_ENV === "production" ? "" : ";label:innerWrapper;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTRCcUMiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9ib3JkZXItY29udHJvbC9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgdHlwZSB7IENTU1Byb3BlcnRpZXMgfSBmcm9tICdyZWFjdCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IENPTE9SUywgQ09ORklHLCBydGwgfSBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uL3VpL3V0aWxzL3NwYWNlJztcbmltcG9ydCB7XG5cdFN0eWxlZEZpZWxkLFxuXHRTdHlsZWRMYWJlbCxcbn0gZnJvbSAnLi4vYmFzZS1jb250cm9sL3N0eWxlcy9iYXNlLWNvbnRyb2wtc3R5bGVzJztcbmltcG9ydCB7IEJhY2tkcm9wVUkgfSBmcm9tICcuLi9pbnB1dC1jb250cm9sL3N0eWxlcy9pbnB1dC1jb250cm9sLXN0eWxlcyc7XG5pbXBvcnQgeyBSb290IGFzIFVuaXRDb250cm9sV3JhcHBlciB9IGZyb20gJy4uL3VuaXQtY29udHJvbC9zdHlsZXMvdW5pdC1jb250cm9sLXN0eWxlcyc7XG5cbmltcG9ydCB0eXBlIHsgQm9yZGVyIH0gZnJvbSAnLi90eXBlcyc7XG5cbmNvbnN0IGxhYmVsU3R5bGVzID0gY3NzYFxuXHRmb250LXdlaWdodDogNTAwO1xuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2wgPSBjc3NgXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcbmA7XG5cbmV4cG9ydCBjb25zdCBpbm5lcldyYXBwZXIgPSAoKSA9PiBjc3NgXG5cdGJvcmRlcjogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH07XG5cdGJvcmRlci1yYWRpdXM6IDJweDtcblx0ZmxleDogMSAwIDQwJTtcblxuXHQvKlxuXHQgKiBOZWVkcyBtb3JlIHRob3VnaHQuIEFpbSBpcyB0byBwcmV2ZW50IHRoZSBib3JkZXIgZm9yIEJvcmRlckJveENvbnRyb2xcblx0ICogc2hvd2luZyB0aHJvdWdoIHRoZSBjb250cm9sLiBMaWtlbHkgbmVlZHMgdG8gdGFrZSBpbnRvIGFjY291bnRcblx0ICogbGlnaHQvZGFyayB0aGVtZXMgZXRjLlxuXHQgKi9cblx0YmFja2dyb3VuZDogI2ZmZjtcblxuXHQvKlxuXHQgKiBGb3JjZXMgdGhlIHdpZHRoIGNvbnRyb2wgdG8gZmlsbCBhdmFpbGFibGUgc3BhY2UgZ2l2ZW4gVW5pdENvbnRyb2xcblx0ICogcGFzc2VzIGl0cyBjbGFzc05hbWUgZGlyZWN0bHkgdGhyb3VnaCB0byB0aGUgaW5wdXQuXG5cdCAqL1xuXHQkeyBVbml0Q29udHJvbFdyYXBwZXIgfSB7XG5cdFx0ZmxleDogMTtcblx0XHQkeyBydGwoIHsgbWFyZ2luTGVmdDogMCB9ICkoKSB9XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCB3cmFwcGVyV2lkdGggPSAoIHdpZHRoOiBDU1NQcm9wZXJ0aWVzWyAnd2lkdGgnIF0gKSA9PiB7XG5cdHJldHVybiBjc3NgXG5cdFx0d2lkdGg6ICR7IHdpZHRoIH07XG5cdFx0ZmxleDogMCAwIGF1dG87XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbERyb3Bkb3duID0gKCkgPT4gY3NzYFxuXHRiYWNrZ3JvdW5kOiAjZmZmO1xuXHQkeyBydGwoXG5cdFx0e1xuXHRcdFx0Ym9yZGVyUmFkaXVzOiBgMXB4IDAgMCAxcHhgLFxuXHRcdFx0Ym9yZGVyUmlnaHQ6IGAkeyBDT05GSUcuYm9yZGVyV2lkdGggfSBzb2xpZCAkeyBDT0xPUlMuZ3JheVsgMjAwIF0gfWAsXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRib3JkZXJSYWRpdXM6IGAwIDFweCAxcHggMGAsXG5cdFx0XHRib3JkZXJMZWZ0OiBgJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH1gLFxuXHRcdH1cblx0KSgpIH1cblxuXHQmJiA+IGJ1dHRvbiB7XG5cdFx0cGFkZGluZzogJHsgc3BhY2UoIDEgKSB9O1xuXHRcdGJvcmRlci1yYWRpdXM6IGluaGVyaXQ7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBjb2xvckluZGljYXRvckJvcmRlciA9ICggYm9yZGVyPzogQm9yZGVyICkgPT4ge1xuXHRjb25zdCB7IGNvbG9yLCBzdHlsZSB9ID0gYm9yZGVyIHx8IHt9O1xuXG5cdGNvbnN0IGZhbGxiYWNrQ29sb3IgPVxuXHRcdCEhIHN0eWxlICYmIHN0eWxlICE9PSAnbm9uZScgPyBDT0xPUlMuZ3JheVsgMzAwIF0gOiB1bmRlZmluZWQ7XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRib3JkZXItc3R5bGU6ICR7IHN0eWxlID09PSAnbm9uZScgPyAnc29saWQnIDogc3R5bGUgfTtcblx0XHRib3JkZXItY29sb3I6ICR7IGNvbG9yIHx8IGZhbGxiYWNrQ29sb3IgfTtcblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBjb2xvckluZGljYXRvcldyYXBwZXIgPSAoIGJvcmRlcj86IEJvcmRlciApID0+IHtcblx0Y29uc3QgeyBzdHlsZSB9ID0gYm9yZGVyIHx8IHt9O1xuXG5cdHJldHVybiBjc3NgXG5cdFx0Ym9yZGVyLXJhZGl1czogOTk5OXB4O1xuXHRcdGJvcmRlcjogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuXHRcdCR7IHN0eWxlID8gY29sb3JJbmRpY2F0b3JCb3JkZXIoIGJvcmRlciApIDogdW5kZWZpbmVkIH1cblx0XHR3aWR0aDogMjhweDtcblx0XHRoZWlnaHQ6IDI4cHg7XG5cdFx0cGFkZGluZzogMnB4O1xuXG5cdFx0Lypcblx0XHQgKiBDb2xvckluZGljYXRvclxuXHRcdCAqXG5cdFx0ICogVGhlIHRyYW5zcGFyZW50IGNvbG9ycyB1c2VkIGhlcmUgZW5zdXJlIHZpc2liaWxpdHkgb2YgdGhlIGluZGljYXRvclxuXHRcdCAqIG92ZXIgdGhlIGFjdGl2ZSBzdGF0ZSBvZiB0aGUgYm9yZGVyIGNvbnRyb2wgZHJvcGRvd24ncyB0b2dnbGUgYnV0dG9uLlxuXHRcdCAqL1xuXHRcdCYgPiBzcGFuIHtcblx0XHRcdGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChcblx0XHRcdFx0LTQ1ZGVnLFxuXHRcdFx0XHR0cmFuc3BhcmVudCA0OCUsXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA0OCUsXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA1MiUsXG5cdFx0XHRcdHRyYW5zcGFyZW50IDUyJVxuXHRcdFx0KTtcblx0XHR9XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXIgPSBjc3NgXG5cdC8qIFJlbW92ZSBwYWRkaW5nIGZyb20gY29udGVudCwgdGhpcyB3aWxsIGJlIHJlLWFkZGVkIHZpYSBpbm5lciBlbGVtZW50cyovXG5cdCYmID4gZGl2ID4gZGl2IHtcblx0XHRwYWRkaW5nOiAwO1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXJDb250cm9scyA9IGNzc2Bcblx0cGFkZGluZzogJHsgc3BhY2UoIDIgKSB9O1xuXG5cdD4gZGl2OmZpcnN0LW9mLXR5cGUgPiAkeyBTdHlsZWRMYWJlbCB9IHtcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xuXHRcdCR7IGxhYmVsU3R5bGVzIH1cblx0fVxuXG5cdCYmICR7IFN0eWxlZExhYmVsIH0gKyBidXR0b246bm90KCAuaGFzLXRleHQgKSB7XG5cdFx0bWluLXdpZHRoOiAyNHB4O1xuXHRcdHBhZGRpbmc6IDA7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sUG9wb3ZlckNvbnRlbnQgPSBjc3NgYDtcbmV4cG9ydCBjb25zdCBib3JkZXJDb2xvckluZGljYXRvciA9IGNzc2BgO1xuXG5leHBvcnQgY29uc3QgcmVzZXRCdXR0b24gPSBjc3NgXG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXHR3aWR0aDogMTAwJTtcblxuXHQvKiBPdmVycmlkZSBidXR0b24gY29tcG9uZW50IHN0eWxpbmcgKi9cblx0JiYge1xuXHRcdGJvcmRlci10b3A6ICR7IENPTkZJRy5ib3JkZXJXaWR0aCB9IHNvbGlkICR7IENPTE9SUy5ncmF5WyAyMDAgXSB9O1xuXHRcdGhlaWdodDogNDZweDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlcldpZHRoQ29udHJvbCA9ICgpID0+IGNzc2Bcblx0LyogVGFyZ2V0IHRoZSBJbnB1dENvbnRyb2wncyBiYWNrZHJvcCAqL1xuXHQmJiYgJHsgQmFja2Ryb3BVSSB9IHtcblx0XHRib3JkZXI6IG5vbmU7XG5cdH1cblxuXHQvKiBTcGVjaWZpY2l0eSByZXF1aXJlZCB0byBvdmVyY29tZSBVbml0Q29udHJvbCBwYWRkaW5nICovXG5cdC8qIFNlZSBwYWNrYWdlcy9jb21wb25lbnRzL3NyYy91bml0LWNvbnRyb2wvc3R5bGVzL3VuaXQtY29udHJvbC1zdHlsZXMudHMgKi9cblx0JiYmIGlucHV0IHtcblx0XHQkeyBydGwoIHsgcGFkZGluZ1JpZ2h0OiAwIH0gKSgpIH1cblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xTdHlsZVBpY2tlciA9IGNzc2Bcblx0JHsgU3R5bGVkTGFiZWwgfSB7XG5cdFx0JHsgbGFiZWxTdHlsZXMgfVxuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyU3R5bGVCdXR0b24gPSBjc3NgXG5cdCYmJiYmIHtcblx0XHRtaW4td2lkdGg6IDMwcHg7XG5cdFx0d2lkdGg6IDMwcHg7XG5cdFx0aGVpZ2h0OiAzMHB4O1xuXHRcdHBhZGRpbmc6IDNweDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlclNsaWRlciA9ICgpID0+IGNzc2Bcblx0ZmxleDogMSAxIDYwJTtcblx0JHsgcnRsKCB7IG1hcmdpblJpZ2h0OiBzcGFjZSggMyApIH0gKSgpIH1cblxuXHQkeyBTdHlsZWRGaWVsZCB9IHtcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xuXHRcdGZvbnQtc2l6ZTogMDtcblx0XHRkaXNwbGF5OiBmbGV4O1xuXHR9XG5gO1xuIl19 */");
export const wrapperWidth = width => {
  return /*#__PURE__*/css("width:", width, ";flex:0 0 auto;" + (process.env.NODE_ENV === "production" ? "" : ";label:wrapperWidth;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW1EVyIsImZpbGUiOiJAd29yZHByZXNzL2NvbXBvbmVudHMvc3JjL2JvcmRlci1jb250cm9sL3N0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB0eXBlIHsgQ1NTUHJvcGVydGllcyB9IGZyb20gJ3JlYWN0JztcblxuLyoqXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgQ09MT1JTLCBDT05GSUcsIHJ0bCB9IGZyb20gJy4uL3V0aWxzJztcbmltcG9ydCB7IHNwYWNlIH0gZnJvbSAnLi4vdWkvdXRpbHMvc3BhY2UnO1xuaW1wb3J0IHtcblx0U3R5bGVkRmllbGQsXG5cdFN0eWxlZExhYmVsLFxufSBmcm9tICcuLi9iYXNlLWNvbnRyb2wvc3R5bGVzL2Jhc2UtY29udHJvbC1zdHlsZXMnO1xuaW1wb3J0IHsgQmFja2Ryb3BVSSB9IGZyb20gJy4uL2lucHV0LWNvbnRyb2wvc3R5bGVzL2lucHV0LWNvbnRyb2wtc3R5bGVzJztcbmltcG9ydCB7IFJvb3QgYXMgVW5pdENvbnRyb2xXcmFwcGVyIH0gZnJvbSAnLi4vdW5pdC1jb250cm9sL3N0eWxlcy91bml0LWNvbnRyb2wtc3R5bGVzJztcblxuaW1wb3J0IHR5cGUgeyBCb3JkZXIgfSBmcm9tICcuL3R5cGVzJztcblxuY29uc3QgbGFiZWxTdHlsZXMgPSBjc3NgXG5cdGZvbnQtd2VpZ2h0OiA1MDA7XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbCA9IGNzc2Bcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuYDtcblxuZXhwb3J0IGNvbnN0IGlubmVyV3JhcHBlciA9ICgpID0+IGNzc2Bcblx0Ym9yZGVyOiAkeyBDT05GSUcuYm9yZGVyV2lkdGggfSBzb2xpZCAkeyBDT0xPUlMuZ3JheVsgMjAwIF0gfTtcblx0Ym9yZGVyLXJhZGl1czogMnB4O1xuXHRmbGV4OiAxIDAgNDAlO1xuXG5cdC8qXG5cdCAqIE5lZWRzIG1vcmUgdGhvdWdodC4gQWltIGlzIHRvIHByZXZlbnQgdGhlIGJvcmRlciBmb3IgQm9yZGVyQm94Q29udHJvbFxuXHQgKiBzaG93aW5nIHRocm91Z2ggdGhlIGNvbnRyb2wuIExpa2VseSBuZWVkcyB0byB0YWtlIGludG8gYWNjb3VudFxuXHQgKiBsaWdodC9kYXJrIHRoZW1lcyBldGMuXG5cdCAqL1xuXHRiYWNrZ3JvdW5kOiAjZmZmO1xuXG5cdC8qXG5cdCAqIEZvcmNlcyB0aGUgd2lkdGggY29udHJvbCB0byBmaWxsIGF2YWlsYWJsZSBzcGFjZSBnaXZlbiBVbml0Q29udHJvbFxuXHQgKiBwYXNzZXMgaXRzIGNsYXNzTmFtZSBkaXJlY3RseSB0aHJvdWdoIHRvIHRoZSBpbnB1dC5cblx0ICovXG5cdCR7IFVuaXRDb250cm9sV3JhcHBlciB9IHtcblx0XHRmbGV4OiAxO1xuXHRcdCR7IHJ0bCggeyBtYXJnaW5MZWZ0OiAwIH0gKSgpIH1cblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IHdyYXBwZXJXaWR0aCA9ICggd2lkdGg6IENTU1Byb3BlcnRpZXNbICd3aWR0aCcgXSApID0+IHtcblx0cmV0dXJuIGNzc2Bcblx0XHR3aWR0aDogJHsgd2lkdGggfTtcblx0XHRmbGV4OiAwIDAgYXV0bztcblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sRHJvcGRvd24gPSAoKSA9PiBjc3NgXG5cdGJhY2tncm91bmQ6ICNmZmY7XG5cdCR7IHJ0bChcblx0XHR7XG5cdFx0XHRib3JkZXJSYWRpdXM6IGAxcHggMCAwIDFweGAsXG5cdFx0XHRib3JkZXJSaWdodDogYCR7IENPTkZJRy5ib3JkZXJXaWR0aCB9IHNvbGlkICR7IENPTE9SUy5ncmF5WyAyMDAgXSB9YCxcblx0XHR9LFxuXHRcdHtcblx0XHRcdGJvcmRlclJhZGl1czogYDAgMXB4IDFweCAwYCxcblx0XHRcdGJvcmRlckxlZnQ6IGAkeyBDT05GSUcuYm9yZGVyV2lkdGggfSBzb2xpZCAkeyBDT0xPUlMuZ3JheVsgMjAwIF0gfWAsXG5cdFx0fVxuXHQpKCkgfVxuXG5cdCYmID4gYnV0dG9uIHtcblx0XHRwYWRkaW5nOiAkeyBzcGFjZSggMSApIH07XG5cdFx0Ym9yZGVyLXJhZGl1czogaW5oZXJpdDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGNvbG9ySW5kaWNhdG9yQm9yZGVyID0gKCBib3JkZXI/OiBCb3JkZXIgKSA9PiB7XG5cdGNvbnN0IHsgY29sb3IsIHN0eWxlIH0gPSBib3JkZXIgfHwge307XG5cblx0Y29uc3QgZmFsbGJhY2tDb2xvciA9XG5cdFx0ISEgc3R5bGUgJiYgc3R5bGUgIT09ICdub25lJyA/IENPTE9SUy5ncmF5WyAzMDAgXSA6IHVuZGVmaW5lZDtcblxuXHRyZXR1cm4gY3NzYFxuXHRcdGJvcmRlci1zdHlsZTogJHsgc3R5bGUgPT09ICdub25lJyA/ICdzb2xpZCcgOiBzdHlsZSB9O1xuXHRcdGJvcmRlci1jb2xvcjogJHsgY29sb3IgfHwgZmFsbGJhY2tDb2xvciB9O1xuXHRgO1xufTtcblxuZXhwb3J0IGNvbnN0IGNvbG9ySW5kaWNhdG9yV3JhcHBlciA9ICggYm9yZGVyPzogQm9yZGVyICkgPT4ge1xuXHRjb25zdCB7IHN0eWxlIH0gPSBib3JkZXIgfHwge307XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRib3JkZXItcmFkaXVzOiA5OTk5cHg7XG5cdFx0Ym9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XG5cdFx0JHsgc3R5bGUgPyBjb2xvckluZGljYXRvckJvcmRlciggYm9yZGVyICkgOiB1bmRlZmluZWQgfVxuXHRcdHdpZHRoOiAyOHB4O1xuXHRcdGhlaWdodDogMjhweDtcblx0XHRwYWRkaW5nOiAycHg7XG5cblx0XHQvKlxuXHRcdCAqIENvbG9ySW5kaWNhdG9yXG5cdFx0ICpcblx0XHQgKiBUaGUgdHJhbnNwYXJlbnQgY29sb3JzIHVzZWQgaGVyZSBlbnN1cmUgdmlzaWJpbGl0eSBvZiB0aGUgaW5kaWNhdG9yXG5cdFx0ICogb3ZlciB0aGUgYWN0aXZlIHN0YXRlIG9mIHRoZSBib3JkZXIgY29udHJvbCBkcm9wZG93bidzIHRvZ2dsZSBidXR0b24uXG5cdFx0ICovXG5cdFx0JiA+IHNwYW4ge1xuXHRcdFx0YmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KFxuXHRcdFx0XHQtNDVkZWcsXG5cdFx0XHRcdHRyYW5zcGFyZW50IDQ4JSxcblx0XHRcdFx0cmdiKCAwIDAgMCAvIDIwJSApIDQ4JSxcblx0XHRcdFx0cmdiKCAwIDAgMCAvIDIwJSApIDUyJSxcblx0XHRcdFx0dHJhbnNwYXJlbnQgNTIlXG5cdFx0XHQpO1xuXHRcdH1cblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sUG9wb3ZlciA9IGNzc2Bcblx0LyogUmVtb3ZlIHBhZGRpbmcgZnJvbSBjb250ZW50LCB0aGlzIHdpbGwgYmUgcmUtYWRkZWQgdmlhIGlubmVyIGVsZW1lbnRzKi9cblx0JiYgPiBkaXYgPiBkaXYge1xuXHRcdHBhZGRpbmc6IDA7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sUG9wb3ZlckNvbnRyb2xzID0gY3NzYFxuXHRwYWRkaW5nOiAkeyBzcGFjZSggMiApIH07XG5cblx0PiBkaXY6Zmlyc3Qtb2YtdHlwZSA+ICR7IFN0eWxlZExhYmVsIH0ge1xuXHRcdG1hcmdpbi1ib3R0b206IDA7XG5cdFx0JHsgbGFiZWxTdHlsZXMgfVxuXHR9XG5cblx0JiYgJHsgU3R5bGVkTGFiZWwgfSArIGJ1dHRvbjpub3QoIC5oYXMtdGV4dCApIHtcblx0XHRtaW4td2lkdGg6IDI0cHg7XG5cdFx0cGFkZGluZzogMDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xQb3BvdmVyQ29udGVudCA9IGNzc2BgO1xuZXhwb3J0IGNvbnN0IGJvcmRlckNvbG9ySW5kaWNhdG9yID0gY3NzYGA7XG5cbmV4cG9ydCBjb25zdCByZXNldEJ1dHRvbiA9IGNzc2Bcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cdHdpZHRoOiAxMDAlO1xuXG5cdC8qIE92ZXJyaWRlIGJ1dHRvbiBjb21wb25lbnQgc3R5bGluZyAqL1xuXHQmJiB7XG5cdFx0Ym9yZGVyLXRvcDogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH07XG5cdFx0aGVpZ2h0OiA0NnB4O1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyV2lkdGhDb250cm9sID0gKCkgPT4gY3NzYFxuXHQvKiBUYXJnZXQgdGhlIElucHV0Q29udHJvbCdzIGJhY2tkcm9wICovXG5cdCYmJiAkeyBCYWNrZHJvcFVJIH0ge1xuXHRcdGJvcmRlcjogbm9uZTtcblx0fVxuXG5cdC8qIFNwZWNpZmljaXR5IHJlcXVpcmVkIHRvIG92ZXJjb21lIFVuaXRDb250cm9sIHBhZGRpbmcgKi9cblx0LyogU2VlIHBhY2thZ2VzL2NvbXBvbmVudHMvc3JjL3VuaXQtY29udHJvbC9zdHlsZXMvdW5pdC1jb250cm9sLXN0eWxlcy50cyAqL1xuXHQmJiYgaW5wdXQge1xuXHRcdCR7IHJ0bCggeyBwYWRkaW5nUmlnaHQ6IDAgfSApKCkgfVxuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFN0eWxlUGlja2VyID0gY3NzYFxuXHQkeyBTdHlsZWRMYWJlbCB9IHtcblx0XHQkeyBsYWJlbFN0eWxlcyB9XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJTdHlsZUJ1dHRvbiA9IGNzc2Bcblx0JiYmJiYge1xuXHRcdG1pbi13aWR0aDogMzBweDtcblx0XHR3aWR0aDogMzBweDtcblx0XHRoZWlnaHQ6IDMwcHg7XG5cdFx0cGFkZGluZzogM3B4O1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyU2xpZGVyID0gKCkgPT4gY3NzYFxuXHRmbGV4OiAxIDEgNjAlO1xuXHQkeyBydGwoIHsgbWFyZ2luUmlnaHQ6IHNwYWNlKCAzICkgfSApKCkgfVxuXG5cdCR7IFN0eWxlZEZpZWxkIH0ge1xuXHRcdG1hcmdpbi1ib3R0b206IDA7XG5cdFx0Zm9udC1zaXplOiAwO1xuXHRcdGRpc3BsYXk6IGZsZXg7XG5cdH1cbmA7XG4iXX0= */");
};
export const borderControlDropdown = () => /*#__PURE__*/css("background:#fff;", rtl({
  borderRadius: `1px 0 0 1px`,
  borderRight: `${CONFIG.borderWidth} solid ${COLORS.gray[200]}`
}, {
  borderRadius: `0 1px 1px 0`,
  borderLeft: `${CONFIG.borderWidth} solid ${COLORS.gray[200]}`
})(), " &&>button{padding:", space(1), ";border-radius:inherit;}" + (process.env.NODE_ENV === "production" ? "" : ";label:borderControlDropdown;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlEOEMiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9ib3JkZXItY29udHJvbC9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgdHlwZSB7IENTU1Byb3BlcnRpZXMgfSBmcm9tICdyZWFjdCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IENPTE9SUywgQ09ORklHLCBydGwgfSBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uL3VpL3V0aWxzL3NwYWNlJztcbmltcG9ydCB7XG5cdFN0eWxlZEZpZWxkLFxuXHRTdHlsZWRMYWJlbCxcbn0gZnJvbSAnLi4vYmFzZS1jb250cm9sL3N0eWxlcy9iYXNlLWNvbnRyb2wtc3R5bGVzJztcbmltcG9ydCB7IEJhY2tkcm9wVUkgfSBmcm9tICcuLi9pbnB1dC1jb250cm9sL3N0eWxlcy9pbnB1dC1jb250cm9sLXN0eWxlcyc7XG5pbXBvcnQgeyBSb290IGFzIFVuaXRDb250cm9sV3JhcHBlciB9IGZyb20gJy4uL3VuaXQtY29udHJvbC9zdHlsZXMvdW5pdC1jb250cm9sLXN0eWxlcyc7XG5cbmltcG9ydCB0eXBlIHsgQm9yZGVyIH0gZnJvbSAnLi90eXBlcyc7XG5cbmNvbnN0IGxhYmVsU3R5bGVzID0gY3NzYFxuXHRmb250LXdlaWdodDogNTAwO1xuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2wgPSBjc3NgXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcbmA7XG5cbmV4cG9ydCBjb25zdCBpbm5lcldyYXBwZXIgPSAoKSA9PiBjc3NgXG5cdGJvcmRlcjogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH07XG5cdGJvcmRlci1yYWRpdXM6IDJweDtcblx0ZmxleDogMSAwIDQwJTtcblxuXHQvKlxuXHQgKiBOZWVkcyBtb3JlIHRob3VnaHQuIEFpbSBpcyB0byBwcmV2ZW50IHRoZSBib3JkZXIgZm9yIEJvcmRlckJveENvbnRyb2xcblx0ICogc2hvd2luZyB0aHJvdWdoIHRoZSBjb250cm9sLiBMaWtlbHkgbmVlZHMgdG8gdGFrZSBpbnRvIGFjY291bnRcblx0ICogbGlnaHQvZGFyayB0aGVtZXMgZXRjLlxuXHQgKi9cblx0YmFja2dyb3VuZDogI2ZmZjtcblxuXHQvKlxuXHQgKiBGb3JjZXMgdGhlIHdpZHRoIGNvbnRyb2wgdG8gZmlsbCBhdmFpbGFibGUgc3BhY2UgZ2l2ZW4gVW5pdENvbnRyb2xcblx0ICogcGFzc2VzIGl0cyBjbGFzc05hbWUgZGlyZWN0bHkgdGhyb3VnaCB0byB0aGUgaW5wdXQuXG5cdCAqL1xuXHQkeyBVbml0Q29udHJvbFdyYXBwZXIgfSB7XG5cdFx0ZmxleDogMTtcblx0XHQkeyBydGwoIHsgbWFyZ2luTGVmdDogMCB9ICkoKSB9XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCB3cmFwcGVyV2lkdGggPSAoIHdpZHRoOiBDU1NQcm9wZXJ0aWVzWyAnd2lkdGgnIF0gKSA9PiB7XG5cdHJldHVybiBjc3NgXG5cdFx0d2lkdGg6ICR7IHdpZHRoIH07XG5cdFx0ZmxleDogMCAwIGF1dG87XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbERyb3Bkb3duID0gKCkgPT4gY3NzYFxuXHRiYWNrZ3JvdW5kOiAjZmZmO1xuXHQkeyBydGwoXG5cdFx0e1xuXHRcdFx0Ym9yZGVyUmFkaXVzOiBgMXB4IDAgMCAxcHhgLFxuXHRcdFx0Ym9yZGVyUmlnaHQ6IGAkeyBDT05GSUcuYm9yZGVyV2lkdGggfSBzb2xpZCAkeyBDT0xPUlMuZ3JheVsgMjAwIF0gfWAsXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRib3JkZXJSYWRpdXM6IGAwIDFweCAxcHggMGAsXG5cdFx0XHRib3JkZXJMZWZ0OiBgJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH1gLFxuXHRcdH1cblx0KSgpIH1cblxuXHQmJiA+IGJ1dHRvbiB7XG5cdFx0cGFkZGluZzogJHsgc3BhY2UoIDEgKSB9O1xuXHRcdGJvcmRlci1yYWRpdXM6IGluaGVyaXQ7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBjb2xvckluZGljYXRvckJvcmRlciA9ICggYm9yZGVyPzogQm9yZGVyICkgPT4ge1xuXHRjb25zdCB7IGNvbG9yLCBzdHlsZSB9ID0gYm9yZGVyIHx8IHt9O1xuXG5cdGNvbnN0IGZhbGxiYWNrQ29sb3IgPVxuXHRcdCEhIHN0eWxlICYmIHN0eWxlICE9PSAnbm9uZScgPyBDT0xPUlMuZ3JheVsgMzAwIF0gOiB1bmRlZmluZWQ7XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRib3JkZXItc3R5bGU6ICR7IHN0eWxlID09PSAnbm9uZScgPyAnc29saWQnIDogc3R5bGUgfTtcblx0XHRib3JkZXItY29sb3I6ICR7IGNvbG9yIHx8IGZhbGxiYWNrQ29sb3IgfTtcblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBjb2xvckluZGljYXRvcldyYXBwZXIgPSAoIGJvcmRlcj86IEJvcmRlciApID0+IHtcblx0Y29uc3QgeyBzdHlsZSB9ID0gYm9yZGVyIHx8IHt9O1xuXG5cdHJldHVybiBjc3NgXG5cdFx0Ym9yZGVyLXJhZGl1czogOTk5OXB4O1xuXHRcdGJvcmRlcjogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuXHRcdCR7IHN0eWxlID8gY29sb3JJbmRpY2F0b3JCb3JkZXIoIGJvcmRlciApIDogdW5kZWZpbmVkIH1cblx0XHR3aWR0aDogMjhweDtcblx0XHRoZWlnaHQ6IDI4cHg7XG5cdFx0cGFkZGluZzogMnB4O1xuXG5cdFx0Lypcblx0XHQgKiBDb2xvckluZGljYXRvclxuXHRcdCAqXG5cdFx0ICogVGhlIHRyYW5zcGFyZW50IGNvbG9ycyB1c2VkIGhlcmUgZW5zdXJlIHZpc2liaWxpdHkgb2YgdGhlIGluZGljYXRvclxuXHRcdCAqIG92ZXIgdGhlIGFjdGl2ZSBzdGF0ZSBvZiB0aGUgYm9yZGVyIGNvbnRyb2wgZHJvcGRvd24ncyB0b2dnbGUgYnV0dG9uLlxuXHRcdCAqL1xuXHRcdCYgPiBzcGFuIHtcblx0XHRcdGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChcblx0XHRcdFx0LTQ1ZGVnLFxuXHRcdFx0XHR0cmFuc3BhcmVudCA0OCUsXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA0OCUsXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA1MiUsXG5cdFx0XHRcdHRyYW5zcGFyZW50IDUyJVxuXHRcdFx0KTtcblx0XHR9XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXIgPSBjc3NgXG5cdC8qIFJlbW92ZSBwYWRkaW5nIGZyb20gY29udGVudCwgdGhpcyB3aWxsIGJlIHJlLWFkZGVkIHZpYSBpbm5lciBlbGVtZW50cyovXG5cdCYmID4gZGl2ID4gZGl2IHtcblx0XHRwYWRkaW5nOiAwO1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXJDb250cm9scyA9IGNzc2Bcblx0cGFkZGluZzogJHsgc3BhY2UoIDIgKSB9O1xuXG5cdD4gZGl2OmZpcnN0LW9mLXR5cGUgPiAkeyBTdHlsZWRMYWJlbCB9IHtcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xuXHRcdCR7IGxhYmVsU3R5bGVzIH1cblx0fVxuXG5cdCYmICR7IFN0eWxlZExhYmVsIH0gKyBidXR0b246bm90KCAuaGFzLXRleHQgKSB7XG5cdFx0bWluLXdpZHRoOiAyNHB4O1xuXHRcdHBhZGRpbmc6IDA7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sUG9wb3ZlckNvbnRlbnQgPSBjc3NgYDtcbmV4cG9ydCBjb25zdCBib3JkZXJDb2xvckluZGljYXRvciA9IGNzc2BgO1xuXG5leHBvcnQgY29uc3QgcmVzZXRCdXR0b24gPSBjc3NgXG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXHR3aWR0aDogMTAwJTtcblxuXHQvKiBPdmVycmlkZSBidXR0b24gY29tcG9uZW50IHN0eWxpbmcgKi9cblx0JiYge1xuXHRcdGJvcmRlci10b3A6ICR7IENPTkZJRy5ib3JkZXJXaWR0aCB9IHNvbGlkICR7IENPTE9SUy5ncmF5WyAyMDAgXSB9O1xuXHRcdGhlaWdodDogNDZweDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlcldpZHRoQ29udHJvbCA9ICgpID0+IGNzc2Bcblx0LyogVGFyZ2V0IHRoZSBJbnB1dENvbnRyb2wncyBiYWNrZHJvcCAqL1xuXHQmJiYgJHsgQmFja2Ryb3BVSSB9IHtcblx0XHRib3JkZXI6IG5vbmU7XG5cdH1cblxuXHQvKiBTcGVjaWZpY2l0eSByZXF1aXJlZCB0byBvdmVyY29tZSBVbml0Q29udHJvbCBwYWRkaW5nICovXG5cdC8qIFNlZSBwYWNrYWdlcy9jb21wb25lbnRzL3NyYy91bml0LWNvbnRyb2wvc3R5bGVzL3VuaXQtY29udHJvbC1zdHlsZXMudHMgKi9cblx0JiYmIGlucHV0IHtcblx0XHQkeyBydGwoIHsgcGFkZGluZ1JpZ2h0OiAwIH0gKSgpIH1cblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xTdHlsZVBpY2tlciA9IGNzc2Bcblx0JHsgU3R5bGVkTGFiZWwgfSB7XG5cdFx0JHsgbGFiZWxTdHlsZXMgfVxuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyU3R5bGVCdXR0b24gPSBjc3NgXG5cdCYmJiYmIHtcblx0XHRtaW4td2lkdGg6IDMwcHg7XG5cdFx0d2lkdGg6IDMwcHg7XG5cdFx0aGVpZ2h0OiAzMHB4O1xuXHRcdHBhZGRpbmc6IDNweDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlclNsaWRlciA9ICgpID0+IGNzc2Bcblx0ZmxleDogMSAxIDYwJTtcblx0JHsgcnRsKCB7IG1hcmdpblJpZ2h0OiBzcGFjZSggMyApIH0gKSgpIH1cblxuXHQkeyBTdHlsZWRGaWVsZCB9IHtcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xuXHRcdGZvbnQtc2l6ZTogMDtcblx0XHRkaXNwbGF5OiBmbGV4O1xuXHR9XG5gO1xuIl19 */");
export const colorIndicatorBorder = border => {
  const {
    color,
    style
  } = border || {};
  const fallbackColor = !!style && style !== 'none' ? COLORS.gray[300] : undefined;
  return /*#__PURE__*/css("border-style:", style === 'none' ? 'solid' : style, ";border-color:", color || fallbackColor, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:colorIndicatorBorder;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWtGVyIsImZpbGUiOiJAd29yZHByZXNzL2NvbXBvbmVudHMvc3JjL2JvcmRlci1jb250cm9sL3N0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB0eXBlIHsgQ1NTUHJvcGVydGllcyB9IGZyb20gJ3JlYWN0JztcblxuLyoqXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgQ09MT1JTLCBDT05GSUcsIHJ0bCB9IGZyb20gJy4uL3V0aWxzJztcbmltcG9ydCB7IHNwYWNlIH0gZnJvbSAnLi4vdWkvdXRpbHMvc3BhY2UnO1xuaW1wb3J0IHtcblx0U3R5bGVkRmllbGQsXG5cdFN0eWxlZExhYmVsLFxufSBmcm9tICcuLi9iYXNlLWNvbnRyb2wvc3R5bGVzL2Jhc2UtY29udHJvbC1zdHlsZXMnO1xuaW1wb3J0IHsgQmFja2Ryb3BVSSB9IGZyb20gJy4uL2lucHV0LWNvbnRyb2wvc3R5bGVzL2lucHV0LWNvbnRyb2wtc3R5bGVzJztcbmltcG9ydCB7IFJvb3QgYXMgVW5pdENvbnRyb2xXcmFwcGVyIH0gZnJvbSAnLi4vdW5pdC1jb250cm9sL3N0eWxlcy91bml0LWNvbnRyb2wtc3R5bGVzJztcblxuaW1wb3J0IHR5cGUgeyBCb3JkZXIgfSBmcm9tICcuL3R5cGVzJztcblxuY29uc3QgbGFiZWxTdHlsZXMgPSBjc3NgXG5cdGZvbnQtd2VpZ2h0OiA1MDA7XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbCA9IGNzc2Bcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuYDtcblxuZXhwb3J0IGNvbnN0IGlubmVyV3JhcHBlciA9ICgpID0+IGNzc2Bcblx0Ym9yZGVyOiAkeyBDT05GSUcuYm9yZGVyV2lkdGggfSBzb2xpZCAkeyBDT0xPUlMuZ3JheVsgMjAwIF0gfTtcblx0Ym9yZGVyLXJhZGl1czogMnB4O1xuXHRmbGV4OiAxIDAgNDAlO1xuXG5cdC8qXG5cdCAqIE5lZWRzIG1vcmUgdGhvdWdodC4gQWltIGlzIHRvIHByZXZlbnQgdGhlIGJvcmRlciBmb3IgQm9yZGVyQm94Q29udHJvbFxuXHQgKiBzaG93aW5nIHRocm91Z2ggdGhlIGNvbnRyb2wuIExpa2VseSBuZWVkcyB0byB0YWtlIGludG8gYWNjb3VudFxuXHQgKiBsaWdodC9kYXJrIHRoZW1lcyBldGMuXG5cdCAqL1xuXHRiYWNrZ3JvdW5kOiAjZmZmO1xuXG5cdC8qXG5cdCAqIEZvcmNlcyB0aGUgd2lkdGggY29udHJvbCB0byBmaWxsIGF2YWlsYWJsZSBzcGFjZSBnaXZlbiBVbml0Q29udHJvbFxuXHQgKiBwYXNzZXMgaXRzIGNsYXNzTmFtZSBkaXJlY3RseSB0aHJvdWdoIHRvIHRoZSBpbnB1dC5cblx0ICovXG5cdCR7IFVuaXRDb250cm9sV3JhcHBlciB9IHtcblx0XHRmbGV4OiAxO1xuXHRcdCR7IHJ0bCggeyBtYXJnaW5MZWZ0OiAwIH0gKSgpIH1cblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IHdyYXBwZXJXaWR0aCA9ICggd2lkdGg6IENTU1Byb3BlcnRpZXNbICd3aWR0aCcgXSApID0+IHtcblx0cmV0dXJuIGNzc2Bcblx0XHR3aWR0aDogJHsgd2lkdGggfTtcblx0XHRmbGV4OiAwIDAgYXV0bztcblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sRHJvcGRvd24gPSAoKSA9PiBjc3NgXG5cdGJhY2tncm91bmQ6ICNmZmY7XG5cdCR7IHJ0bChcblx0XHR7XG5cdFx0XHRib3JkZXJSYWRpdXM6IGAxcHggMCAwIDFweGAsXG5cdFx0XHRib3JkZXJSaWdodDogYCR7IENPTkZJRy5ib3JkZXJXaWR0aCB9IHNvbGlkICR7IENPTE9SUy5ncmF5WyAyMDAgXSB9YCxcblx0XHR9LFxuXHRcdHtcblx0XHRcdGJvcmRlclJhZGl1czogYDAgMXB4IDFweCAwYCxcblx0XHRcdGJvcmRlckxlZnQ6IGAkeyBDT05GSUcuYm9yZGVyV2lkdGggfSBzb2xpZCAkeyBDT0xPUlMuZ3JheVsgMjAwIF0gfWAsXG5cdFx0fVxuXHQpKCkgfVxuXG5cdCYmID4gYnV0dG9uIHtcblx0XHRwYWRkaW5nOiAkeyBzcGFjZSggMSApIH07XG5cdFx0Ym9yZGVyLXJhZGl1czogaW5oZXJpdDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGNvbG9ySW5kaWNhdG9yQm9yZGVyID0gKCBib3JkZXI/OiBCb3JkZXIgKSA9PiB7XG5cdGNvbnN0IHsgY29sb3IsIHN0eWxlIH0gPSBib3JkZXIgfHwge307XG5cblx0Y29uc3QgZmFsbGJhY2tDb2xvciA9XG5cdFx0ISEgc3R5bGUgJiYgc3R5bGUgIT09ICdub25lJyA/IENPTE9SUy5ncmF5WyAzMDAgXSA6IHVuZGVmaW5lZDtcblxuXHRyZXR1cm4gY3NzYFxuXHRcdGJvcmRlci1zdHlsZTogJHsgc3R5bGUgPT09ICdub25lJyA/ICdzb2xpZCcgOiBzdHlsZSB9O1xuXHRcdGJvcmRlci1jb2xvcjogJHsgY29sb3IgfHwgZmFsbGJhY2tDb2xvciB9O1xuXHRgO1xufTtcblxuZXhwb3J0IGNvbnN0IGNvbG9ySW5kaWNhdG9yV3JhcHBlciA9ICggYm9yZGVyPzogQm9yZGVyICkgPT4ge1xuXHRjb25zdCB7IHN0eWxlIH0gPSBib3JkZXIgfHwge307XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRib3JkZXItcmFkaXVzOiA5OTk5cHg7XG5cdFx0Ym9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XG5cdFx0JHsgc3R5bGUgPyBjb2xvckluZGljYXRvckJvcmRlciggYm9yZGVyICkgOiB1bmRlZmluZWQgfVxuXHRcdHdpZHRoOiAyOHB4O1xuXHRcdGhlaWdodDogMjhweDtcblx0XHRwYWRkaW5nOiAycHg7XG5cblx0XHQvKlxuXHRcdCAqIENvbG9ySW5kaWNhdG9yXG5cdFx0ICpcblx0XHQgKiBUaGUgdHJhbnNwYXJlbnQgY29sb3JzIHVzZWQgaGVyZSBlbnN1cmUgdmlzaWJpbGl0eSBvZiB0aGUgaW5kaWNhdG9yXG5cdFx0ICogb3ZlciB0aGUgYWN0aXZlIHN0YXRlIG9mIHRoZSBib3JkZXIgY29udHJvbCBkcm9wZG93bidzIHRvZ2dsZSBidXR0b24uXG5cdFx0ICovXG5cdFx0JiA+IHNwYW4ge1xuXHRcdFx0YmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KFxuXHRcdFx0XHQtNDVkZWcsXG5cdFx0XHRcdHRyYW5zcGFyZW50IDQ4JSxcblx0XHRcdFx0cmdiKCAwIDAgMCAvIDIwJSApIDQ4JSxcblx0XHRcdFx0cmdiKCAwIDAgMCAvIDIwJSApIDUyJSxcblx0XHRcdFx0dHJhbnNwYXJlbnQgNTIlXG5cdFx0XHQpO1xuXHRcdH1cblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sUG9wb3ZlciA9IGNzc2Bcblx0LyogUmVtb3ZlIHBhZGRpbmcgZnJvbSBjb250ZW50LCB0aGlzIHdpbGwgYmUgcmUtYWRkZWQgdmlhIGlubmVyIGVsZW1lbnRzKi9cblx0JiYgPiBkaXYgPiBkaXYge1xuXHRcdHBhZGRpbmc6IDA7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sUG9wb3ZlckNvbnRyb2xzID0gY3NzYFxuXHRwYWRkaW5nOiAkeyBzcGFjZSggMiApIH07XG5cblx0PiBkaXY6Zmlyc3Qtb2YtdHlwZSA+ICR7IFN0eWxlZExhYmVsIH0ge1xuXHRcdG1hcmdpbi1ib3R0b206IDA7XG5cdFx0JHsgbGFiZWxTdHlsZXMgfVxuXHR9XG5cblx0JiYgJHsgU3R5bGVkTGFiZWwgfSArIGJ1dHRvbjpub3QoIC5oYXMtdGV4dCApIHtcblx0XHRtaW4td2lkdGg6IDI0cHg7XG5cdFx0cGFkZGluZzogMDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xQb3BvdmVyQ29udGVudCA9IGNzc2BgO1xuZXhwb3J0IGNvbnN0IGJvcmRlckNvbG9ySW5kaWNhdG9yID0gY3NzYGA7XG5cbmV4cG9ydCBjb25zdCByZXNldEJ1dHRvbiA9IGNzc2Bcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cdHdpZHRoOiAxMDAlO1xuXG5cdC8qIE92ZXJyaWRlIGJ1dHRvbiBjb21wb25lbnQgc3R5bGluZyAqL1xuXHQmJiB7XG5cdFx0Ym9yZGVyLXRvcDogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH07XG5cdFx0aGVpZ2h0OiA0NnB4O1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyV2lkdGhDb250cm9sID0gKCkgPT4gY3NzYFxuXHQvKiBUYXJnZXQgdGhlIElucHV0Q29udHJvbCdzIGJhY2tkcm9wICovXG5cdCYmJiAkeyBCYWNrZHJvcFVJIH0ge1xuXHRcdGJvcmRlcjogbm9uZTtcblx0fVxuXG5cdC8qIFNwZWNpZmljaXR5IHJlcXVpcmVkIHRvIG92ZXJjb21lIFVuaXRDb250cm9sIHBhZGRpbmcgKi9cblx0LyogU2VlIHBhY2thZ2VzL2NvbXBvbmVudHMvc3JjL3VuaXQtY29udHJvbC9zdHlsZXMvdW5pdC1jb250cm9sLXN0eWxlcy50cyAqL1xuXHQmJiYgaW5wdXQge1xuXHRcdCR7IHJ0bCggeyBwYWRkaW5nUmlnaHQ6IDAgfSApKCkgfVxuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFN0eWxlUGlja2VyID0gY3NzYFxuXHQkeyBTdHlsZWRMYWJlbCB9IHtcblx0XHQkeyBsYWJlbFN0eWxlcyB9XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJTdHlsZUJ1dHRvbiA9IGNzc2Bcblx0JiYmJiYge1xuXHRcdG1pbi13aWR0aDogMzBweDtcblx0XHR3aWR0aDogMzBweDtcblx0XHRoZWlnaHQ6IDMwcHg7XG5cdFx0cGFkZGluZzogM3B4O1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyU2xpZGVyID0gKCkgPT4gY3NzYFxuXHRmbGV4OiAxIDEgNjAlO1xuXHQkeyBydGwoIHsgbWFyZ2luUmlnaHQ6IHNwYWNlKCAzICkgfSApKCkgfVxuXG5cdCR7IFN0eWxlZEZpZWxkIH0ge1xuXHRcdG1hcmdpbi1ib3R0b206IDA7XG5cdFx0Zm9udC1zaXplOiAwO1xuXHRcdGRpc3BsYXk6IGZsZXg7XG5cdH1cbmA7XG4iXX0= */");
};
export const colorIndicatorWrapper = border => {
  const {
    style
  } = border || {};
  return /*#__PURE__*/css("border-radius:9999px;border:2px solid transparent;", style ? colorIndicatorBorder(border) : undefined, " width:28px;height:28px;padding:2px;&>span{background:linear-gradient(\n\t\t\t\t-45deg,\n\t\t\t\ttransparent 48%,\n\t\t\t\trgb( 0 0 0 / 20% ) 48%,\n\t\t\t\trgb( 0 0 0 / 20% ) 52%,\n\t\t\t\ttransparent 52%\n\t\t\t);}" + (process.env.NODE_ENV === "production" ? "" : ";label:colorIndicatorWrapper;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTJGVyIsImZpbGUiOiJAd29yZHByZXNzL2NvbXBvbmVudHMvc3JjL2JvcmRlci1jb250cm9sL3N0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB0eXBlIHsgQ1NTUHJvcGVydGllcyB9IGZyb20gJ3JlYWN0JztcblxuLyoqXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgQ09MT1JTLCBDT05GSUcsIHJ0bCB9IGZyb20gJy4uL3V0aWxzJztcbmltcG9ydCB7IHNwYWNlIH0gZnJvbSAnLi4vdWkvdXRpbHMvc3BhY2UnO1xuaW1wb3J0IHtcblx0U3R5bGVkRmllbGQsXG5cdFN0eWxlZExhYmVsLFxufSBmcm9tICcuLi9iYXNlLWNvbnRyb2wvc3R5bGVzL2Jhc2UtY29udHJvbC1zdHlsZXMnO1xuaW1wb3J0IHsgQmFja2Ryb3BVSSB9IGZyb20gJy4uL2lucHV0LWNvbnRyb2wvc3R5bGVzL2lucHV0LWNvbnRyb2wtc3R5bGVzJztcbmltcG9ydCB7IFJvb3QgYXMgVW5pdENvbnRyb2xXcmFwcGVyIH0gZnJvbSAnLi4vdW5pdC1jb250cm9sL3N0eWxlcy91bml0LWNvbnRyb2wtc3R5bGVzJztcblxuaW1wb3J0IHR5cGUgeyBCb3JkZXIgfSBmcm9tICcuL3R5cGVzJztcblxuY29uc3QgbGFiZWxTdHlsZXMgPSBjc3NgXG5cdGZvbnQtd2VpZ2h0OiA1MDA7XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbCA9IGNzc2Bcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuYDtcblxuZXhwb3J0IGNvbnN0IGlubmVyV3JhcHBlciA9ICgpID0+IGNzc2Bcblx0Ym9yZGVyOiAkeyBDT05GSUcuYm9yZGVyV2lkdGggfSBzb2xpZCAkeyBDT0xPUlMuZ3JheVsgMjAwIF0gfTtcblx0Ym9yZGVyLXJhZGl1czogMnB4O1xuXHRmbGV4OiAxIDAgNDAlO1xuXG5cdC8qXG5cdCAqIE5lZWRzIG1vcmUgdGhvdWdodC4gQWltIGlzIHRvIHByZXZlbnQgdGhlIGJvcmRlciBmb3IgQm9yZGVyQm94Q29udHJvbFxuXHQgKiBzaG93aW5nIHRocm91Z2ggdGhlIGNvbnRyb2wuIExpa2VseSBuZWVkcyB0byB0YWtlIGludG8gYWNjb3VudFxuXHQgKiBsaWdodC9kYXJrIHRoZW1lcyBldGMuXG5cdCAqL1xuXHRiYWNrZ3JvdW5kOiAjZmZmO1xuXG5cdC8qXG5cdCAqIEZvcmNlcyB0aGUgd2lkdGggY29udHJvbCB0byBmaWxsIGF2YWlsYWJsZSBzcGFjZSBnaXZlbiBVbml0Q29udHJvbFxuXHQgKiBwYXNzZXMgaXRzIGNsYXNzTmFtZSBkaXJlY3RseSB0aHJvdWdoIHRvIHRoZSBpbnB1dC5cblx0ICovXG5cdCR7IFVuaXRDb250cm9sV3JhcHBlciB9IHtcblx0XHRmbGV4OiAxO1xuXHRcdCR7IHJ0bCggeyBtYXJnaW5MZWZ0OiAwIH0gKSgpIH1cblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IHdyYXBwZXJXaWR0aCA9ICggd2lkdGg6IENTU1Byb3BlcnRpZXNbICd3aWR0aCcgXSApID0+IHtcblx0cmV0dXJuIGNzc2Bcblx0XHR3aWR0aDogJHsgd2lkdGggfTtcblx0XHRmbGV4OiAwIDAgYXV0bztcblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sRHJvcGRvd24gPSAoKSA9PiBjc3NgXG5cdGJhY2tncm91bmQ6ICNmZmY7XG5cdCR7IHJ0bChcblx0XHR7XG5cdFx0XHRib3JkZXJSYWRpdXM6IGAxcHggMCAwIDFweGAsXG5cdFx0XHRib3JkZXJSaWdodDogYCR7IENPTkZJRy5ib3JkZXJXaWR0aCB9IHNvbGlkICR7IENPTE9SUy5ncmF5WyAyMDAgXSB9YCxcblx0XHR9LFxuXHRcdHtcblx0XHRcdGJvcmRlclJhZGl1czogYDAgMXB4IDFweCAwYCxcblx0XHRcdGJvcmRlckxlZnQ6IGAkeyBDT05GSUcuYm9yZGVyV2lkdGggfSBzb2xpZCAkeyBDT0xPUlMuZ3JheVsgMjAwIF0gfWAsXG5cdFx0fVxuXHQpKCkgfVxuXG5cdCYmID4gYnV0dG9uIHtcblx0XHRwYWRkaW5nOiAkeyBzcGFjZSggMSApIH07XG5cdFx0Ym9yZGVyLXJhZGl1czogaW5oZXJpdDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGNvbG9ySW5kaWNhdG9yQm9yZGVyID0gKCBib3JkZXI/OiBCb3JkZXIgKSA9PiB7XG5cdGNvbnN0IHsgY29sb3IsIHN0eWxlIH0gPSBib3JkZXIgfHwge307XG5cblx0Y29uc3QgZmFsbGJhY2tDb2xvciA9XG5cdFx0ISEgc3R5bGUgJiYgc3R5bGUgIT09ICdub25lJyA/IENPTE9SUy5ncmF5WyAzMDAgXSA6IHVuZGVmaW5lZDtcblxuXHRyZXR1cm4gY3NzYFxuXHRcdGJvcmRlci1zdHlsZTogJHsgc3R5bGUgPT09ICdub25lJyA/ICdzb2xpZCcgOiBzdHlsZSB9O1xuXHRcdGJvcmRlci1jb2xvcjogJHsgY29sb3IgfHwgZmFsbGJhY2tDb2xvciB9O1xuXHRgO1xufTtcblxuZXhwb3J0IGNvbnN0IGNvbG9ySW5kaWNhdG9yV3JhcHBlciA9ICggYm9yZGVyPzogQm9yZGVyICkgPT4ge1xuXHRjb25zdCB7IHN0eWxlIH0gPSBib3JkZXIgfHwge307XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRib3JkZXItcmFkaXVzOiA5OTk5cHg7XG5cdFx0Ym9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XG5cdFx0JHsgc3R5bGUgPyBjb2xvckluZGljYXRvckJvcmRlciggYm9yZGVyICkgOiB1bmRlZmluZWQgfVxuXHRcdHdpZHRoOiAyOHB4O1xuXHRcdGhlaWdodDogMjhweDtcblx0XHRwYWRkaW5nOiAycHg7XG5cblx0XHQvKlxuXHRcdCAqIENvbG9ySW5kaWNhdG9yXG5cdFx0ICpcblx0XHQgKiBUaGUgdHJhbnNwYXJlbnQgY29sb3JzIHVzZWQgaGVyZSBlbnN1cmUgdmlzaWJpbGl0eSBvZiB0aGUgaW5kaWNhdG9yXG5cdFx0ICogb3ZlciB0aGUgYWN0aXZlIHN0YXRlIG9mIHRoZSBib3JkZXIgY29udHJvbCBkcm9wZG93bidzIHRvZ2dsZSBidXR0b24uXG5cdFx0ICovXG5cdFx0JiA+IHNwYW4ge1xuXHRcdFx0YmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KFxuXHRcdFx0XHQtNDVkZWcsXG5cdFx0XHRcdHRyYW5zcGFyZW50IDQ4JSxcblx0XHRcdFx0cmdiKCAwIDAgMCAvIDIwJSApIDQ4JSxcblx0XHRcdFx0cmdiKCAwIDAgMCAvIDIwJSApIDUyJSxcblx0XHRcdFx0dHJhbnNwYXJlbnQgNTIlXG5cdFx0XHQpO1xuXHRcdH1cblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sUG9wb3ZlciA9IGNzc2Bcblx0LyogUmVtb3ZlIHBhZGRpbmcgZnJvbSBjb250ZW50LCB0aGlzIHdpbGwgYmUgcmUtYWRkZWQgdmlhIGlubmVyIGVsZW1lbnRzKi9cblx0JiYgPiBkaXYgPiBkaXYge1xuXHRcdHBhZGRpbmc6IDA7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sUG9wb3ZlckNvbnRyb2xzID0gY3NzYFxuXHRwYWRkaW5nOiAkeyBzcGFjZSggMiApIH07XG5cblx0PiBkaXY6Zmlyc3Qtb2YtdHlwZSA+ICR7IFN0eWxlZExhYmVsIH0ge1xuXHRcdG1hcmdpbi1ib3R0b206IDA7XG5cdFx0JHsgbGFiZWxTdHlsZXMgfVxuXHR9XG5cblx0JiYgJHsgU3R5bGVkTGFiZWwgfSArIGJ1dHRvbjpub3QoIC5oYXMtdGV4dCApIHtcblx0XHRtaW4td2lkdGg6IDI0cHg7XG5cdFx0cGFkZGluZzogMDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xQb3BvdmVyQ29udGVudCA9IGNzc2BgO1xuZXhwb3J0IGNvbnN0IGJvcmRlckNvbG9ySW5kaWNhdG9yID0gY3NzYGA7XG5cbmV4cG9ydCBjb25zdCByZXNldEJ1dHRvbiA9IGNzc2Bcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cdHdpZHRoOiAxMDAlO1xuXG5cdC8qIE92ZXJyaWRlIGJ1dHRvbiBjb21wb25lbnQgc3R5bGluZyAqL1xuXHQmJiB7XG5cdFx0Ym9yZGVyLXRvcDogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH07XG5cdFx0aGVpZ2h0OiA0NnB4O1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyV2lkdGhDb250cm9sID0gKCkgPT4gY3NzYFxuXHQvKiBUYXJnZXQgdGhlIElucHV0Q29udHJvbCdzIGJhY2tkcm9wICovXG5cdCYmJiAkeyBCYWNrZHJvcFVJIH0ge1xuXHRcdGJvcmRlcjogbm9uZTtcblx0fVxuXG5cdC8qIFNwZWNpZmljaXR5IHJlcXVpcmVkIHRvIG92ZXJjb21lIFVuaXRDb250cm9sIHBhZGRpbmcgKi9cblx0LyogU2VlIHBhY2thZ2VzL2NvbXBvbmVudHMvc3JjL3VuaXQtY29udHJvbC9zdHlsZXMvdW5pdC1jb250cm9sLXN0eWxlcy50cyAqL1xuXHQmJiYgaW5wdXQge1xuXHRcdCR7IHJ0bCggeyBwYWRkaW5nUmlnaHQ6IDAgfSApKCkgfVxuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFN0eWxlUGlja2VyID0gY3NzYFxuXHQkeyBTdHlsZWRMYWJlbCB9IHtcblx0XHQkeyBsYWJlbFN0eWxlcyB9XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJTdHlsZUJ1dHRvbiA9IGNzc2Bcblx0JiYmJiYge1xuXHRcdG1pbi13aWR0aDogMzBweDtcblx0XHR3aWR0aDogMzBweDtcblx0XHRoZWlnaHQ6IDMwcHg7XG5cdFx0cGFkZGluZzogM3B4O1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyU2xpZGVyID0gKCkgPT4gY3NzYFxuXHRmbGV4OiAxIDEgNjAlO1xuXHQkeyBydGwoIHsgbWFyZ2luUmlnaHQ6IHNwYWNlKCAzICkgfSApKCkgfVxuXG5cdCR7IFN0eWxlZEZpZWxkIH0ge1xuXHRcdG1hcmdpbi1ib3R0b206IDA7XG5cdFx0Zm9udC1zaXplOiAwO1xuXHRcdGRpc3BsYXk6IGZsZXg7XG5cdH1cbmA7XG4iXX0= */");
};
export const borderControlPopover = process.env.NODE_ENV === "production" ? {
  name: "1phacrs",
  styles: "&&>div>div{padding:0;}"
} : {
  name: "26dcb1-borderControlPopover",
  styles: "&&>div>div{padding:0;};label:borderControlPopover;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXFIdUMiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9ib3JkZXItY29udHJvbC9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgdHlwZSB7IENTU1Byb3BlcnRpZXMgfSBmcm9tICdyZWFjdCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IENPTE9SUywgQ09ORklHLCBydGwgfSBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uL3VpL3V0aWxzL3NwYWNlJztcbmltcG9ydCB7XG5cdFN0eWxlZEZpZWxkLFxuXHRTdHlsZWRMYWJlbCxcbn0gZnJvbSAnLi4vYmFzZS1jb250cm9sL3N0eWxlcy9iYXNlLWNvbnRyb2wtc3R5bGVzJztcbmltcG9ydCB7IEJhY2tkcm9wVUkgfSBmcm9tICcuLi9pbnB1dC1jb250cm9sL3N0eWxlcy9pbnB1dC1jb250cm9sLXN0eWxlcyc7XG5pbXBvcnQgeyBSb290IGFzIFVuaXRDb250cm9sV3JhcHBlciB9IGZyb20gJy4uL3VuaXQtY29udHJvbC9zdHlsZXMvdW5pdC1jb250cm9sLXN0eWxlcyc7XG5cbmltcG9ydCB0eXBlIHsgQm9yZGVyIH0gZnJvbSAnLi90eXBlcyc7XG5cbmNvbnN0IGxhYmVsU3R5bGVzID0gY3NzYFxuXHRmb250LXdlaWdodDogNTAwO1xuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2wgPSBjc3NgXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcbmA7XG5cbmV4cG9ydCBjb25zdCBpbm5lcldyYXBwZXIgPSAoKSA9PiBjc3NgXG5cdGJvcmRlcjogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH07XG5cdGJvcmRlci1yYWRpdXM6IDJweDtcblx0ZmxleDogMSAwIDQwJTtcblxuXHQvKlxuXHQgKiBOZWVkcyBtb3JlIHRob3VnaHQuIEFpbSBpcyB0byBwcmV2ZW50IHRoZSBib3JkZXIgZm9yIEJvcmRlckJveENvbnRyb2xcblx0ICogc2hvd2luZyB0aHJvdWdoIHRoZSBjb250cm9sLiBMaWtlbHkgbmVlZHMgdG8gdGFrZSBpbnRvIGFjY291bnRcblx0ICogbGlnaHQvZGFyayB0aGVtZXMgZXRjLlxuXHQgKi9cblx0YmFja2dyb3VuZDogI2ZmZjtcblxuXHQvKlxuXHQgKiBGb3JjZXMgdGhlIHdpZHRoIGNvbnRyb2wgdG8gZmlsbCBhdmFpbGFibGUgc3BhY2UgZ2l2ZW4gVW5pdENvbnRyb2xcblx0ICogcGFzc2VzIGl0cyBjbGFzc05hbWUgZGlyZWN0bHkgdGhyb3VnaCB0byB0aGUgaW5wdXQuXG5cdCAqL1xuXHQkeyBVbml0Q29udHJvbFdyYXBwZXIgfSB7XG5cdFx0ZmxleDogMTtcblx0XHQkeyBydGwoIHsgbWFyZ2luTGVmdDogMCB9ICkoKSB9XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCB3cmFwcGVyV2lkdGggPSAoIHdpZHRoOiBDU1NQcm9wZXJ0aWVzWyAnd2lkdGgnIF0gKSA9PiB7XG5cdHJldHVybiBjc3NgXG5cdFx0d2lkdGg6ICR7IHdpZHRoIH07XG5cdFx0ZmxleDogMCAwIGF1dG87XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbERyb3Bkb3duID0gKCkgPT4gY3NzYFxuXHRiYWNrZ3JvdW5kOiAjZmZmO1xuXHQkeyBydGwoXG5cdFx0e1xuXHRcdFx0Ym9yZGVyUmFkaXVzOiBgMXB4IDAgMCAxcHhgLFxuXHRcdFx0Ym9yZGVyUmlnaHQ6IGAkeyBDT05GSUcuYm9yZGVyV2lkdGggfSBzb2xpZCAkeyBDT0xPUlMuZ3JheVsgMjAwIF0gfWAsXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRib3JkZXJSYWRpdXM6IGAwIDFweCAxcHggMGAsXG5cdFx0XHRib3JkZXJMZWZ0OiBgJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH1gLFxuXHRcdH1cblx0KSgpIH1cblxuXHQmJiA+IGJ1dHRvbiB7XG5cdFx0cGFkZGluZzogJHsgc3BhY2UoIDEgKSB9O1xuXHRcdGJvcmRlci1yYWRpdXM6IGluaGVyaXQ7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBjb2xvckluZGljYXRvckJvcmRlciA9ICggYm9yZGVyPzogQm9yZGVyICkgPT4ge1xuXHRjb25zdCB7IGNvbG9yLCBzdHlsZSB9ID0gYm9yZGVyIHx8IHt9O1xuXG5cdGNvbnN0IGZhbGxiYWNrQ29sb3IgPVxuXHRcdCEhIHN0eWxlICYmIHN0eWxlICE9PSAnbm9uZScgPyBDT0xPUlMuZ3JheVsgMzAwIF0gOiB1bmRlZmluZWQ7XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRib3JkZXItc3R5bGU6ICR7IHN0eWxlID09PSAnbm9uZScgPyAnc29saWQnIDogc3R5bGUgfTtcblx0XHRib3JkZXItY29sb3I6ICR7IGNvbG9yIHx8IGZhbGxiYWNrQ29sb3IgfTtcblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBjb2xvckluZGljYXRvcldyYXBwZXIgPSAoIGJvcmRlcj86IEJvcmRlciApID0+IHtcblx0Y29uc3QgeyBzdHlsZSB9ID0gYm9yZGVyIHx8IHt9O1xuXG5cdHJldHVybiBjc3NgXG5cdFx0Ym9yZGVyLXJhZGl1czogOTk5OXB4O1xuXHRcdGJvcmRlcjogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuXHRcdCR7IHN0eWxlID8gY29sb3JJbmRpY2F0b3JCb3JkZXIoIGJvcmRlciApIDogdW5kZWZpbmVkIH1cblx0XHR3aWR0aDogMjhweDtcblx0XHRoZWlnaHQ6IDI4cHg7XG5cdFx0cGFkZGluZzogMnB4O1xuXG5cdFx0Lypcblx0XHQgKiBDb2xvckluZGljYXRvclxuXHRcdCAqXG5cdFx0ICogVGhlIHRyYW5zcGFyZW50IGNvbG9ycyB1c2VkIGhlcmUgZW5zdXJlIHZpc2liaWxpdHkgb2YgdGhlIGluZGljYXRvclxuXHRcdCAqIG92ZXIgdGhlIGFjdGl2ZSBzdGF0ZSBvZiB0aGUgYm9yZGVyIGNvbnRyb2wgZHJvcGRvd24ncyB0b2dnbGUgYnV0dG9uLlxuXHRcdCAqL1xuXHRcdCYgPiBzcGFuIHtcblx0XHRcdGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChcblx0XHRcdFx0LTQ1ZGVnLFxuXHRcdFx0XHR0cmFuc3BhcmVudCA0OCUsXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA0OCUsXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA1MiUsXG5cdFx0XHRcdHRyYW5zcGFyZW50IDUyJVxuXHRcdFx0KTtcblx0XHR9XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXIgPSBjc3NgXG5cdC8qIFJlbW92ZSBwYWRkaW5nIGZyb20gY29udGVudCwgdGhpcyB3aWxsIGJlIHJlLWFkZGVkIHZpYSBpbm5lciBlbGVtZW50cyovXG5cdCYmID4gZGl2ID4gZGl2IHtcblx0XHRwYWRkaW5nOiAwO1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXJDb250cm9scyA9IGNzc2Bcblx0cGFkZGluZzogJHsgc3BhY2UoIDIgKSB9O1xuXG5cdD4gZGl2OmZpcnN0LW9mLXR5cGUgPiAkeyBTdHlsZWRMYWJlbCB9IHtcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xuXHRcdCR7IGxhYmVsU3R5bGVzIH1cblx0fVxuXG5cdCYmICR7IFN0eWxlZExhYmVsIH0gKyBidXR0b246bm90KCAuaGFzLXRleHQgKSB7XG5cdFx0bWluLXdpZHRoOiAyNHB4O1xuXHRcdHBhZGRpbmc6IDA7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sUG9wb3ZlckNvbnRlbnQgPSBjc3NgYDtcbmV4cG9ydCBjb25zdCBib3JkZXJDb2xvckluZGljYXRvciA9IGNzc2BgO1xuXG5leHBvcnQgY29uc3QgcmVzZXRCdXR0b24gPSBjc3NgXG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXHR3aWR0aDogMTAwJTtcblxuXHQvKiBPdmVycmlkZSBidXR0b24gY29tcG9uZW50IHN0eWxpbmcgKi9cblx0JiYge1xuXHRcdGJvcmRlci10b3A6ICR7IENPTkZJRy5ib3JkZXJXaWR0aCB9IHNvbGlkICR7IENPTE9SUy5ncmF5WyAyMDAgXSB9O1xuXHRcdGhlaWdodDogNDZweDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlcldpZHRoQ29udHJvbCA9ICgpID0+IGNzc2Bcblx0LyogVGFyZ2V0IHRoZSBJbnB1dENvbnRyb2wncyBiYWNrZHJvcCAqL1xuXHQmJiYgJHsgQmFja2Ryb3BVSSB9IHtcblx0XHRib3JkZXI6IG5vbmU7XG5cdH1cblxuXHQvKiBTcGVjaWZpY2l0eSByZXF1aXJlZCB0byBvdmVyY29tZSBVbml0Q29udHJvbCBwYWRkaW5nICovXG5cdC8qIFNlZSBwYWNrYWdlcy9jb21wb25lbnRzL3NyYy91bml0LWNvbnRyb2wvc3R5bGVzL3VuaXQtY29udHJvbC1zdHlsZXMudHMgKi9cblx0JiYmIGlucHV0IHtcblx0XHQkeyBydGwoIHsgcGFkZGluZ1JpZ2h0OiAwIH0gKSgpIH1cblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xTdHlsZVBpY2tlciA9IGNzc2Bcblx0JHsgU3R5bGVkTGFiZWwgfSB7XG5cdFx0JHsgbGFiZWxTdHlsZXMgfVxuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyU3R5bGVCdXR0b24gPSBjc3NgXG5cdCYmJiYmIHtcblx0XHRtaW4td2lkdGg6IDMwcHg7XG5cdFx0d2lkdGg6IDMwcHg7XG5cdFx0aGVpZ2h0OiAzMHB4O1xuXHRcdHBhZGRpbmc6IDNweDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlclNsaWRlciA9ICgpID0+IGNzc2Bcblx0ZmxleDogMSAxIDYwJTtcblx0JHsgcnRsKCB7IG1hcmdpblJpZ2h0OiBzcGFjZSggMyApIH0gKSgpIH1cblxuXHQkeyBTdHlsZWRGaWVsZCB9IHtcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xuXHRcdGZvbnQtc2l6ZTogMDtcblx0XHRkaXNwbGF5OiBmbGV4O1xuXHR9XG5gO1xuIl19 */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};
export const borderControlPopoverControls = /*#__PURE__*/css("padding:", space(2), ";>div:first-of-type>", StyledLabel, "{margin-bottom:0;", labelStyles, ";}&& ", StyledLabel, "+button:not( .has-text ){min-width:24px;padding:0;}" + (process.env.NODE_ENV === "production" ? "" : ";label:borderControlPopoverControls;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTRIK0MiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9ib3JkZXItY29udHJvbC9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgdHlwZSB7IENTU1Byb3BlcnRpZXMgfSBmcm9tICdyZWFjdCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IENPTE9SUywgQ09ORklHLCBydGwgfSBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uL3VpL3V0aWxzL3NwYWNlJztcbmltcG9ydCB7XG5cdFN0eWxlZEZpZWxkLFxuXHRTdHlsZWRMYWJlbCxcbn0gZnJvbSAnLi4vYmFzZS1jb250cm9sL3N0eWxlcy9iYXNlLWNvbnRyb2wtc3R5bGVzJztcbmltcG9ydCB7IEJhY2tkcm9wVUkgfSBmcm9tICcuLi9pbnB1dC1jb250cm9sL3N0eWxlcy9pbnB1dC1jb250cm9sLXN0eWxlcyc7XG5pbXBvcnQgeyBSb290IGFzIFVuaXRDb250cm9sV3JhcHBlciB9IGZyb20gJy4uL3VuaXQtY29udHJvbC9zdHlsZXMvdW5pdC1jb250cm9sLXN0eWxlcyc7XG5cbmltcG9ydCB0eXBlIHsgQm9yZGVyIH0gZnJvbSAnLi90eXBlcyc7XG5cbmNvbnN0IGxhYmVsU3R5bGVzID0gY3NzYFxuXHRmb250LXdlaWdodDogNTAwO1xuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2wgPSBjc3NgXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcbmA7XG5cbmV4cG9ydCBjb25zdCBpbm5lcldyYXBwZXIgPSAoKSA9PiBjc3NgXG5cdGJvcmRlcjogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH07XG5cdGJvcmRlci1yYWRpdXM6IDJweDtcblx0ZmxleDogMSAwIDQwJTtcblxuXHQvKlxuXHQgKiBOZWVkcyBtb3JlIHRob3VnaHQuIEFpbSBpcyB0byBwcmV2ZW50IHRoZSBib3JkZXIgZm9yIEJvcmRlckJveENvbnRyb2xcblx0ICogc2hvd2luZyB0aHJvdWdoIHRoZSBjb250cm9sLiBMaWtlbHkgbmVlZHMgdG8gdGFrZSBpbnRvIGFjY291bnRcblx0ICogbGlnaHQvZGFyayB0aGVtZXMgZXRjLlxuXHQgKi9cblx0YmFja2dyb3VuZDogI2ZmZjtcblxuXHQvKlxuXHQgKiBGb3JjZXMgdGhlIHdpZHRoIGNvbnRyb2wgdG8gZmlsbCBhdmFpbGFibGUgc3BhY2UgZ2l2ZW4gVW5pdENvbnRyb2xcblx0ICogcGFzc2VzIGl0cyBjbGFzc05hbWUgZGlyZWN0bHkgdGhyb3VnaCB0byB0aGUgaW5wdXQuXG5cdCAqL1xuXHQkeyBVbml0Q29udHJvbFdyYXBwZXIgfSB7XG5cdFx0ZmxleDogMTtcblx0XHQkeyBydGwoIHsgbWFyZ2luTGVmdDogMCB9ICkoKSB9XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCB3cmFwcGVyV2lkdGggPSAoIHdpZHRoOiBDU1NQcm9wZXJ0aWVzWyAnd2lkdGgnIF0gKSA9PiB7XG5cdHJldHVybiBjc3NgXG5cdFx0d2lkdGg6ICR7IHdpZHRoIH07XG5cdFx0ZmxleDogMCAwIGF1dG87XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbERyb3Bkb3duID0gKCkgPT4gY3NzYFxuXHRiYWNrZ3JvdW5kOiAjZmZmO1xuXHQkeyBydGwoXG5cdFx0e1xuXHRcdFx0Ym9yZGVyUmFkaXVzOiBgMXB4IDAgMCAxcHhgLFxuXHRcdFx0Ym9yZGVyUmlnaHQ6IGAkeyBDT05GSUcuYm9yZGVyV2lkdGggfSBzb2xpZCAkeyBDT0xPUlMuZ3JheVsgMjAwIF0gfWAsXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRib3JkZXJSYWRpdXM6IGAwIDFweCAxcHggMGAsXG5cdFx0XHRib3JkZXJMZWZ0OiBgJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH1gLFxuXHRcdH1cblx0KSgpIH1cblxuXHQmJiA+IGJ1dHRvbiB7XG5cdFx0cGFkZGluZzogJHsgc3BhY2UoIDEgKSB9O1xuXHRcdGJvcmRlci1yYWRpdXM6IGluaGVyaXQ7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBjb2xvckluZGljYXRvckJvcmRlciA9ICggYm9yZGVyPzogQm9yZGVyICkgPT4ge1xuXHRjb25zdCB7IGNvbG9yLCBzdHlsZSB9ID0gYm9yZGVyIHx8IHt9O1xuXG5cdGNvbnN0IGZhbGxiYWNrQ29sb3IgPVxuXHRcdCEhIHN0eWxlICYmIHN0eWxlICE9PSAnbm9uZScgPyBDT0xPUlMuZ3JheVsgMzAwIF0gOiB1bmRlZmluZWQ7XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRib3JkZXItc3R5bGU6ICR7IHN0eWxlID09PSAnbm9uZScgPyAnc29saWQnIDogc3R5bGUgfTtcblx0XHRib3JkZXItY29sb3I6ICR7IGNvbG9yIHx8IGZhbGxiYWNrQ29sb3IgfTtcblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBjb2xvckluZGljYXRvcldyYXBwZXIgPSAoIGJvcmRlcj86IEJvcmRlciApID0+IHtcblx0Y29uc3QgeyBzdHlsZSB9ID0gYm9yZGVyIHx8IHt9O1xuXG5cdHJldHVybiBjc3NgXG5cdFx0Ym9yZGVyLXJhZGl1czogOTk5OXB4O1xuXHRcdGJvcmRlcjogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuXHRcdCR7IHN0eWxlID8gY29sb3JJbmRpY2F0b3JCb3JkZXIoIGJvcmRlciApIDogdW5kZWZpbmVkIH1cblx0XHR3aWR0aDogMjhweDtcblx0XHRoZWlnaHQ6IDI4cHg7XG5cdFx0cGFkZGluZzogMnB4O1xuXG5cdFx0Lypcblx0XHQgKiBDb2xvckluZGljYXRvclxuXHRcdCAqXG5cdFx0ICogVGhlIHRyYW5zcGFyZW50IGNvbG9ycyB1c2VkIGhlcmUgZW5zdXJlIHZpc2liaWxpdHkgb2YgdGhlIGluZGljYXRvclxuXHRcdCAqIG92ZXIgdGhlIGFjdGl2ZSBzdGF0ZSBvZiB0aGUgYm9yZGVyIGNvbnRyb2wgZHJvcGRvd24ncyB0b2dnbGUgYnV0dG9uLlxuXHRcdCAqL1xuXHRcdCYgPiBzcGFuIHtcblx0XHRcdGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChcblx0XHRcdFx0LTQ1ZGVnLFxuXHRcdFx0XHR0cmFuc3BhcmVudCA0OCUsXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA0OCUsXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA1MiUsXG5cdFx0XHRcdHRyYW5zcGFyZW50IDUyJVxuXHRcdFx0KTtcblx0XHR9XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXIgPSBjc3NgXG5cdC8qIFJlbW92ZSBwYWRkaW5nIGZyb20gY29udGVudCwgdGhpcyB3aWxsIGJlIHJlLWFkZGVkIHZpYSBpbm5lciBlbGVtZW50cyovXG5cdCYmID4gZGl2ID4gZGl2IHtcblx0XHRwYWRkaW5nOiAwO1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXJDb250cm9scyA9IGNzc2Bcblx0cGFkZGluZzogJHsgc3BhY2UoIDIgKSB9O1xuXG5cdD4gZGl2OmZpcnN0LW9mLXR5cGUgPiAkeyBTdHlsZWRMYWJlbCB9IHtcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xuXHRcdCR7IGxhYmVsU3R5bGVzIH1cblx0fVxuXG5cdCYmICR7IFN0eWxlZExhYmVsIH0gKyBidXR0b246bm90KCAuaGFzLXRleHQgKSB7XG5cdFx0bWluLXdpZHRoOiAyNHB4O1xuXHRcdHBhZGRpbmc6IDA7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sUG9wb3ZlckNvbnRlbnQgPSBjc3NgYDtcbmV4cG9ydCBjb25zdCBib3JkZXJDb2xvckluZGljYXRvciA9IGNzc2BgO1xuXG5leHBvcnQgY29uc3QgcmVzZXRCdXR0b24gPSBjc3NgXG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXHR3aWR0aDogMTAwJTtcblxuXHQvKiBPdmVycmlkZSBidXR0b24gY29tcG9uZW50IHN0eWxpbmcgKi9cblx0JiYge1xuXHRcdGJvcmRlci10b3A6ICR7IENPTkZJRy5ib3JkZXJXaWR0aCB9IHNvbGlkICR7IENPTE9SUy5ncmF5WyAyMDAgXSB9O1xuXHRcdGhlaWdodDogNDZweDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlcldpZHRoQ29udHJvbCA9ICgpID0+IGNzc2Bcblx0LyogVGFyZ2V0IHRoZSBJbnB1dENvbnRyb2wncyBiYWNrZHJvcCAqL1xuXHQmJiYgJHsgQmFja2Ryb3BVSSB9IHtcblx0XHRib3JkZXI6IG5vbmU7XG5cdH1cblxuXHQvKiBTcGVjaWZpY2l0eSByZXF1aXJlZCB0byBvdmVyY29tZSBVbml0Q29udHJvbCBwYWRkaW5nICovXG5cdC8qIFNlZSBwYWNrYWdlcy9jb21wb25lbnRzL3NyYy91bml0LWNvbnRyb2wvc3R5bGVzL3VuaXQtY29udHJvbC1zdHlsZXMudHMgKi9cblx0JiYmIGlucHV0IHtcblx0XHQkeyBydGwoIHsgcGFkZGluZ1JpZ2h0OiAwIH0gKSgpIH1cblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xTdHlsZVBpY2tlciA9IGNzc2Bcblx0JHsgU3R5bGVkTGFiZWwgfSB7XG5cdFx0JHsgbGFiZWxTdHlsZXMgfVxuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyU3R5bGVCdXR0b24gPSBjc3NgXG5cdCYmJiYmIHtcblx0XHRtaW4td2lkdGg6IDMwcHg7XG5cdFx0d2lkdGg6IDMwcHg7XG5cdFx0aGVpZ2h0OiAzMHB4O1xuXHRcdHBhZGRpbmc6IDNweDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlclNsaWRlciA9ICgpID0+IGNzc2Bcblx0ZmxleDogMSAxIDYwJTtcblx0JHsgcnRsKCB7IG1hcmdpblJpZ2h0OiBzcGFjZSggMyApIH0gKSgpIH1cblxuXHQkeyBTdHlsZWRGaWVsZCB9IHtcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xuXHRcdGZvbnQtc2l6ZTogMDtcblx0XHRkaXNwbGF5OiBmbGV4O1xuXHR9XG5gO1xuIl19 */");
export const borderControlPopoverContent = /*#__PURE__*/css(process.env.NODE_ENV === "production" ? "" : ";label:borderControlPopoverContent;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTBJOEMiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9ib3JkZXItY29udHJvbC9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgdHlwZSB7IENTU1Byb3BlcnRpZXMgfSBmcm9tICdyZWFjdCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IENPTE9SUywgQ09ORklHLCBydGwgfSBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uL3VpL3V0aWxzL3NwYWNlJztcbmltcG9ydCB7XG5cdFN0eWxlZEZpZWxkLFxuXHRTdHlsZWRMYWJlbCxcbn0gZnJvbSAnLi4vYmFzZS1jb250cm9sL3N0eWxlcy9iYXNlLWNvbnRyb2wtc3R5bGVzJztcbmltcG9ydCB7IEJhY2tkcm9wVUkgfSBmcm9tICcuLi9pbnB1dC1jb250cm9sL3N0eWxlcy9pbnB1dC1jb250cm9sLXN0eWxlcyc7XG5pbXBvcnQgeyBSb290IGFzIFVuaXRDb250cm9sV3JhcHBlciB9IGZyb20gJy4uL3VuaXQtY29udHJvbC9zdHlsZXMvdW5pdC1jb250cm9sLXN0eWxlcyc7XG5cbmltcG9ydCB0eXBlIHsgQm9yZGVyIH0gZnJvbSAnLi90eXBlcyc7XG5cbmNvbnN0IGxhYmVsU3R5bGVzID0gY3NzYFxuXHRmb250LXdlaWdodDogNTAwO1xuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2wgPSBjc3NgXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcbmA7XG5cbmV4cG9ydCBjb25zdCBpbm5lcldyYXBwZXIgPSAoKSA9PiBjc3NgXG5cdGJvcmRlcjogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH07XG5cdGJvcmRlci1yYWRpdXM6IDJweDtcblx0ZmxleDogMSAwIDQwJTtcblxuXHQvKlxuXHQgKiBOZWVkcyBtb3JlIHRob3VnaHQuIEFpbSBpcyB0byBwcmV2ZW50IHRoZSBib3JkZXIgZm9yIEJvcmRlckJveENvbnRyb2xcblx0ICogc2hvd2luZyB0aHJvdWdoIHRoZSBjb250cm9sLiBMaWtlbHkgbmVlZHMgdG8gdGFrZSBpbnRvIGFjY291bnRcblx0ICogbGlnaHQvZGFyayB0aGVtZXMgZXRjLlxuXHQgKi9cblx0YmFja2dyb3VuZDogI2ZmZjtcblxuXHQvKlxuXHQgKiBGb3JjZXMgdGhlIHdpZHRoIGNvbnRyb2wgdG8gZmlsbCBhdmFpbGFibGUgc3BhY2UgZ2l2ZW4gVW5pdENvbnRyb2xcblx0ICogcGFzc2VzIGl0cyBjbGFzc05hbWUgZGlyZWN0bHkgdGhyb3VnaCB0byB0aGUgaW5wdXQuXG5cdCAqL1xuXHQkeyBVbml0Q29udHJvbFdyYXBwZXIgfSB7XG5cdFx0ZmxleDogMTtcblx0XHQkeyBydGwoIHsgbWFyZ2luTGVmdDogMCB9ICkoKSB9XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCB3cmFwcGVyV2lkdGggPSAoIHdpZHRoOiBDU1NQcm9wZXJ0aWVzWyAnd2lkdGgnIF0gKSA9PiB7XG5cdHJldHVybiBjc3NgXG5cdFx0d2lkdGg6ICR7IHdpZHRoIH07XG5cdFx0ZmxleDogMCAwIGF1dG87XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbERyb3Bkb3duID0gKCkgPT4gY3NzYFxuXHRiYWNrZ3JvdW5kOiAjZmZmO1xuXHQkeyBydGwoXG5cdFx0e1xuXHRcdFx0Ym9yZGVyUmFkaXVzOiBgMXB4IDAgMCAxcHhgLFxuXHRcdFx0Ym9yZGVyUmlnaHQ6IGAkeyBDT05GSUcuYm9yZGVyV2lkdGggfSBzb2xpZCAkeyBDT0xPUlMuZ3JheVsgMjAwIF0gfWAsXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRib3JkZXJSYWRpdXM6IGAwIDFweCAxcHggMGAsXG5cdFx0XHRib3JkZXJMZWZ0OiBgJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH1gLFxuXHRcdH1cblx0KSgpIH1cblxuXHQmJiA+IGJ1dHRvbiB7XG5cdFx0cGFkZGluZzogJHsgc3BhY2UoIDEgKSB9O1xuXHRcdGJvcmRlci1yYWRpdXM6IGluaGVyaXQ7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBjb2xvckluZGljYXRvckJvcmRlciA9ICggYm9yZGVyPzogQm9yZGVyICkgPT4ge1xuXHRjb25zdCB7IGNvbG9yLCBzdHlsZSB9ID0gYm9yZGVyIHx8IHt9O1xuXG5cdGNvbnN0IGZhbGxiYWNrQ29sb3IgPVxuXHRcdCEhIHN0eWxlICYmIHN0eWxlICE9PSAnbm9uZScgPyBDT0xPUlMuZ3JheVsgMzAwIF0gOiB1bmRlZmluZWQ7XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRib3JkZXItc3R5bGU6ICR7IHN0eWxlID09PSAnbm9uZScgPyAnc29saWQnIDogc3R5bGUgfTtcblx0XHRib3JkZXItY29sb3I6ICR7IGNvbG9yIHx8IGZhbGxiYWNrQ29sb3IgfTtcblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBjb2xvckluZGljYXRvcldyYXBwZXIgPSAoIGJvcmRlcj86IEJvcmRlciApID0+IHtcblx0Y29uc3QgeyBzdHlsZSB9ID0gYm9yZGVyIHx8IHt9O1xuXG5cdHJldHVybiBjc3NgXG5cdFx0Ym9yZGVyLXJhZGl1czogOTk5OXB4O1xuXHRcdGJvcmRlcjogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuXHRcdCR7IHN0eWxlID8gY29sb3JJbmRpY2F0b3JCb3JkZXIoIGJvcmRlciApIDogdW5kZWZpbmVkIH1cblx0XHR3aWR0aDogMjhweDtcblx0XHRoZWlnaHQ6IDI4cHg7XG5cdFx0cGFkZGluZzogMnB4O1xuXG5cdFx0Lypcblx0XHQgKiBDb2xvckluZGljYXRvclxuXHRcdCAqXG5cdFx0ICogVGhlIHRyYW5zcGFyZW50IGNvbG9ycyB1c2VkIGhlcmUgZW5zdXJlIHZpc2liaWxpdHkgb2YgdGhlIGluZGljYXRvclxuXHRcdCAqIG92ZXIgdGhlIGFjdGl2ZSBzdGF0ZSBvZiB0aGUgYm9yZGVyIGNvbnRyb2wgZHJvcGRvd24ncyB0b2dnbGUgYnV0dG9uLlxuXHRcdCAqL1xuXHRcdCYgPiBzcGFuIHtcblx0XHRcdGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChcblx0XHRcdFx0LTQ1ZGVnLFxuXHRcdFx0XHR0cmFuc3BhcmVudCA0OCUsXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA0OCUsXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA1MiUsXG5cdFx0XHRcdHRyYW5zcGFyZW50IDUyJVxuXHRcdFx0KTtcblx0XHR9XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXIgPSBjc3NgXG5cdC8qIFJlbW92ZSBwYWRkaW5nIGZyb20gY29udGVudCwgdGhpcyB3aWxsIGJlIHJlLWFkZGVkIHZpYSBpbm5lciBlbGVtZW50cyovXG5cdCYmID4gZGl2ID4gZGl2IHtcblx0XHRwYWRkaW5nOiAwO1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXJDb250cm9scyA9IGNzc2Bcblx0cGFkZGluZzogJHsgc3BhY2UoIDIgKSB9O1xuXG5cdD4gZGl2OmZpcnN0LW9mLXR5cGUgPiAkeyBTdHlsZWRMYWJlbCB9IHtcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xuXHRcdCR7IGxhYmVsU3R5bGVzIH1cblx0fVxuXG5cdCYmICR7IFN0eWxlZExhYmVsIH0gKyBidXR0b246bm90KCAuaGFzLXRleHQgKSB7XG5cdFx0bWluLXdpZHRoOiAyNHB4O1xuXHRcdHBhZGRpbmc6IDA7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sUG9wb3ZlckNvbnRlbnQgPSBjc3NgYDtcbmV4cG9ydCBjb25zdCBib3JkZXJDb2xvckluZGljYXRvciA9IGNzc2BgO1xuXG5leHBvcnQgY29uc3QgcmVzZXRCdXR0b24gPSBjc3NgXG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXHR3aWR0aDogMTAwJTtcblxuXHQvKiBPdmVycmlkZSBidXR0b24gY29tcG9uZW50IHN0eWxpbmcgKi9cblx0JiYge1xuXHRcdGJvcmRlci10b3A6ICR7IENPTkZJRy5ib3JkZXJXaWR0aCB9IHNvbGlkICR7IENPTE9SUy5ncmF5WyAyMDAgXSB9O1xuXHRcdGhlaWdodDogNDZweDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlcldpZHRoQ29udHJvbCA9ICgpID0+IGNzc2Bcblx0LyogVGFyZ2V0IHRoZSBJbnB1dENvbnRyb2wncyBiYWNrZHJvcCAqL1xuXHQmJiYgJHsgQmFja2Ryb3BVSSB9IHtcblx0XHRib3JkZXI6IG5vbmU7XG5cdH1cblxuXHQvKiBTcGVjaWZpY2l0eSByZXF1aXJlZCB0byBvdmVyY29tZSBVbml0Q29udHJvbCBwYWRkaW5nICovXG5cdC8qIFNlZSBwYWNrYWdlcy9jb21wb25lbnRzL3NyYy91bml0LWNvbnRyb2wvc3R5bGVzL3VuaXQtY29udHJvbC1zdHlsZXMudHMgKi9cblx0JiYmIGlucHV0IHtcblx0XHQkeyBydGwoIHsgcGFkZGluZ1JpZ2h0OiAwIH0gKSgpIH1cblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xTdHlsZVBpY2tlciA9IGNzc2Bcblx0JHsgU3R5bGVkTGFiZWwgfSB7XG5cdFx0JHsgbGFiZWxTdHlsZXMgfVxuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyU3R5bGVCdXR0b24gPSBjc3NgXG5cdCYmJiYmIHtcblx0XHRtaW4td2lkdGg6IDMwcHg7XG5cdFx0d2lkdGg6IDMwcHg7XG5cdFx0aGVpZ2h0OiAzMHB4O1xuXHRcdHBhZGRpbmc6IDNweDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlclNsaWRlciA9ICgpID0+IGNzc2Bcblx0ZmxleDogMSAxIDYwJTtcblx0JHsgcnRsKCB7IG1hcmdpblJpZ2h0OiBzcGFjZSggMyApIH0gKSgpIH1cblxuXHQkeyBTdHlsZWRGaWVsZCB9IHtcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xuXHRcdGZvbnQtc2l6ZTogMDtcblx0XHRkaXNwbGF5OiBmbGV4O1xuXHR9XG5gO1xuIl19 */");
export const borderColorIndicator = /*#__PURE__*/css(process.env.NODE_ENV === "production" ? "" : ";label:borderColorIndicator;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTJJdUMiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9ib3JkZXItY29udHJvbC9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgdHlwZSB7IENTU1Byb3BlcnRpZXMgfSBmcm9tICdyZWFjdCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IENPTE9SUywgQ09ORklHLCBydGwgfSBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uL3VpL3V0aWxzL3NwYWNlJztcbmltcG9ydCB7XG5cdFN0eWxlZEZpZWxkLFxuXHRTdHlsZWRMYWJlbCxcbn0gZnJvbSAnLi4vYmFzZS1jb250cm9sL3N0eWxlcy9iYXNlLWNvbnRyb2wtc3R5bGVzJztcbmltcG9ydCB7IEJhY2tkcm9wVUkgfSBmcm9tICcuLi9pbnB1dC1jb250cm9sL3N0eWxlcy9pbnB1dC1jb250cm9sLXN0eWxlcyc7XG5pbXBvcnQgeyBSb290IGFzIFVuaXRDb250cm9sV3JhcHBlciB9IGZyb20gJy4uL3VuaXQtY29udHJvbC9zdHlsZXMvdW5pdC1jb250cm9sLXN0eWxlcyc7XG5cbmltcG9ydCB0eXBlIHsgQm9yZGVyIH0gZnJvbSAnLi90eXBlcyc7XG5cbmNvbnN0IGxhYmVsU3R5bGVzID0gY3NzYFxuXHRmb250LXdlaWdodDogNTAwO1xuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2wgPSBjc3NgXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcbmA7XG5cbmV4cG9ydCBjb25zdCBpbm5lcldyYXBwZXIgPSAoKSA9PiBjc3NgXG5cdGJvcmRlcjogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH07XG5cdGJvcmRlci1yYWRpdXM6IDJweDtcblx0ZmxleDogMSAwIDQwJTtcblxuXHQvKlxuXHQgKiBOZWVkcyBtb3JlIHRob3VnaHQuIEFpbSBpcyB0byBwcmV2ZW50IHRoZSBib3JkZXIgZm9yIEJvcmRlckJveENvbnRyb2xcblx0ICogc2hvd2luZyB0aHJvdWdoIHRoZSBjb250cm9sLiBMaWtlbHkgbmVlZHMgdG8gdGFrZSBpbnRvIGFjY291bnRcblx0ICogbGlnaHQvZGFyayB0aGVtZXMgZXRjLlxuXHQgKi9cblx0YmFja2dyb3VuZDogI2ZmZjtcblxuXHQvKlxuXHQgKiBGb3JjZXMgdGhlIHdpZHRoIGNvbnRyb2wgdG8gZmlsbCBhdmFpbGFibGUgc3BhY2UgZ2l2ZW4gVW5pdENvbnRyb2xcblx0ICogcGFzc2VzIGl0cyBjbGFzc05hbWUgZGlyZWN0bHkgdGhyb3VnaCB0byB0aGUgaW5wdXQuXG5cdCAqL1xuXHQkeyBVbml0Q29udHJvbFdyYXBwZXIgfSB7XG5cdFx0ZmxleDogMTtcblx0XHQkeyBydGwoIHsgbWFyZ2luTGVmdDogMCB9ICkoKSB9XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCB3cmFwcGVyV2lkdGggPSAoIHdpZHRoOiBDU1NQcm9wZXJ0aWVzWyAnd2lkdGgnIF0gKSA9PiB7XG5cdHJldHVybiBjc3NgXG5cdFx0d2lkdGg6ICR7IHdpZHRoIH07XG5cdFx0ZmxleDogMCAwIGF1dG87XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbERyb3Bkb3duID0gKCkgPT4gY3NzYFxuXHRiYWNrZ3JvdW5kOiAjZmZmO1xuXHQkeyBydGwoXG5cdFx0e1xuXHRcdFx0Ym9yZGVyUmFkaXVzOiBgMXB4IDAgMCAxcHhgLFxuXHRcdFx0Ym9yZGVyUmlnaHQ6IGAkeyBDT05GSUcuYm9yZGVyV2lkdGggfSBzb2xpZCAkeyBDT0xPUlMuZ3JheVsgMjAwIF0gfWAsXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRib3JkZXJSYWRpdXM6IGAwIDFweCAxcHggMGAsXG5cdFx0XHRib3JkZXJMZWZ0OiBgJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH1gLFxuXHRcdH1cblx0KSgpIH1cblxuXHQmJiA+IGJ1dHRvbiB7XG5cdFx0cGFkZGluZzogJHsgc3BhY2UoIDEgKSB9O1xuXHRcdGJvcmRlci1yYWRpdXM6IGluaGVyaXQ7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBjb2xvckluZGljYXRvckJvcmRlciA9ICggYm9yZGVyPzogQm9yZGVyICkgPT4ge1xuXHRjb25zdCB7IGNvbG9yLCBzdHlsZSB9ID0gYm9yZGVyIHx8IHt9O1xuXG5cdGNvbnN0IGZhbGxiYWNrQ29sb3IgPVxuXHRcdCEhIHN0eWxlICYmIHN0eWxlICE9PSAnbm9uZScgPyBDT0xPUlMuZ3JheVsgMzAwIF0gOiB1bmRlZmluZWQ7XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRib3JkZXItc3R5bGU6ICR7IHN0eWxlID09PSAnbm9uZScgPyAnc29saWQnIDogc3R5bGUgfTtcblx0XHRib3JkZXItY29sb3I6ICR7IGNvbG9yIHx8IGZhbGxiYWNrQ29sb3IgfTtcblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBjb2xvckluZGljYXRvcldyYXBwZXIgPSAoIGJvcmRlcj86IEJvcmRlciApID0+IHtcblx0Y29uc3QgeyBzdHlsZSB9ID0gYm9yZGVyIHx8IHt9O1xuXG5cdHJldHVybiBjc3NgXG5cdFx0Ym9yZGVyLXJhZGl1czogOTk5OXB4O1xuXHRcdGJvcmRlcjogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuXHRcdCR7IHN0eWxlID8gY29sb3JJbmRpY2F0b3JCb3JkZXIoIGJvcmRlciApIDogdW5kZWZpbmVkIH1cblx0XHR3aWR0aDogMjhweDtcblx0XHRoZWlnaHQ6IDI4cHg7XG5cdFx0cGFkZGluZzogMnB4O1xuXG5cdFx0Lypcblx0XHQgKiBDb2xvckluZGljYXRvclxuXHRcdCAqXG5cdFx0ICogVGhlIHRyYW5zcGFyZW50IGNvbG9ycyB1c2VkIGhlcmUgZW5zdXJlIHZpc2liaWxpdHkgb2YgdGhlIGluZGljYXRvclxuXHRcdCAqIG92ZXIgdGhlIGFjdGl2ZSBzdGF0ZSBvZiB0aGUgYm9yZGVyIGNvbnRyb2wgZHJvcGRvd24ncyB0b2dnbGUgYnV0dG9uLlxuXHRcdCAqL1xuXHRcdCYgPiBzcGFuIHtcblx0XHRcdGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChcblx0XHRcdFx0LTQ1ZGVnLFxuXHRcdFx0XHR0cmFuc3BhcmVudCA0OCUsXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA0OCUsXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA1MiUsXG5cdFx0XHRcdHRyYW5zcGFyZW50IDUyJVxuXHRcdFx0KTtcblx0XHR9XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXIgPSBjc3NgXG5cdC8qIFJlbW92ZSBwYWRkaW5nIGZyb20gY29udGVudCwgdGhpcyB3aWxsIGJlIHJlLWFkZGVkIHZpYSBpbm5lciBlbGVtZW50cyovXG5cdCYmID4gZGl2ID4gZGl2IHtcblx0XHRwYWRkaW5nOiAwO1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXJDb250cm9scyA9IGNzc2Bcblx0cGFkZGluZzogJHsgc3BhY2UoIDIgKSB9O1xuXG5cdD4gZGl2OmZpcnN0LW9mLXR5cGUgPiAkeyBTdHlsZWRMYWJlbCB9IHtcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xuXHRcdCR7IGxhYmVsU3R5bGVzIH1cblx0fVxuXG5cdCYmICR7IFN0eWxlZExhYmVsIH0gKyBidXR0b246bm90KCAuaGFzLXRleHQgKSB7XG5cdFx0bWluLXdpZHRoOiAyNHB4O1xuXHRcdHBhZGRpbmc6IDA7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sUG9wb3ZlckNvbnRlbnQgPSBjc3NgYDtcbmV4cG9ydCBjb25zdCBib3JkZXJDb2xvckluZGljYXRvciA9IGNzc2BgO1xuXG5leHBvcnQgY29uc3QgcmVzZXRCdXR0b24gPSBjc3NgXG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXHR3aWR0aDogMTAwJTtcblxuXHQvKiBPdmVycmlkZSBidXR0b24gY29tcG9uZW50IHN0eWxpbmcgKi9cblx0JiYge1xuXHRcdGJvcmRlci10b3A6ICR7IENPTkZJRy5ib3JkZXJXaWR0aCB9IHNvbGlkICR7IENPTE9SUy5ncmF5WyAyMDAgXSB9O1xuXHRcdGhlaWdodDogNDZweDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlcldpZHRoQ29udHJvbCA9ICgpID0+IGNzc2Bcblx0LyogVGFyZ2V0IHRoZSBJbnB1dENvbnRyb2wncyBiYWNrZHJvcCAqL1xuXHQmJiYgJHsgQmFja2Ryb3BVSSB9IHtcblx0XHRib3JkZXI6IG5vbmU7XG5cdH1cblxuXHQvKiBTcGVjaWZpY2l0eSByZXF1aXJlZCB0byBvdmVyY29tZSBVbml0Q29udHJvbCBwYWRkaW5nICovXG5cdC8qIFNlZSBwYWNrYWdlcy9jb21wb25lbnRzL3NyYy91bml0LWNvbnRyb2wvc3R5bGVzL3VuaXQtY29udHJvbC1zdHlsZXMudHMgKi9cblx0JiYmIGlucHV0IHtcblx0XHQkeyBydGwoIHsgcGFkZGluZ1JpZ2h0OiAwIH0gKSgpIH1cblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xTdHlsZVBpY2tlciA9IGNzc2Bcblx0JHsgU3R5bGVkTGFiZWwgfSB7XG5cdFx0JHsgbGFiZWxTdHlsZXMgfVxuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyU3R5bGVCdXR0b24gPSBjc3NgXG5cdCYmJiYmIHtcblx0XHRtaW4td2lkdGg6IDMwcHg7XG5cdFx0d2lkdGg6IDMwcHg7XG5cdFx0aGVpZ2h0OiAzMHB4O1xuXHRcdHBhZGRpbmc6IDNweDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlclNsaWRlciA9ICgpID0+IGNzc2Bcblx0ZmxleDogMSAxIDYwJTtcblx0JHsgcnRsKCB7IG1hcmdpblJpZ2h0OiBzcGFjZSggMyApIH0gKSgpIH1cblxuXHQkeyBTdHlsZWRGaWVsZCB9IHtcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xuXHRcdGZvbnQtc2l6ZTogMDtcblx0XHRkaXNwbGF5OiBmbGV4O1xuXHR9XG5gO1xuIl19 */");
export const resetButton = /*#__PURE__*/css("justify-content:center;width:100%;&&{border-top:", CONFIG.borderWidth, " solid ", COLORS.gray[200], ";height:46px;}" + (process.env.NODE_ENV === "production" ? "" : ";label:resetButton;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTZJOEIiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9ib3JkZXItY29udHJvbC9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgdHlwZSB7IENTU1Byb3BlcnRpZXMgfSBmcm9tICdyZWFjdCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IENPTE9SUywgQ09ORklHLCBydGwgfSBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uL3VpL3V0aWxzL3NwYWNlJztcbmltcG9ydCB7XG5cdFN0eWxlZEZpZWxkLFxuXHRTdHlsZWRMYWJlbCxcbn0gZnJvbSAnLi4vYmFzZS1jb250cm9sL3N0eWxlcy9iYXNlLWNvbnRyb2wtc3R5bGVzJztcbmltcG9ydCB7IEJhY2tkcm9wVUkgfSBmcm9tICcuLi9pbnB1dC1jb250cm9sL3N0eWxlcy9pbnB1dC1jb250cm9sLXN0eWxlcyc7XG5pbXBvcnQgeyBSb290IGFzIFVuaXRDb250cm9sV3JhcHBlciB9IGZyb20gJy4uL3VuaXQtY29udHJvbC9zdHlsZXMvdW5pdC1jb250cm9sLXN0eWxlcyc7XG5cbmltcG9ydCB0eXBlIHsgQm9yZGVyIH0gZnJvbSAnLi90eXBlcyc7XG5cbmNvbnN0IGxhYmVsU3R5bGVzID0gY3NzYFxuXHRmb250LXdlaWdodDogNTAwO1xuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2wgPSBjc3NgXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcbmA7XG5cbmV4cG9ydCBjb25zdCBpbm5lcldyYXBwZXIgPSAoKSA9PiBjc3NgXG5cdGJvcmRlcjogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH07XG5cdGJvcmRlci1yYWRpdXM6IDJweDtcblx0ZmxleDogMSAwIDQwJTtcblxuXHQvKlxuXHQgKiBOZWVkcyBtb3JlIHRob3VnaHQuIEFpbSBpcyB0byBwcmV2ZW50IHRoZSBib3JkZXIgZm9yIEJvcmRlckJveENvbnRyb2xcblx0ICogc2hvd2luZyB0aHJvdWdoIHRoZSBjb250cm9sLiBMaWtlbHkgbmVlZHMgdG8gdGFrZSBpbnRvIGFjY291bnRcblx0ICogbGlnaHQvZGFyayB0aGVtZXMgZXRjLlxuXHQgKi9cblx0YmFja2dyb3VuZDogI2ZmZjtcblxuXHQvKlxuXHQgKiBGb3JjZXMgdGhlIHdpZHRoIGNvbnRyb2wgdG8gZmlsbCBhdmFpbGFibGUgc3BhY2UgZ2l2ZW4gVW5pdENvbnRyb2xcblx0ICogcGFzc2VzIGl0cyBjbGFzc05hbWUgZGlyZWN0bHkgdGhyb3VnaCB0byB0aGUgaW5wdXQuXG5cdCAqL1xuXHQkeyBVbml0Q29udHJvbFdyYXBwZXIgfSB7XG5cdFx0ZmxleDogMTtcblx0XHQkeyBydGwoIHsgbWFyZ2luTGVmdDogMCB9ICkoKSB9XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCB3cmFwcGVyV2lkdGggPSAoIHdpZHRoOiBDU1NQcm9wZXJ0aWVzWyAnd2lkdGgnIF0gKSA9PiB7XG5cdHJldHVybiBjc3NgXG5cdFx0d2lkdGg6ICR7IHdpZHRoIH07XG5cdFx0ZmxleDogMCAwIGF1dG87XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbERyb3Bkb3duID0gKCkgPT4gY3NzYFxuXHRiYWNrZ3JvdW5kOiAjZmZmO1xuXHQkeyBydGwoXG5cdFx0e1xuXHRcdFx0Ym9yZGVyUmFkaXVzOiBgMXB4IDAgMCAxcHhgLFxuXHRcdFx0Ym9yZGVyUmlnaHQ6IGAkeyBDT05GSUcuYm9yZGVyV2lkdGggfSBzb2xpZCAkeyBDT0xPUlMuZ3JheVsgMjAwIF0gfWAsXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRib3JkZXJSYWRpdXM6IGAwIDFweCAxcHggMGAsXG5cdFx0XHRib3JkZXJMZWZ0OiBgJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH1gLFxuXHRcdH1cblx0KSgpIH1cblxuXHQmJiA+IGJ1dHRvbiB7XG5cdFx0cGFkZGluZzogJHsgc3BhY2UoIDEgKSB9O1xuXHRcdGJvcmRlci1yYWRpdXM6IGluaGVyaXQ7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBjb2xvckluZGljYXRvckJvcmRlciA9ICggYm9yZGVyPzogQm9yZGVyICkgPT4ge1xuXHRjb25zdCB7IGNvbG9yLCBzdHlsZSB9ID0gYm9yZGVyIHx8IHt9O1xuXG5cdGNvbnN0IGZhbGxiYWNrQ29sb3IgPVxuXHRcdCEhIHN0eWxlICYmIHN0eWxlICE9PSAnbm9uZScgPyBDT0xPUlMuZ3JheVsgMzAwIF0gOiB1bmRlZmluZWQ7XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRib3JkZXItc3R5bGU6ICR7IHN0eWxlID09PSAnbm9uZScgPyAnc29saWQnIDogc3R5bGUgfTtcblx0XHRib3JkZXItY29sb3I6ICR7IGNvbG9yIHx8IGZhbGxiYWNrQ29sb3IgfTtcblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBjb2xvckluZGljYXRvcldyYXBwZXIgPSAoIGJvcmRlcj86IEJvcmRlciApID0+IHtcblx0Y29uc3QgeyBzdHlsZSB9ID0gYm9yZGVyIHx8IHt9O1xuXG5cdHJldHVybiBjc3NgXG5cdFx0Ym9yZGVyLXJhZGl1czogOTk5OXB4O1xuXHRcdGJvcmRlcjogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuXHRcdCR7IHN0eWxlID8gY29sb3JJbmRpY2F0b3JCb3JkZXIoIGJvcmRlciApIDogdW5kZWZpbmVkIH1cblx0XHR3aWR0aDogMjhweDtcblx0XHRoZWlnaHQ6IDI4cHg7XG5cdFx0cGFkZGluZzogMnB4O1xuXG5cdFx0Lypcblx0XHQgKiBDb2xvckluZGljYXRvclxuXHRcdCAqXG5cdFx0ICogVGhlIHRyYW5zcGFyZW50IGNvbG9ycyB1c2VkIGhlcmUgZW5zdXJlIHZpc2liaWxpdHkgb2YgdGhlIGluZGljYXRvclxuXHRcdCAqIG92ZXIgdGhlIGFjdGl2ZSBzdGF0ZSBvZiB0aGUgYm9yZGVyIGNvbnRyb2wgZHJvcGRvd24ncyB0b2dnbGUgYnV0dG9uLlxuXHRcdCAqL1xuXHRcdCYgPiBzcGFuIHtcblx0XHRcdGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChcblx0XHRcdFx0LTQ1ZGVnLFxuXHRcdFx0XHR0cmFuc3BhcmVudCA0OCUsXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA0OCUsXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA1MiUsXG5cdFx0XHRcdHRyYW5zcGFyZW50IDUyJVxuXHRcdFx0KTtcblx0XHR9XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXIgPSBjc3NgXG5cdC8qIFJlbW92ZSBwYWRkaW5nIGZyb20gY29udGVudCwgdGhpcyB3aWxsIGJlIHJlLWFkZGVkIHZpYSBpbm5lciBlbGVtZW50cyovXG5cdCYmID4gZGl2ID4gZGl2IHtcblx0XHRwYWRkaW5nOiAwO1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXJDb250cm9scyA9IGNzc2Bcblx0cGFkZGluZzogJHsgc3BhY2UoIDIgKSB9O1xuXG5cdD4gZGl2OmZpcnN0LW9mLXR5cGUgPiAkeyBTdHlsZWRMYWJlbCB9IHtcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xuXHRcdCR7IGxhYmVsU3R5bGVzIH1cblx0fVxuXG5cdCYmICR7IFN0eWxlZExhYmVsIH0gKyBidXR0b246bm90KCAuaGFzLXRleHQgKSB7XG5cdFx0bWluLXdpZHRoOiAyNHB4O1xuXHRcdHBhZGRpbmc6IDA7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sUG9wb3ZlckNvbnRlbnQgPSBjc3NgYDtcbmV4cG9ydCBjb25zdCBib3JkZXJDb2xvckluZGljYXRvciA9IGNzc2BgO1xuXG5leHBvcnQgY29uc3QgcmVzZXRCdXR0b24gPSBjc3NgXG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXHR3aWR0aDogMTAwJTtcblxuXHQvKiBPdmVycmlkZSBidXR0b24gY29tcG9uZW50IHN0eWxpbmcgKi9cblx0JiYge1xuXHRcdGJvcmRlci10b3A6ICR7IENPTkZJRy5ib3JkZXJXaWR0aCB9IHNvbGlkICR7IENPTE9SUy5ncmF5WyAyMDAgXSB9O1xuXHRcdGhlaWdodDogNDZweDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlcldpZHRoQ29udHJvbCA9ICgpID0+IGNzc2Bcblx0LyogVGFyZ2V0IHRoZSBJbnB1dENvbnRyb2wncyBiYWNrZHJvcCAqL1xuXHQmJiYgJHsgQmFja2Ryb3BVSSB9IHtcblx0XHRib3JkZXI6IG5vbmU7XG5cdH1cblxuXHQvKiBTcGVjaWZpY2l0eSByZXF1aXJlZCB0byBvdmVyY29tZSBVbml0Q29udHJvbCBwYWRkaW5nICovXG5cdC8qIFNlZSBwYWNrYWdlcy9jb21wb25lbnRzL3NyYy91bml0LWNvbnRyb2wvc3R5bGVzL3VuaXQtY29udHJvbC1zdHlsZXMudHMgKi9cblx0JiYmIGlucHV0IHtcblx0XHQkeyBydGwoIHsgcGFkZGluZ1JpZ2h0OiAwIH0gKSgpIH1cblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xTdHlsZVBpY2tlciA9IGNzc2Bcblx0JHsgU3R5bGVkTGFiZWwgfSB7XG5cdFx0JHsgbGFiZWxTdHlsZXMgfVxuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyU3R5bGVCdXR0b24gPSBjc3NgXG5cdCYmJiYmIHtcblx0XHRtaW4td2lkdGg6IDMwcHg7XG5cdFx0d2lkdGg6IDMwcHg7XG5cdFx0aGVpZ2h0OiAzMHB4O1xuXHRcdHBhZGRpbmc6IDNweDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlclNsaWRlciA9ICgpID0+IGNzc2Bcblx0ZmxleDogMSAxIDYwJTtcblx0JHsgcnRsKCB7IG1hcmdpblJpZ2h0OiBzcGFjZSggMyApIH0gKSgpIH1cblxuXHQkeyBTdHlsZWRGaWVsZCB9IHtcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xuXHRcdGZvbnQtc2l6ZTogMDtcblx0XHRkaXNwbGF5OiBmbGV4O1xuXHR9XG5gO1xuIl19 */");
export const borderWidthControl = () => /*#__PURE__*/css("&&& ", BackdropUI, "{border:none;}&&& input{", rtl({
  paddingRight: 0
})(), ";}" + (process.env.NODE_ENV === "production" ? "" : ";label:borderWidthControl;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXdKMkMiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9ib3JkZXItY29udHJvbC9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgdHlwZSB7IENTU1Byb3BlcnRpZXMgfSBmcm9tICdyZWFjdCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IENPTE9SUywgQ09ORklHLCBydGwgfSBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uL3VpL3V0aWxzL3NwYWNlJztcbmltcG9ydCB7XG5cdFN0eWxlZEZpZWxkLFxuXHRTdHlsZWRMYWJlbCxcbn0gZnJvbSAnLi4vYmFzZS1jb250cm9sL3N0eWxlcy9iYXNlLWNvbnRyb2wtc3R5bGVzJztcbmltcG9ydCB7IEJhY2tkcm9wVUkgfSBmcm9tICcuLi9pbnB1dC1jb250cm9sL3N0eWxlcy9pbnB1dC1jb250cm9sLXN0eWxlcyc7XG5pbXBvcnQgeyBSb290IGFzIFVuaXRDb250cm9sV3JhcHBlciB9IGZyb20gJy4uL3VuaXQtY29udHJvbC9zdHlsZXMvdW5pdC1jb250cm9sLXN0eWxlcyc7XG5cbmltcG9ydCB0eXBlIHsgQm9yZGVyIH0gZnJvbSAnLi90eXBlcyc7XG5cbmNvbnN0IGxhYmVsU3R5bGVzID0gY3NzYFxuXHRmb250LXdlaWdodDogNTAwO1xuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2wgPSBjc3NgXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcbmA7XG5cbmV4cG9ydCBjb25zdCBpbm5lcldyYXBwZXIgPSAoKSA9PiBjc3NgXG5cdGJvcmRlcjogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH07XG5cdGJvcmRlci1yYWRpdXM6IDJweDtcblx0ZmxleDogMSAwIDQwJTtcblxuXHQvKlxuXHQgKiBOZWVkcyBtb3JlIHRob3VnaHQuIEFpbSBpcyB0byBwcmV2ZW50IHRoZSBib3JkZXIgZm9yIEJvcmRlckJveENvbnRyb2xcblx0ICogc2hvd2luZyB0aHJvdWdoIHRoZSBjb250cm9sLiBMaWtlbHkgbmVlZHMgdG8gdGFrZSBpbnRvIGFjY291bnRcblx0ICogbGlnaHQvZGFyayB0aGVtZXMgZXRjLlxuXHQgKi9cblx0YmFja2dyb3VuZDogI2ZmZjtcblxuXHQvKlxuXHQgKiBGb3JjZXMgdGhlIHdpZHRoIGNvbnRyb2wgdG8gZmlsbCBhdmFpbGFibGUgc3BhY2UgZ2l2ZW4gVW5pdENvbnRyb2xcblx0ICogcGFzc2VzIGl0cyBjbGFzc05hbWUgZGlyZWN0bHkgdGhyb3VnaCB0byB0aGUgaW5wdXQuXG5cdCAqL1xuXHQkeyBVbml0Q29udHJvbFdyYXBwZXIgfSB7XG5cdFx0ZmxleDogMTtcblx0XHQkeyBydGwoIHsgbWFyZ2luTGVmdDogMCB9ICkoKSB9XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCB3cmFwcGVyV2lkdGggPSAoIHdpZHRoOiBDU1NQcm9wZXJ0aWVzWyAnd2lkdGgnIF0gKSA9PiB7XG5cdHJldHVybiBjc3NgXG5cdFx0d2lkdGg6ICR7IHdpZHRoIH07XG5cdFx0ZmxleDogMCAwIGF1dG87XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbERyb3Bkb3duID0gKCkgPT4gY3NzYFxuXHRiYWNrZ3JvdW5kOiAjZmZmO1xuXHQkeyBydGwoXG5cdFx0e1xuXHRcdFx0Ym9yZGVyUmFkaXVzOiBgMXB4IDAgMCAxcHhgLFxuXHRcdFx0Ym9yZGVyUmlnaHQ6IGAkeyBDT05GSUcuYm9yZGVyV2lkdGggfSBzb2xpZCAkeyBDT0xPUlMuZ3JheVsgMjAwIF0gfWAsXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRib3JkZXJSYWRpdXM6IGAwIDFweCAxcHggMGAsXG5cdFx0XHRib3JkZXJMZWZ0OiBgJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH1gLFxuXHRcdH1cblx0KSgpIH1cblxuXHQmJiA+IGJ1dHRvbiB7XG5cdFx0cGFkZGluZzogJHsgc3BhY2UoIDEgKSB9O1xuXHRcdGJvcmRlci1yYWRpdXM6IGluaGVyaXQ7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBjb2xvckluZGljYXRvckJvcmRlciA9ICggYm9yZGVyPzogQm9yZGVyICkgPT4ge1xuXHRjb25zdCB7IGNvbG9yLCBzdHlsZSB9ID0gYm9yZGVyIHx8IHt9O1xuXG5cdGNvbnN0IGZhbGxiYWNrQ29sb3IgPVxuXHRcdCEhIHN0eWxlICYmIHN0eWxlICE9PSAnbm9uZScgPyBDT0xPUlMuZ3JheVsgMzAwIF0gOiB1bmRlZmluZWQ7XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRib3JkZXItc3R5bGU6ICR7IHN0eWxlID09PSAnbm9uZScgPyAnc29saWQnIDogc3R5bGUgfTtcblx0XHRib3JkZXItY29sb3I6ICR7IGNvbG9yIHx8IGZhbGxiYWNrQ29sb3IgfTtcblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBjb2xvckluZGljYXRvcldyYXBwZXIgPSAoIGJvcmRlcj86IEJvcmRlciApID0+IHtcblx0Y29uc3QgeyBzdHlsZSB9ID0gYm9yZGVyIHx8IHt9O1xuXG5cdHJldHVybiBjc3NgXG5cdFx0Ym9yZGVyLXJhZGl1czogOTk5OXB4O1xuXHRcdGJvcmRlcjogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuXHRcdCR7IHN0eWxlID8gY29sb3JJbmRpY2F0b3JCb3JkZXIoIGJvcmRlciApIDogdW5kZWZpbmVkIH1cblx0XHR3aWR0aDogMjhweDtcblx0XHRoZWlnaHQ6IDI4cHg7XG5cdFx0cGFkZGluZzogMnB4O1xuXG5cdFx0Lypcblx0XHQgKiBDb2xvckluZGljYXRvclxuXHRcdCAqXG5cdFx0ICogVGhlIHRyYW5zcGFyZW50IGNvbG9ycyB1c2VkIGhlcmUgZW5zdXJlIHZpc2liaWxpdHkgb2YgdGhlIGluZGljYXRvclxuXHRcdCAqIG92ZXIgdGhlIGFjdGl2ZSBzdGF0ZSBvZiB0aGUgYm9yZGVyIGNvbnRyb2wgZHJvcGRvd24ncyB0b2dnbGUgYnV0dG9uLlxuXHRcdCAqL1xuXHRcdCYgPiBzcGFuIHtcblx0XHRcdGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChcblx0XHRcdFx0LTQ1ZGVnLFxuXHRcdFx0XHR0cmFuc3BhcmVudCA0OCUsXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA0OCUsXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA1MiUsXG5cdFx0XHRcdHRyYW5zcGFyZW50IDUyJVxuXHRcdFx0KTtcblx0XHR9XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXIgPSBjc3NgXG5cdC8qIFJlbW92ZSBwYWRkaW5nIGZyb20gY29udGVudCwgdGhpcyB3aWxsIGJlIHJlLWFkZGVkIHZpYSBpbm5lciBlbGVtZW50cyovXG5cdCYmID4gZGl2ID4gZGl2IHtcblx0XHRwYWRkaW5nOiAwO1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXJDb250cm9scyA9IGNzc2Bcblx0cGFkZGluZzogJHsgc3BhY2UoIDIgKSB9O1xuXG5cdD4gZGl2OmZpcnN0LW9mLXR5cGUgPiAkeyBTdHlsZWRMYWJlbCB9IHtcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xuXHRcdCR7IGxhYmVsU3R5bGVzIH1cblx0fVxuXG5cdCYmICR7IFN0eWxlZExhYmVsIH0gKyBidXR0b246bm90KCAuaGFzLXRleHQgKSB7XG5cdFx0bWluLXdpZHRoOiAyNHB4O1xuXHRcdHBhZGRpbmc6IDA7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sUG9wb3ZlckNvbnRlbnQgPSBjc3NgYDtcbmV4cG9ydCBjb25zdCBib3JkZXJDb2xvckluZGljYXRvciA9IGNzc2BgO1xuXG5leHBvcnQgY29uc3QgcmVzZXRCdXR0b24gPSBjc3NgXG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXHR3aWR0aDogMTAwJTtcblxuXHQvKiBPdmVycmlkZSBidXR0b24gY29tcG9uZW50IHN0eWxpbmcgKi9cblx0JiYge1xuXHRcdGJvcmRlci10b3A6ICR7IENPTkZJRy5ib3JkZXJXaWR0aCB9IHNvbGlkICR7IENPTE9SUy5ncmF5WyAyMDAgXSB9O1xuXHRcdGhlaWdodDogNDZweDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlcldpZHRoQ29udHJvbCA9ICgpID0+IGNzc2Bcblx0LyogVGFyZ2V0IHRoZSBJbnB1dENvbnRyb2wncyBiYWNrZHJvcCAqL1xuXHQmJiYgJHsgQmFja2Ryb3BVSSB9IHtcblx0XHRib3JkZXI6IG5vbmU7XG5cdH1cblxuXHQvKiBTcGVjaWZpY2l0eSByZXF1aXJlZCB0byBvdmVyY29tZSBVbml0Q29udHJvbCBwYWRkaW5nICovXG5cdC8qIFNlZSBwYWNrYWdlcy9jb21wb25lbnRzL3NyYy91bml0LWNvbnRyb2wvc3R5bGVzL3VuaXQtY29udHJvbC1zdHlsZXMudHMgKi9cblx0JiYmIGlucHV0IHtcblx0XHQkeyBydGwoIHsgcGFkZGluZ1JpZ2h0OiAwIH0gKSgpIH1cblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xTdHlsZVBpY2tlciA9IGNzc2Bcblx0JHsgU3R5bGVkTGFiZWwgfSB7XG5cdFx0JHsgbGFiZWxTdHlsZXMgfVxuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyU3R5bGVCdXR0b24gPSBjc3NgXG5cdCYmJiYmIHtcblx0XHRtaW4td2lkdGg6IDMwcHg7XG5cdFx0d2lkdGg6IDMwcHg7XG5cdFx0aGVpZ2h0OiAzMHB4O1xuXHRcdHBhZGRpbmc6IDNweDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlclNsaWRlciA9ICgpID0+IGNzc2Bcblx0ZmxleDogMSAxIDYwJTtcblx0JHsgcnRsKCB7IG1hcmdpblJpZ2h0OiBzcGFjZSggMyApIH0gKSgpIH1cblxuXHQkeyBTdHlsZWRGaWVsZCB9IHtcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xuXHRcdGZvbnQtc2l6ZTogMDtcblx0XHRkaXNwbGF5OiBmbGV4O1xuXHR9XG5gO1xuIl19 */");
export const borderControlStylePicker = /*#__PURE__*/css(StyledLabel, "{", labelStyles, ";}" + (process.env.NODE_ENV === "production" ? "" : ";label:borderControlStylePicker;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXFLMkMiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9ib3JkZXItY29udHJvbC9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgdHlwZSB7IENTU1Byb3BlcnRpZXMgfSBmcm9tICdyZWFjdCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IENPTE9SUywgQ09ORklHLCBydGwgfSBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uL3VpL3V0aWxzL3NwYWNlJztcbmltcG9ydCB7XG5cdFN0eWxlZEZpZWxkLFxuXHRTdHlsZWRMYWJlbCxcbn0gZnJvbSAnLi4vYmFzZS1jb250cm9sL3N0eWxlcy9iYXNlLWNvbnRyb2wtc3R5bGVzJztcbmltcG9ydCB7IEJhY2tkcm9wVUkgfSBmcm9tICcuLi9pbnB1dC1jb250cm9sL3N0eWxlcy9pbnB1dC1jb250cm9sLXN0eWxlcyc7XG5pbXBvcnQgeyBSb290IGFzIFVuaXRDb250cm9sV3JhcHBlciB9IGZyb20gJy4uL3VuaXQtY29udHJvbC9zdHlsZXMvdW5pdC1jb250cm9sLXN0eWxlcyc7XG5cbmltcG9ydCB0eXBlIHsgQm9yZGVyIH0gZnJvbSAnLi90eXBlcyc7XG5cbmNvbnN0IGxhYmVsU3R5bGVzID0gY3NzYFxuXHRmb250LXdlaWdodDogNTAwO1xuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2wgPSBjc3NgXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcbmA7XG5cbmV4cG9ydCBjb25zdCBpbm5lcldyYXBwZXIgPSAoKSA9PiBjc3NgXG5cdGJvcmRlcjogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH07XG5cdGJvcmRlci1yYWRpdXM6IDJweDtcblx0ZmxleDogMSAwIDQwJTtcblxuXHQvKlxuXHQgKiBOZWVkcyBtb3JlIHRob3VnaHQuIEFpbSBpcyB0byBwcmV2ZW50IHRoZSBib3JkZXIgZm9yIEJvcmRlckJveENvbnRyb2xcblx0ICogc2hvd2luZyB0aHJvdWdoIHRoZSBjb250cm9sLiBMaWtlbHkgbmVlZHMgdG8gdGFrZSBpbnRvIGFjY291bnRcblx0ICogbGlnaHQvZGFyayB0aGVtZXMgZXRjLlxuXHQgKi9cblx0YmFja2dyb3VuZDogI2ZmZjtcblxuXHQvKlxuXHQgKiBGb3JjZXMgdGhlIHdpZHRoIGNvbnRyb2wgdG8gZmlsbCBhdmFpbGFibGUgc3BhY2UgZ2l2ZW4gVW5pdENvbnRyb2xcblx0ICogcGFzc2VzIGl0cyBjbGFzc05hbWUgZGlyZWN0bHkgdGhyb3VnaCB0byB0aGUgaW5wdXQuXG5cdCAqL1xuXHQkeyBVbml0Q29udHJvbFdyYXBwZXIgfSB7XG5cdFx0ZmxleDogMTtcblx0XHQkeyBydGwoIHsgbWFyZ2luTGVmdDogMCB9ICkoKSB9XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCB3cmFwcGVyV2lkdGggPSAoIHdpZHRoOiBDU1NQcm9wZXJ0aWVzWyAnd2lkdGgnIF0gKSA9PiB7XG5cdHJldHVybiBjc3NgXG5cdFx0d2lkdGg6ICR7IHdpZHRoIH07XG5cdFx0ZmxleDogMCAwIGF1dG87XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbERyb3Bkb3duID0gKCkgPT4gY3NzYFxuXHRiYWNrZ3JvdW5kOiAjZmZmO1xuXHQkeyBydGwoXG5cdFx0e1xuXHRcdFx0Ym9yZGVyUmFkaXVzOiBgMXB4IDAgMCAxcHhgLFxuXHRcdFx0Ym9yZGVyUmlnaHQ6IGAkeyBDT05GSUcuYm9yZGVyV2lkdGggfSBzb2xpZCAkeyBDT0xPUlMuZ3JheVsgMjAwIF0gfWAsXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRib3JkZXJSYWRpdXM6IGAwIDFweCAxcHggMGAsXG5cdFx0XHRib3JkZXJMZWZ0OiBgJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH1gLFxuXHRcdH1cblx0KSgpIH1cblxuXHQmJiA+IGJ1dHRvbiB7XG5cdFx0cGFkZGluZzogJHsgc3BhY2UoIDEgKSB9O1xuXHRcdGJvcmRlci1yYWRpdXM6IGluaGVyaXQ7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBjb2xvckluZGljYXRvckJvcmRlciA9ICggYm9yZGVyPzogQm9yZGVyICkgPT4ge1xuXHRjb25zdCB7IGNvbG9yLCBzdHlsZSB9ID0gYm9yZGVyIHx8IHt9O1xuXG5cdGNvbnN0IGZhbGxiYWNrQ29sb3IgPVxuXHRcdCEhIHN0eWxlICYmIHN0eWxlICE9PSAnbm9uZScgPyBDT0xPUlMuZ3JheVsgMzAwIF0gOiB1bmRlZmluZWQ7XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRib3JkZXItc3R5bGU6ICR7IHN0eWxlID09PSAnbm9uZScgPyAnc29saWQnIDogc3R5bGUgfTtcblx0XHRib3JkZXItY29sb3I6ICR7IGNvbG9yIHx8IGZhbGxiYWNrQ29sb3IgfTtcblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBjb2xvckluZGljYXRvcldyYXBwZXIgPSAoIGJvcmRlcj86IEJvcmRlciApID0+IHtcblx0Y29uc3QgeyBzdHlsZSB9ID0gYm9yZGVyIHx8IHt9O1xuXG5cdHJldHVybiBjc3NgXG5cdFx0Ym9yZGVyLXJhZGl1czogOTk5OXB4O1xuXHRcdGJvcmRlcjogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuXHRcdCR7IHN0eWxlID8gY29sb3JJbmRpY2F0b3JCb3JkZXIoIGJvcmRlciApIDogdW5kZWZpbmVkIH1cblx0XHR3aWR0aDogMjhweDtcblx0XHRoZWlnaHQ6IDI4cHg7XG5cdFx0cGFkZGluZzogMnB4O1xuXG5cdFx0Lypcblx0XHQgKiBDb2xvckluZGljYXRvclxuXHRcdCAqXG5cdFx0ICogVGhlIHRyYW5zcGFyZW50IGNvbG9ycyB1c2VkIGhlcmUgZW5zdXJlIHZpc2liaWxpdHkgb2YgdGhlIGluZGljYXRvclxuXHRcdCAqIG92ZXIgdGhlIGFjdGl2ZSBzdGF0ZSBvZiB0aGUgYm9yZGVyIGNvbnRyb2wgZHJvcGRvd24ncyB0b2dnbGUgYnV0dG9uLlxuXHRcdCAqL1xuXHRcdCYgPiBzcGFuIHtcblx0XHRcdGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChcblx0XHRcdFx0LTQ1ZGVnLFxuXHRcdFx0XHR0cmFuc3BhcmVudCA0OCUsXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA0OCUsXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA1MiUsXG5cdFx0XHRcdHRyYW5zcGFyZW50IDUyJVxuXHRcdFx0KTtcblx0XHR9XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXIgPSBjc3NgXG5cdC8qIFJlbW92ZSBwYWRkaW5nIGZyb20gY29udGVudCwgdGhpcyB3aWxsIGJlIHJlLWFkZGVkIHZpYSBpbm5lciBlbGVtZW50cyovXG5cdCYmID4gZGl2ID4gZGl2IHtcblx0XHRwYWRkaW5nOiAwO1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXJDb250cm9scyA9IGNzc2Bcblx0cGFkZGluZzogJHsgc3BhY2UoIDIgKSB9O1xuXG5cdD4gZGl2OmZpcnN0LW9mLXR5cGUgPiAkeyBTdHlsZWRMYWJlbCB9IHtcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xuXHRcdCR7IGxhYmVsU3R5bGVzIH1cblx0fVxuXG5cdCYmICR7IFN0eWxlZExhYmVsIH0gKyBidXR0b246bm90KCAuaGFzLXRleHQgKSB7XG5cdFx0bWluLXdpZHRoOiAyNHB4O1xuXHRcdHBhZGRpbmc6IDA7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sUG9wb3ZlckNvbnRlbnQgPSBjc3NgYDtcbmV4cG9ydCBjb25zdCBib3JkZXJDb2xvckluZGljYXRvciA9IGNzc2BgO1xuXG5leHBvcnQgY29uc3QgcmVzZXRCdXR0b24gPSBjc3NgXG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXHR3aWR0aDogMTAwJTtcblxuXHQvKiBPdmVycmlkZSBidXR0b24gY29tcG9uZW50IHN0eWxpbmcgKi9cblx0JiYge1xuXHRcdGJvcmRlci10b3A6ICR7IENPTkZJRy5ib3JkZXJXaWR0aCB9IHNvbGlkICR7IENPTE9SUy5ncmF5WyAyMDAgXSB9O1xuXHRcdGhlaWdodDogNDZweDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlcldpZHRoQ29udHJvbCA9ICgpID0+IGNzc2Bcblx0LyogVGFyZ2V0IHRoZSBJbnB1dENvbnRyb2wncyBiYWNrZHJvcCAqL1xuXHQmJiYgJHsgQmFja2Ryb3BVSSB9IHtcblx0XHRib3JkZXI6IG5vbmU7XG5cdH1cblxuXHQvKiBTcGVjaWZpY2l0eSByZXF1aXJlZCB0byBvdmVyY29tZSBVbml0Q29udHJvbCBwYWRkaW5nICovXG5cdC8qIFNlZSBwYWNrYWdlcy9jb21wb25lbnRzL3NyYy91bml0LWNvbnRyb2wvc3R5bGVzL3VuaXQtY29udHJvbC1zdHlsZXMudHMgKi9cblx0JiYmIGlucHV0IHtcblx0XHQkeyBydGwoIHsgcGFkZGluZ1JpZ2h0OiAwIH0gKSgpIH1cblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xTdHlsZVBpY2tlciA9IGNzc2Bcblx0JHsgU3R5bGVkTGFiZWwgfSB7XG5cdFx0JHsgbGFiZWxTdHlsZXMgfVxuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyU3R5bGVCdXR0b24gPSBjc3NgXG5cdCYmJiYmIHtcblx0XHRtaW4td2lkdGg6IDMwcHg7XG5cdFx0d2lkdGg6IDMwcHg7XG5cdFx0aGVpZ2h0OiAzMHB4O1xuXHRcdHBhZGRpbmc6IDNweDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlclNsaWRlciA9ICgpID0+IGNzc2Bcblx0ZmxleDogMSAxIDYwJTtcblx0JHsgcnRsKCB7IG1hcmdpblJpZ2h0OiBzcGFjZSggMyApIH0gKSgpIH1cblxuXHQkeyBTdHlsZWRGaWVsZCB9IHtcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xuXHRcdGZvbnQtc2l6ZTogMDtcblx0XHRkaXNwbGF5OiBmbGV4O1xuXHR9XG5gO1xuIl19 */");
export const borderStyleButton = process.env.NODE_ENV === "production" ? {
  name: "1486260",
  styles: "&&&&&{min-width:30px;width:30px;height:30px;padding:3px;}"
} : {
  name: "6r7ylf-borderStyleButton",
  styles: "&&&&&{min-width:30px;width:30px;height:30px;padding:3px;};label:borderStyleButton;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTJLb0MiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9ib3JkZXItY29udHJvbC9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgdHlwZSB7IENTU1Byb3BlcnRpZXMgfSBmcm9tICdyZWFjdCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IENPTE9SUywgQ09ORklHLCBydGwgfSBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uL3VpL3V0aWxzL3NwYWNlJztcbmltcG9ydCB7XG5cdFN0eWxlZEZpZWxkLFxuXHRTdHlsZWRMYWJlbCxcbn0gZnJvbSAnLi4vYmFzZS1jb250cm9sL3N0eWxlcy9iYXNlLWNvbnRyb2wtc3R5bGVzJztcbmltcG9ydCB7IEJhY2tkcm9wVUkgfSBmcm9tICcuLi9pbnB1dC1jb250cm9sL3N0eWxlcy9pbnB1dC1jb250cm9sLXN0eWxlcyc7XG5pbXBvcnQgeyBSb290IGFzIFVuaXRDb250cm9sV3JhcHBlciB9IGZyb20gJy4uL3VuaXQtY29udHJvbC9zdHlsZXMvdW5pdC1jb250cm9sLXN0eWxlcyc7XG5cbmltcG9ydCB0eXBlIHsgQm9yZGVyIH0gZnJvbSAnLi90eXBlcyc7XG5cbmNvbnN0IGxhYmVsU3R5bGVzID0gY3NzYFxuXHRmb250LXdlaWdodDogNTAwO1xuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2wgPSBjc3NgXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcbmA7XG5cbmV4cG9ydCBjb25zdCBpbm5lcldyYXBwZXIgPSAoKSA9PiBjc3NgXG5cdGJvcmRlcjogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH07XG5cdGJvcmRlci1yYWRpdXM6IDJweDtcblx0ZmxleDogMSAwIDQwJTtcblxuXHQvKlxuXHQgKiBOZWVkcyBtb3JlIHRob3VnaHQuIEFpbSBpcyB0byBwcmV2ZW50IHRoZSBib3JkZXIgZm9yIEJvcmRlckJveENvbnRyb2xcblx0ICogc2hvd2luZyB0aHJvdWdoIHRoZSBjb250cm9sLiBMaWtlbHkgbmVlZHMgdG8gdGFrZSBpbnRvIGFjY291bnRcblx0ICogbGlnaHQvZGFyayB0aGVtZXMgZXRjLlxuXHQgKi9cblx0YmFja2dyb3VuZDogI2ZmZjtcblxuXHQvKlxuXHQgKiBGb3JjZXMgdGhlIHdpZHRoIGNvbnRyb2wgdG8gZmlsbCBhdmFpbGFibGUgc3BhY2UgZ2l2ZW4gVW5pdENvbnRyb2xcblx0ICogcGFzc2VzIGl0cyBjbGFzc05hbWUgZGlyZWN0bHkgdGhyb3VnaCB0byB0aGUgaW5wdXQuXG5cdCAqL1xuXHQkeyBVbml0Q29udHJvbFdyYXBwZXIgfSB7XG5cdFx0ZmxleDogMTtcblx0XHQkeyBydGwoIHsgbWFyZ2luTGVmdDogMCB9ICkoKSB9XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCB3cmFwcGVyV2lkdGggPSAoIHdpZHRoOiBDU1NQcm9wZXJ0aWVzWyAnd2lkdGgnIF0gKSA9PiB7XG5cdHJldHVybiBjc3NgXG5cdFx0d2lkdGg6ICR7IHdpZHRoIH07XG5cdFx0ZmxleDogMCAwIGF1dG87XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbERyb3Bkb3duID0gKCkgPT4gY3NzYFxuXHRiYWNrZ3JvdW5kOiAjZmZmO1xuXHQkeyBydGwoXG5cdFx0e1xuXHRcdFx0Ym9yZGVyUmFkaXVzOiBgMXB4IDAgMCAxcHhgLFxuXHRcdFx0Ym9yZGVyUmlnaHQ6IGAkeyBDT05GSUcuYm9yZGVyV2lkdGggfSBzb2xpZCAkeyBDT0xPUlMuZ3JheVsgMjAwIF0gfWAsXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRib3JkZXJSYWRpdXM6IGAwIDFweCAxcHggMGAsXG5cdFx0XHRib3JkZXJMZWZ0OiBgJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH1gLFxuXHRcdH1cblx0KSgpIH1cblxuXHQmJiA+IGJ1dHRvbiB7XG5cdFx0cGFkZGluZzogJHsgc3BhY2UoIDEgKSB9O1xuXHRcdGJvcmRlci1yYWRpdXM6IGluaGVyaXQ7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBjb2xvckluZGljYXRvckJvcmRlciA9ICggYm9yZGVyPzogQm9yZGVyICkgPT4ge1xuXHRjb25zdCB7IGNvbG9yLCBzdHlsZSB9ID0gYm9yZGVyIHx8IHt9O1xuXG5cdGNvbnN0IGZhbGxiYWNrQ29sb3IgPVxuXHRcdCEhIHN0eWxlICYmIHN0eWxlICE9PSAnbm9uZScgPyBDT0xPUlMuZ3JheVsgMzAwIF0gOiB1bmRlZmluZWQ7XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRib3JkZXItc3R5bGU6ICR7IHN0eWxlID09PSAnbm9uZScgPyAnc29saWQnIDogc3R5bGUgfTtcblx0XHRib3JkZXItY29sb3I6ICR7IGNvbG9yIHx8IGZhbGxiYWNrQ29sb3IgfTtcblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBjb2xvckluZGljYXRvcldyYXBwZXIgPSAoIGJvcmRlcj86IEJvcmRlciApID0+IHtcblx0Y29uc3QgeyBzdHlsZSB9ID0gYm9yZGVyIHx8IHt9O1xuXG5cdHJldHVybiBjc3NgXG5cdFx0Ym9yZGVyLXJhZGl1czogOTk5OXB4O1xuXHRcdGJvcmRlcjogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuXHRcdCR7IHN0eWxlID8gY29sb3JJbmRpY2F0b3JCb3JkZXIoIGJvcmRlciApIDogdW5kZWZpbmVkIH1cblx0XHR3aWR0aDogMjhweDtcblx0XHRoZWlnaHQ6IDI4cHg7XG5cdFx0cGFkZGluZzogMnB4O1xuXG5cdFx0Lypcblx0XHQgKiBDb2xvckluZGljYXRvclxuXHRcdCAqXG5cdFx0ICogVGhlIHRyYW5zcGFyZW50IGNvbG9ycyB1c2VkIGhlcmUgZW5zdXJlIHZpc2liaWxpdHkgb2YgdGhlIGluZGljYXRvclxuXHRcdCAqIG92ZXIgdGhlIGFjdGl2ZSBzdGF0ZSBvZiB0aGUgYm9yZGVyIGNvbnRyb2wgZHJvcGRvd24ncyB0b2dnbGUgYnV0dG9uLlxuXHRcdCAqL1xuXHRcdCYgPiBzcGFuIHtcblx0XHRcdGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChcblx0XHRcdFx0LTQ1ZGVnLFxuXHRcdFx0XHR0cmFuc3BhcmVudCA0OCUsXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA0OCUsXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA1MiUsXG5cdFx0XHRcdHRyYW5zcGFyZW50IDUyJVxuXHRcdFx0KTtcblx0XHR9XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXIgPSBjc3NgXG5cdC8qIFJlbW92ZSBwYWRkaW5nIGZyb20gY29udGVudCwgdGhpcyB3aWxsIGJlIHJlLWFkZGVkIHZpYSBpbm5lciBlbGVtZW50cyovXG5cdCYmID4gZGl2ID4gZGl2IHtcblx0XHRwYWRkaW5nOiAwO1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXJDb250cm9scyA9IGNzc2Bcblx0cGFkZGluZzogJHsgc3BhY2UoIDIgKSB9O1xuXG5cdD4gZGl2OmZpcnN0LW9mLXR5cGUgPiAkeyBTdHlsZWRMYWJlbCB9IHtcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xuXHRcdCR7IGxhYmVsU3R5bGVzIH1cblx0fVxuXG5cdCYmICR7IFN0eWxlZExhYmVsIH0gKyBidXR0b246bm90KCAuaGFzLXRleHQgKSB7XG5cdFx0bWluLXdpZHRoOiAyNHB4O1xuXHRcdHBhZGRpbmc6IDA7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sUG9wb3ZlckNvbnRlbnQgPSBjc3NgYDtcbmV4cG9ydCBjb25zdCBib3JkZXJDb2xvckluZGljYXRvciA9IGNzc2BgO1xuXG5leHBvcnQgY29uc3QgcmVzZXRCdXR0b24gPSBjc3NgXG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXHR3aWR0aDogMTAwJTtcblxuXHQvKiBPdmVycmlkZSBidXR0b24gY29tcG9uZW50IHN0eWxpbmcgKi9cblx0JiYge1xuXHRcdGJvcmRlci10b3A6ICR7IENPTkZJRy5ib3JkZXJXaWR0aCB9IHNvbGlkICR7IENPTE9SUy5ncmF5WyAyMDAgXSB9O1xuXHRcdGhlaWdodDogNDZweDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlcldpZHRoQ29udHJvbCA9ICgpID0+IGNzc2Bcblx0LyogVGFyZ2V0IHRoZSBJbnB1dENvbnRyb2wncyBiYWNrZHJvcCAqL1xuXHQmJiYgJHsgQmFja2Ryb3BVSSB9IHtcblx0XHRib3JkZXI6IG5vbmU7XG5cdH1cblxuXHQvKiBTcGVjaWZpY2l0eSByZXF1aXJlZCB0byBvdmVyY29tZSBVbml0Q29udHJvbCBwYWRkaW5nICovXG5cdC8qIFNlZSBwYWNrYWdlcy9jb21wb25lbnRzL3NyYy91bml0LWNvbnRyb2wvc3R5bGVzL3VuaXQtY29udHJvbC1zdHlsZXMudHMgKi9cblx0JiYmIGlucHV0IHtcblx0XHQkeyBydGwoIHsgcGFkZGluZ1JpZ2h0OiAwIH0gKSgpIH1cblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xTdHlsZVBpY2tlciA9IGNzc2Bcblx0JHsgU3R5bGVkTGFiZWwgfSB7XG5cdFx0JHsgbGFiZWxTdHlsZXMgfVxuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyU3R5bGVCdXR0b24gPSBjc3NgXG5cdCYmJiYmIHtcblx0XHRtaW4td2lkdGg6IDMwcHg7XG5cdFx0d2lkdGg6IDMwcHg7XG5cdFx0aGVpZ2h0OiAzMHB4O1xuXHRcdHBhZGRpbmc6IDNweDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlclNsaWRlciA9ICgpID0+IGNzc2Bcblx0ZmxleDogMSAxIDYwJTtcblx0JHsgcnRsKCB7IG1hcmdpblJpZ2h0OiBzcGFjZSggMyApIH0gKSgpIH1cblxuXHQkeyBTdHlsZWRGaWVsZCB9IHtcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xuXHRcdGZvbnQtc2l6ZTogMDtcblx0XHRkaXNwbGF5OiBmbGV4O1xuXHR9XG5gO1xuIl19 */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};
export const borderSlider = () => /*#__PURE__*/css("flex:1 1 60%;", rtl({
  marginRight: space(3)
})(), " ", StyledField, "{margin-bottom:0;font-size:0;display:flex;}" + (process.env.NODE_ENV === "production" ? "" : ";label:borderSlider;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW9McUMiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9ib3JkZXItY29udHJvbC9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgdHlwZSB7IENTU1Byb3BlcnRpZXMgfSBmcm9tICdyZWFjdCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IENPTE9SUywgQ09ORklHLCBydGwgfSBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uL3VpL3V0aWxzL3NwYWNlJztcbmltcG9ydCB7XG5cdFN0eWxlZEZpZWxkLFxuXHRTdHlsZWRMYWJlbCxcbn0gZnJvbSAnLi4vYmFzZS1jb250cm9sL3N0eWxlcy9iYXNlLWNvbnRyb2wtc3R5bGVzJztcbmltcG9ydCB7IEJhY2tkcm9wVUkgfSBmcm9tICcuLi9pbnB1dC1jb250cm9sL3N0eWxlcy9pbnB1dC1jb250cm9sLXN0eWxlcyc7XG5pbXBvcnQgeyBSb290IGFzIFVuaXRDb250cm9sV3JhcHBlciB9IGZyb20gJy4uL3VuaXQtY29udHJvbC9zdHlsZXMvdW5pdC1jb250cm9sLXN0eWxlcyc7XG5cbmltcG9ydCB0eXBlIHsgQm9yZGVyIH0gZnJvbSAnLi90eXBlcyc7XG5cbmNvbnN0IGxhYmVsU3R5bGVzID0gY3NzYFxuXHRmb250LXdlaWdodDogNTAwO1xuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2wgPSBjc3NgXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcbmA7XG5cbmV4cG9ydCBjb25zdCBpbm5lcldyYXBwZXIgPSAoKSA9PiBjc3NgXG5cdGJvcmRlcjogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH07XG5cdGJvcmRlci1yYWRpdXM6IDJweDtcblx0ZmxleDogMSAwIDQwJTtcblxuXHQvKlxuXHQgKiBOZWVkcyBtb3JlIHRob3VnaHQuIEFpbSBpcyB0byBwcmV2ZW50IHRoZSBib3JkZXIgZm9yIEJvcmRlckJveENvbnRyb2xcblx0ICogc2hvd2luZyB0aHJvdWdoIHRoZSBjb250cm9sLiBMaWtlbHkgbmVlZHMgdG8gdGFrZSBpbnRvIGFjY291bnRcblx0ICogbGlnaHQvZGFyayB0aGVtZXMgZXRjLlxuXHQgKi9cblx0YmFja2dyb3VuZDogI2ZmZjtcblxuXHQvKlxuXHQgKiBGb3JjZXMgdGhlIHdpZHRoIGNvbnRyb2wgdG8gZmlsbCBhdmFpbGFibGUgc3BhY2UgZ2l2ZW4gVW5pdENvbnRyb2xcblx0ICogcGFzc2VzIGl0cyBjbGFzc05hbWUgZGlyZWN0bHkgdGhyb3VnaCB0byB0aGUgaW5wdXQuXG5cdCAqL1xuXHQkeyBVbml0Q29udHJvbFdyYXBwZXIgfSB7XG5cdFx0ZmxleDogMTtcblx0XHQkeyBydGwoIHsgbWFyZ2luTGVmdDogMCB9ICkoKSB9XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCB3cmFwcGVyV2lkdGggPSAoIHdpZHRoOiBDU1NQcm9wZXJ0aWVzWyAnd2lkdGgnIF0gKSA9PiB7XG5cdHJldHVybiBjc3NgXG5cdFx0d2lkdGg6ICR7IHdpZHRoIH07XG5cdFx0ZmxleDogMCAwIGF1dG87XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbERyb3Bkb3duID0gKCkgPT4gY3NzYFxuXHRiYWNrZ3JvdW5kOiAjZmZmO1xuXHQkeyBydGwoXG5cdFx0e1xuXHRcdFx0Ym9yZGVyUmFkaXVzOiBgMXB4IDAgMCAxcHhgLFxuXHRcdFx0Ym9yZGVyUmlnaHQ6IGAkeyBDT05GSUcuYm9yZGVyV2lkdGggfSBzb2xpZCAkeyBDT0xPUlMuZ3JheVsgMjAwIF0gfWAsXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRib3JkZXJSYWRpdXM6IGAwIDFweCAxcHggMGAsXG5cdFx0XHRib3JkZXJMZWZ0OiBgJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH1gLFxuXHRcdH1cblx0KSgpIH1cblxuXHQmJiA+IGJ1dHRvbiB7XG5cdFx0cGFkZGluZzogJHsgc3BhY2UoIDEgKSB9O1xuXHRcdGJvcmRlci1yYWRpdXM6IGluaGVyaXQ7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBjb2xvckluZGljYXRvckJvcmRlciA9ICggYm9yZGVyPzogQm9yZGVyICkgPT4ge1xuXHRjb25zdCB7IGNvbG9yLCBzdHlsZSB9ID0gYm9yZGVyIHx8IHt9O1xuXG5cdGNvbnN0IGZhbGxiYWNrQ29sb3IgPVxuXHRcdCEhIHN0eWxlICYmIHN0eWxlICE9PSAnbm9uZScgPyBDT0xPUlMuZ3JheVsgMzAwIF0gOiB1bmRlZmluZWQ7XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRib3JkZXItc3R5bGU6ICR7IHN0eWxlID09PSAnbm9uZScgPyAnc29saWQnIDogc3R5bGUgfTtcblx0XHRib3JkZXItY29sb3I6ICR7IGNvbG9yIHx8IGZhbGxiYWNrQ29sb3IgfTtcblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBjb2xvckluZGljYXRvcldyYXBwZXIgPSAoIGJvcmRlcj86IEJvcmRlciApID0+IHtcblx0Y29uc3QgeyBzdHlsZSB9ID0gYm9yZGVyIHx8IHt9O1xuXG5cdHJldHVybiBjc3NgXG5cdFx0Ym9yZGVyLXJhZGl1czogOTk5OXB4O1xuXHRcdGJvcmRlcjogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuXHRcdCR7IHN0eWxlID8gY29sb3JJbmRpY2F0b3JCb3JkZXIoIGJvcmRlciApIDogdW5kZWZpbmVkIH1cblx0XHR3aWR0aDogMjhweDtcblx0XHRoZWlnaHQ6IDI4cHg7XG5cdFx0cGFkZGluZzogMnB4O1xuXG5cdFx0Lypcblx0XHQgKiBDb2xvckluZGljYXRvclxuXHRcdCAqXG5cdFx0ICogVGhlIHRyYW5zcGFyZW50IGNvbG9ycyB1c2VkIGhlcmUgZW5zdXJlIHZpc2liaWxpdHkgb2YgdGhlIGluZGljYXRvclxuXHRcdCAqIG92ZXIgdGhlIGFjdGl2ZSBzdGF0ZSBvZiB0aGUgYm9yZGVyIGNvbnRyb2wgZHJvcGRvd24ncyB0b2dnbGUgYnV0dG9uLlxuXHRcdCAqL1xuXHRcdCYgPiBzcGFuIHtcblx0XHRcdGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChcblx0XHRcdFx0LTQ1ZGVnLFxuXHRcdFx0XHR0cmFuc3BhcmVudCA0OCUsXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA0OCUsXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA1MiUsXG5cdFx0XHRcdHRyYW5zcGFyZW50IDUyJVxuXHRcdFx0KTtcblx0XHR9XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXIgPSBjc3NgXG5cdC8qIFJlbW92ZSBwYWRkaW5nIGZyb20gY29udGVudCwgdGhpcyB3aWxsIGJlIHJlLWFkZGVkIHZpYSBpbm5lciBlbGVtZW50cyovXG5cdCYmID4gZGl2ID4gZGl2IHtcblx0XHRwYWRkaW5nOiAwO1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXJDb250cm9scyA9IGNzc2Bcblx0cGFkZGluZzogJHsgc3BhY2UoIDIgKSB9O1xuXG5cdD4gZGl2OmZpcnN0LW9mLXR5cGUgPiAkeyBTdHlsZWRMYWJlbCB9IHtcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xuXHRcdCR7IGxhYmVsU3R5bGVzIH1cblx0fVxuXG5cdCYmICR7IFN0eWxlZExhYmVsIH0gKyBidXR0b246bm90KCAuaGFzLXRleHQgKSB7XG5cdFx0bWluLXdpZHRoOiAyNHB4O1xuXHRcdHBhZGRpbmc6IDA7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sUG9wb3ZlckNvbnRlbnQgPSBjc3NgYDtcbmV4cG9ydCBjb25zdCBib3JkZXJDb2xvckluZGljYXRvciA9IGNzc2BgO1xuXG5leHBvcnQgY29uc3QgcmVzZXRCdXR0b24gPSBjc3NgXG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXHR3aWR0aDogMTAwJTtcblxuXHQvKiBPdmVycmlkZSBidXR0b24gY29tcG9uZW50IHN0eWxpbmcgKi9cblx0JiYge1xuXHRcdGJvcmRlci10b3A6ICR7IENPTkZJRy5ib3JkZXJXaWR0aCB9IHNvbGlkICR7IENPTE9SUy5ncmF5WyAyMDAgXSB9O1xuXHRcdGhlaWdodDogNDZweDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlcldpZHRoQ29udHJvbCA9ICgpID0+IGNzc2Bcblx0LyogVGFyZ2V0IHRoZSBJbnB1dENvbnRyb2wncyBiYWNrZHJvcCAqL1xuXHQmJiYgJHsgQmFja2Ryb3BVSSB9IHtcblx0XHRib3JkZXI6IG5vbmU7XG5cdH1cblxuXHQvKiBTcGVjaWZpY2l0eSByZXF1aXJlZCB0byBvdmVyY29tZSBVbml0Q29udHJvbCBwYWRkaW5nICovXG5cdC8qIFNlZSBwYWNrYWdlcy9jb21wb25lbnRzL3NyYy91bml0LWNvbnRyb2wvc3R5bGVzL3VuaXQtY29udHJvbC1zdHlsZXMudHMgKi9cblx0JiYmIGlucHV0IHtcblx0XHQkeyBydGwoIHsgcGFkZGluZ1JpZ2h0OiAwIH0gKSgpIH1cblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xTdHlsZVBpY2tlciA9IGNzc2Bcblx0JHsgU3R5bGVkTGFiZWwgfSB7XG5cdFx0JHsgbGFiZWxTdHlsZXMgfVxuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyU3R5bGVCdXR0b24gPSBjc3NgXG5cdCYmJiYmIHtcblx0XHRtaW4td2lkdGg6IDMwcHg7XG5cdFx0d2lkdGg6IDMwcHg7XG5cdFx0aGVpZ2h0OiAzMHB4O1xuXHRcdHBhZGRpbmc6IDNweDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlclNsaWRlciA9ICgpID0+IGNzc2Bcblx0ZmxleDogMSAxIDYwJTtcblx0JHsgcnRsKCB7IG1hcmdpblJpZ2h0OiBzcGFjZSggMyApIH0gKSgpIH1cblxuXHQkeyBTdHlsZWRGaWVsZCB9IHtcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xuXHRcdGZvbnQtc2l6ZTogMDtcblx0XHRkaXNwbGF5OiBmbGV4O1xuXHR9XG5gO1xuIl19 */");
//# sourceMappingURL=styles.js.map