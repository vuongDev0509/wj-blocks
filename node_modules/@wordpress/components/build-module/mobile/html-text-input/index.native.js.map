{"version":3,"sources":["@wordpress/components/src/mobile/html-text-input/index.native.js"],"names":["TextInput","Component","__","parse","withDispatch","withSelect","addFilter","removeFilter","withInstanceId","compose","withPreferredColorScheme","HTMLInputContainer","styles","HTMLTextInput","constructor","arguments","edit","bind","stopEditing","getHTMLForParent","state","getDerivedStateFromProps","props","isDirty","value","componentWillUnmount","html","onChange","setState","onPersist","render","getStylesFromColorScheme","style","titleStyle","htmlViewTitle","text","color","htmlStyle","htmlView","htmlViewDark","placeholderStyle","placeholder","placeholderDark","parentHeight","title","editTitle","scrollEnabled","select","getEditedPostAttribute","getEditedPostContent","dispatch","editPost","resetEditorBlocks","content","blocks"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { TextInput } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { parse } from '@wordpress/blocks';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { addFilter, removeFilter } from '@wordpress/hooks';\nimport {\n\twithInstanceId,\n\tcompose,\n\twithPreferredColorScheme,\n} from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport HTMLInputContainer from './container';\nimport styles from './style.scss';\n\nexport class HTMLTextInput extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.edit = this.edit.bind( this );\n\t\tthis.stopEditing = this.stopEditing.bind( this );\n\t\tthis.getHTMLForParent = this.getHTMLForParent.bind( this );\n\t\taddFilter(\n\t\t\t'native.persist-html',\n\t\t\t'html-text-input',\n\t\t\tthis.getHTMLForParent\n\t\t);\n\n\t\tthis.state = {};\n\t}\n\n\tstatic getDerivedStateFromProps( props, state ) {\n\t\tif ( state.isDirty ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\tvalue: props.value,\n\t\t\tisDirty: false,\n\t\t};\n\t}\n\n\tcomponentWillUnmount() {\n\t\tremoveFilter( 'native.persist-html', 'html-text-input' );\n\t\t// TODO: Blocking main thread.\n\t\tthis.stopEditing();\n\t}\n\n\tedit( html ) {\n\t\tthis.props.onChange( html );\n\t\tthis.setState( { value: html, isDirty: true } );\n\t}\n\n\tgetHTMLForParent() {\n\t\treturn this.state.value;\n\t}\n\n\tstopEditing() {\n\t\tif ( this.state.isDirty ) {\n\t\t\tthis.props.onPersist( this.state.value );\n\t\t\tthis.setState( { isDirty: false } );\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { getStylesFromColorScheme, style } = this.props;\n\t\tconst titleStyle = [\n\t\t\tstyles.htmlViewTitle,\n\t\t\tstyle?.text && { color: style.text },\n\t\t];\n\t\tconst htmlStyle = [\n\t\t\tgetStylesFromColorScheme( styles.htmlView, styles.htmlViewDark ),\n\t\t\tstyle?.text && { color: style.text },\n\t\t];\n\t\tconst placeholderStyle = {\n\t\t\t...getStylesFromColorScheme(\n\t\t\t\tstyles.placeholder,\n\t\t\t\tstyles.placeholderDark\n\t\t\t),\n\t\t\t...( style?.text && { color: style.text } ),\n\t\t};\n\t\treturn (\n\t\t\t<HTMLInputContainer parentHeight={ this.props.parentHeight }>\n\t\t\t\t<TextInput\n\t\t\t\t\tautoCorrect={ false }\n\t\t\t\t\taccessibilityLabel=\"html-view-title\"\n\t\t\t\t\ttextAlignVertical=\"center\"\n\t\t\t\t\tnumberOfLines={ 1 }\n\t\t\t\t\tstyle={ titleStyle }\n\t\t\t\t\tvalue={ this.props.title }\n\t\t\t\t\tplaceholder={ __( 'Add title' ) }\n\t\t\t\t\tplaceholderTextColor={ placeholderStyle.color }\n\t\t\t\t\tonChangeText={ this.props.editTitle }\n\t\t\t\t/>\n\t\t\t\t<TextInput\n\t\t\t\t\tautoCorrect={ false }\n\t\t\t\t\taccessibilityLabel=\"html-view-content\"\n\t\t\t\t\ttextAlignVertical=\"top\"\n\t\t\t\t\tmultiline\n\t\t\t\t\tstyle={ htmlStyle }\n\t\t\t\t\tvalue={ this.state.value }\n\t\t\t\t\tonChangeText={ this.edit }\n\t\t\t\t\tonBlur={ this.stopEditing }\n\t\t\t\t\tplaceholder={ __( 'Start writingâ€¦' ) }\n\t\t\t\t\tplaceholderTextColor={ placeholderStyle.color }\n\t\t\t\t\tscrollEnabled={ HTMLInputContainer.scrollEnabled }\n\t\t\t\t/>\n\t\t\t</HTMLInputContainer>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst { getEditedPostAttribute, getEditedPostContent } = select(\n\t\t\t'core/editor'\n\t\t);\n\n\t\treturn {\n\t\t\ttitle: getEditedPostAttribute( 'title' ),\n\t\t\tvalue: getEditedPostContent(),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { editPost, resetEditorBlocks } = dispatch( 'core/editor' );\n\t\treturn {\n\t\t\teditTitle( title ) {\n\t\t\t\teditPost( { title } );\n\t\t\t},\n\t\t\tonChange( content ) {\n\t\t\t\teditPost( { content } );\n\t\t\t},\n\t\t\tonPersist( content ) {\n\t\t\t\tconst blocks = parse( content );\n\t\t\t\tresetEditorBlocks( blocks );\n\t\t\t},\n\t\t};\n\t} ),\n\twithInstanceId,\n\twithPreferredColorScheme,\n] )( HTMLTextInput );\n"]}