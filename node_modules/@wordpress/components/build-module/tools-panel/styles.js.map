{"version":3,"sources":["@wordpress/components/src/tools-panel/styles.ts"],"names":["css","StyledField","BaseControlField","StyledHelp","BaseControlHelp","StyledLabel","BaseControlLabel","Wrapper","BaseControlWrapper","LabelWrapper","COLORS","CONFIG","space","toolsPanelGrid","spacing","item","fullWidth","ToolsPanel","borderWidth","gray","ToolsPanelWithInnerWrapper","columns","ToolsPanelHiddenInnerWrapper","ToolsPanelHeader","ToolsPanelHeading","ToolsPanelItem","ToolsPanelItemPlaceholder","DropdownMenu"],"mappings":";;AAAA;AACA;AACA;AACA,SAASA,GAAT,QAAoB,gBAApB;AAEA;AACA;AACA;;AACA,SACCC,WAAW,IAAIC,gBADhB,EAECC,UAAU,IAAIC,eAFf,EAGCC,WAAW,IAAIC,gBAHhB,EAICC,OAAO,IAAIC,kBAJZ,QAKO,4CALP;AAMA,SAASC,YAAT,QAA6B,8CAA7B;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,UAA/B;AACA,SAASC,KAAT,QAAsB,mBAAtB;AAEA,MAAMC,cAAc,GAAG;AACtBC,EAAAA,OAAO,eAAEd,GAAF,gBACSY,KAAK,CAAE,CAAF,CADd,eAEMA,KAAK,CAAE,CAAF,CAFX,i+KADe;AAKtBG,EAAAA,IAAI,EAAE;AACLC,IAAAA,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AALgB,CAAvB;AAYA,OAAO,MAAMC,UAAU,gBAAGjB,GAAH,CACnBa,cAAc,CAACC,OADI,kBAGPH,MAAM,CAACO,WAHA,aAGuBR,MAAM,CAACS,IAAP,CAAa,GAAb,CAHvB,+BAKVP,KAAK,CAAE,CAAF,CALK,o+KAAhB;AAQP;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMQ,0BAA0B,GAAKC,OAAF,IAAuB;AAChE,sBAAOrB,GAAP,mEAG6B,WAAWqB,OAAS,SAHjD,OAIKR,cAAc,CAACC,OAJpB,OAKKD,cAAc,CAACE,IAAf,CAAoBC,SALzB;AAQA,CATM;AAWP,OAAO,MAAMM,4BAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlC;AAMP,OAAO,MAAMC,gBAAgB,gBAAGvB,GAAH,CACzBa,cAAc,CAACE,IAAf,CAAoBC,SADK,WAEpBJ,KAAK,CAAE,CAAF,CAFe,wCAYhBA,KAAK,CAAE,CAAC,CAAH,CAZW,mFAiBbA,KAAK,CAAE,CAAF,CAjBQ,2+KAAtB;AAqBP,OAAO,MAAMY,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;AAWP,OAAO,MAAMC,cAAc,gBAAGzB,GAAH,CACvBa,cAAc,CAACE,IAAf,CAAoBC,SADG,2EAapBR,kBAboB,uBAqBtBN,gBArBsB,oCA0BvBE,eA1BuB,2BAqCpBK,YArCoB,0EAmDvBH,gBAnDuB,2/KAApB;AAwDP,OAAO,MAAMoB,yBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA/B;AAIP,OAAO,MAAMC,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB","sourcesContent":["/**\n * External dependencies\n */\nimport { css } from '@emotion/react';\n\n/**\n * Internal dependencies\n */\nimport {\n\tStyledField as BaseControlField,\n\tStyledHelp as BaseControlHelp,\n\tStyledLabel as BaseControlLabel,\n\tWrapper as BaseControlWrapper,\n} from '../base-control/styles/base-control-styles';\nimport { LabelWrapper } from '../input-control/styles/input-control-styles';\nimport { COLORS, CONFIG } from '../utils';\nimport { space } from '../ui/utils/space';\n\nconst toolsPanelGrid = {\n\tspacing: css`\n\t\tcolumn-gap: ${ space( 4 ) };\n\t\trow-gap: ${ space( 6 ) };\n\t`,\n\titem: {\n\t\tfullWidth: css`\n\t\t\tgrid-column: 1 / -1;\n\t\t`,\n\t},\n};\n\nexport const ToolsPanel = css`\n\t${ toolsPanelGrid.spacing };\n\n\tborder-top: ${ CONFIG.borderWidth } solid ${ COLORS.gray[ 300 ] };\n\tmargin-top: -1px;\n\tpadding: ${ space( 4 ) };\n`;\n\n/**\n * Items injected into a ToolsPanel via a virtual bubbling slot will require\n * an inner dom element to be injected. The following rule allows for the\n * CSS grid display to be re-established.\n */\n\nexport const ToolsPanelWithInnerWrapper = ( columns: number ) => {\n\treturn css`\n\t\t> div:not( :first-of-type ) {\n\t\t\tdisplay: grid;\n\t\t\tgrid-template-columns: ${ `repeat( ${ columns }, 1fr )` };\n\t\t\t${ toolsPanelGrid.spacing }\n\t\t\t${ toolsPanelGrid.item.fullWidth }\n\t\t}\n\t`;\n};\n\nexport const ToolsPanelHiddenInnerWrapper = css`\n\t> div:not( :first-of-type ) {\n\t\tdisplay: none;\n\t}\n`;\n\nexport const ToolsPanelHeader = css`\n\t${ toolsPanelGrid.item.fullWidth }\n\tgap: ${ space( 2 ) };\n\n\t/**\n\t * The targeting of dropdown menu component classes here is a temporary\n\t * measure only.\n\t *\n\t * The following styles should be replaced once the DropdownMenu has been\n\t * refactored and can be targeted via component interpolation.\n\t */\n\t.components-dropdown-menu {\n\t\tmargin: ${ space( -1 ) } 0;\n\t\tline-height: 0;\n\t}\n\t&&&& .components-dropdown-menu__toggle {\n\t\tpadding: 0;\n\t\tmin-width: ${ space( 6 ) };\n\t}\n`;\n\nexport const ToolsPanelHeading = css`\n\tfont-size: inherit;\n\tfont-weight: 500;\n\tline-height: normal;\n\n\t/* Required to meet specificity requirements to ensure zero margin */\n\t&& {\n\t\tmargin: 0;\n\t}\n`;\n\nexport const ToolsPanelItem = css`\n\t${ toolsPanelGrid.item.fullWidth }\n\n\t/* Clear spacing in and around controls added as panel items. */\n\t/* Remove when they can be addressed via context system. */\n\t& > div,\n\t& > fieldset {\n\t\tpadding-bottom: 0;\n\t\tmargin-bottom: 0;\n\t\tmax-width: 100%;\n\t}\n\n\t/* Remove BaseControl components margins and leave spacing to grid layout */\n\t&& ${ BaseControlWrapper } {\n\t\tmargin-bottom: 0;\n\n\t\t/**\n\t\t * To maintain proper spacing within a base control, the field's bottom\n\t\t * margin should only be removed when there is no help text included and\n\t\t * it is therefore the last-child.\n\t\t */\n\t\t${ BaseControlField }:last-child {\n\t\t\tmargin-bottom: 0;\n\t\t}\n\t}\n\n\t${ BaseControlHelp } {\n\t\tmargin-bottom: 0;\n\t}\n\n\t/**\n\t * Standardize InputControl and BaseControl labels with other labels when\n\t * inside ToolsPanel.\n\t *\n\t * This is a temporary fix until the different control components have their\n\t * labels normalized.\n\t */\n\t&& ${ LabelWrapper } {\n\t\tlabel {\n\t\t\tline-height: 1.4em;\n\t\t}\n\t}\n\n\t/**\n\t * The targeting of .components-custom-select-control__label here is a\n\t * temporary measure only.\n\t *\n\t * It should be replaced once CustomSelectControl component has been\n\t * refactored and can be targeted via component interpolation.\n\t */\n\t.components-custom-select-control__label,\n\t${ BaseControlLabel } {\n\t\tline-height: 1.4em;\n\t}\n`;\n\nexport const ToolsPanelItemPlaceholder = css`\n\tdisplay: none;\n`;\n\nexport const DropdownMenu = css`\n\tmin-width: 200px;\n`;\n"]}