import _styled from "@emotion/styled/base";

function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }

// @ts-nocheck

/**
 * External dependencies
 */
import { css } from '@emotion/react';

/**
 * Internal dependencies
 */
import NumberControl from '../../number-control';
import { COLORS, reduceMotion, rtl } from '../../utils';
import { space } from '../../ui/utils/space';
const rangeHeightValue = 30;
const railHeight = 4;

const rangeHeight = () => /*#__PURE__*/css({
  height: rangeHeightValue,
  minHeight: rangeHeightValue
}, process.env.NODE_ENV === "production" ? "" : ";label:rangeHeight;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");

const thumbSize = 12;
export const Root = _styled("div", process.env.NODE_ENV === "production" ? {
  target: "exqw8y214"
} : {
  target: "exqw8y214",
  label: "Root"
})(process.env.NODE_ENV === "production" ? {
  name: "17z6zai",
  styles: "-webkit-tap-highlight-color:transparent;box-sizing:border-box;align-items:flex-start;display:inline-flex;justify-content:flex-start;padding:0;position:relative;touch-action:none;width:100%"
} : {
  name: "17z6zai",
  styles: "-webkit-tap-highlight-color:transparent;box-sizing:border-box;align-items:flex-start;display:inline-flex;justify-content:flex-start;padding:0;position:relative;touch-action:none;width:100%",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});

const wrapperColor = _ref4 => {
  let {
    color: colorProp = COLORS.ui.borderFocus
  } = _ref4;
  return /*#__PURE__*/css({
    color: colorProp
  }, process.env.NODE_ENV === "production" ? "" : ";label:wrapperColor;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
};

const wrapperMargin = _ref5 => {
  let {
    marks
  } = _ref5;
  return /*#__PURE__*/css({
    marginBottom: marks ? 16 : null
  }, process.env.NODE_ENV === "production" ? "" : ";label:wrapperMargin;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
};

export const Wrapper = _styled("div", process.env.NODE_ENV === "production" ? {
  target: "exqw8y213"
} : {
  target: "exqw8y213",
  label: "Wrapper"
})("box-sizing:border-box;color:", COLORS.blue.medium.focus, ";display:block;flex:1;position:relative;width:100%;", wrapperColor, ";", rangeHeight, ";", wrapperMargin, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));
export const BeforeIconWrapper = _styled("span", process.env.NODE_ENV === "production" ? {
  target: "exqw8y212"
} : {
  target: "exqw8y212",
  label: "BeforeIconWrapper"
})("margin-top:", railHeight, "px;", rtl({
  marginRight: 6
}), ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));
export const AfterIconWrapper = _styled("span", process.env.NODE_ENV === "production" ? {
  target: "exqw8y211"
} : {
  target: "exqw8y211",
  label: "AfterIconWrapper"
})("margin-top:", railHeight, "px;", rtl({
  marginLeft: 6
}), ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));

const railBackgroundColor = _ref6 => {
  let {
    disabled,
    railColor
  } = _ref6;
  let background = railColor || null;

  if (disabled) {
    background = COLORS.lightGray[400];
  }

  return /*#__PURE__*/css({
    background
  }, process.env.NODE_ENV === "production" ? "" : ";label:railBackgroundColor;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
};

export const Rail = _styled("span", process.env.NODE_ENV === "production" ? {
  target: "exqw8y210"
} : {
  target: "exqw8y210",
  label: "Rail"
})("background-color:", COLORS.lightGray[600], ";box-sizing:border-box;left:0;pointer-events:none;right:0;display:block;height:", railHeight, "px;position:absolute;margin-top:", (rangeHeightValue - railHeight) / 2, "px;top:0;border-radius:", railHeight, "px;", railBackgroundColor, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));

const trackBackgroundColor = _ref7 => {
  let {
    disabled,
    trackColor
  } = _ref7;
  let background = trackColor || 'currentColor';

  if (disabled) {
    background = COLORS.lightGray[800];
  }

  return /*#__PURE__*/css({
    background
  }, process.env.NODE_ENV === "production" ? "" : ";label:trackBackgroundColor;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
};

export const Track = _styled("span", process.env.NODE_ENV === "production" ? {
  target: "exqw8y29"
} : {
  target: "exqw8y29",
  label: "Track"
})("background-color:currentColor;border-radius:", railHeight, "px;box-sizing:border-box;height:", railHeight, "px;pointer-events:none;display:block;position:absolute;margin-top:", (rangeHeightValue - railHeight) / 2, "px;top:0;", trackBackgroundColor, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));
export const MarksWrapper = _styled("span", process.env.NODE_ENV === "production" ? {
  target: "exqw8y28"
} : {
  target: "exqw8y28",
  label: "MarksWrapper"
})(process.env.NODE_ENV === "production" ? {
  name: "1xuuvmv",
  styles: "box-sizing:border-box;display:block;pointer-events:none;position:relative;width:100%;user-select:none"
} : {
  name: "1xuuvmv",
  styles: "box-sizing:border-box;display:block;pointer-events:none;position:relative;width:100%;user-select:none",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});

const markFill = _ref8 => {
  let {
    disabled,
    isFilled
  } = _ref8;
  let backgroundColor = isFilled ? 'currentColor' : COLORS.lightGray[600];

  if (disabled) {
    backgroundColor = COLORS.lightGray[800];
  }

  return /*#__PURE__*/css({
    backgroundColor
  }, process.env.NODE_ENV === "production" ? "" : ";label:markFill;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
};

export const Mark = _styled("span", process.env.NODE_ENV === "production" ? {
  target: "exqw8y27"
} : {
  target: "exqw8y27",
  label: "Mark"
})("box-sizing:border-box;height:", thumbSize, "px;left:0;position:absolute;top:-4px;width:1px;", markFill, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvcmFuZ2UtY29udHJvbC9zdHlsZXMvcmFuZ2UtY29udHJvbC1zdHlsZXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMEkrQiIsImZpbGUiOiJAd29yZHByZXNzL2NvbXBvbmVudHMvc3JjL3JhbmdlLWNvbnRyb2wvc3R5bGVzL3JhbmdlLWNvbnRyb2wtc3R5bGVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcblxuLyoqXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IE51bWJlckNvbnRyb2wgZnJvbSAnLi4vLi4vbnVtYmVyLWNvbnRyb2wnO1xuaW1wb3J0IHsgQ09MT1JTLCByZWR1Y2VNb3Rpb24sIHJ0bCB9IGZyb20gJy4uLy4uL3V0aWxzJztcbmltcG9ydCB7IHNwYWNlIH0gZnJvbSAnLi4vLi4vdWkvdXRpbHMvc3BhY2UnO1xuXG5jb25zdCByYW5nZUhlaWdodFZhbHVlID0gMzA7XG5jb25zdCByYWlsSGVpZ2h0ID0gNDtcbmNvbnN0IHJhbmdlSGVpZ2h0ID0gKCkgPT5cblx0Y3NzKCB7IGhlaWdodDogcmFuZ2VIZWlnaHRWYWx1ZSwgbWluSGVpZ2h0OiByYW5nZUhlaWdodFZhbHVlIH0gKTtcbmNvbnN0IHRodW1iU2l6ZSA9IDEyO1xuXG5leHBvcnQgY29uc3QgUm9vdCA9IHN0eWxlZC5kaXZgXG5cdC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuXHRkaXNwbGF5OiBpbmxpbmUtZmxleDtcblx0anVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuXHRwYWRkaW5nOiAwO1xuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdHRvdWNoLWFjdGlvbjogbm9uZTtcblx0d2lkdGg6IDEwMCU7XG5gO1xuXG5jb25zdCB3cmFwcGVyQ29sb3IgPSAoIHsgY29sb3I6IGNvbG9yUHJvcCA9IENPTE9SUy51aS5ib3JkZXJGb2N1cyB9ICkgPT4ge1xuXHRyZXR1cm4gY3NzKCB7IGNvbG9yOiBjb2xvclByb3AgfSApO1xufTtcbmNvbnN0IHdyYXBwZXJNYXJnaW4gPSAoIHsgbWFya3MgfSApID0+XG5cdGNzcyggeyBtYXJnaW5Cb3R0b206IG1hcmtzID8gMTYgOiBudWxsIH0gKTtcblxuZXhwb3J0IGNvbnN0IFdyYXBwZXIgPSBzdHlsZWQuZGl2YFxuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRjb2xvcjogJHsgQ09MT1JTLmJsdWUubWVkaXVtLmZvY3VzIH07XG5cdGRpc3BsYXk6IGJsb2NrO1xuXHRmbGV4OiAxO1xuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdHdpZHRoOiAxMDAlO1xuXG5cdCR7IHdyYXBwZXJDb2xvciB9O1xuXHQkeyByYW5nZUhlaWdodCB9O1xuXHQkeyB3cmFwcGVyTWFyZ2luIH07XG5gO1xuXG5leHBvcnQgY29uc3QgQmVmb3JlSWNvbldyYXBwZXIgPSBzdHlsZWQuc3BhbmBcblx0bWFyZ2luLXRvcDogJHsgcmFpbEhlaWdodCB9cHg7XG5cblx0JHsgcnRsKCB7IG1hcmdpblJpZ2h0OiA2IH0gKSB9XG5gO1xuXG5leHBvcnQgY29uc3QgQWZ0ZXJJY29uV3JhcHBlciA9IHN0eWxlZC5zcGFuYFxuXHRtYXJnaW4tdG9wOiAkeyByYWlsSGVpZ2h0IH1weDtcblxuXHQkeyBydGwoIHsgbWFyZ2luTGVmdDogNiB9ICkgfVxuYDtcblxuY29uc3QgcmFpbEJhY2tncm91bmRDb2xvciA9ICggeyBkaXNhYmxlZCwgcmFpbENvbG9yIH0gKSA9PiB7XG5cdGxldCBiYWNrZ3JvdW5kID0gcmFpbENvbG9yIHx8IG51bGw7XG5cblx0aWYgKCBkaXNhYmxlZCApIHtcblx0XHRiYWNrZ3JvdW5kID0gQ09MT1JTLmxpZ2h0R3JheVsgNDAwIF07XG5cdH1cblxuXHRyZXR1cm4gY3NzKCB7XG5cdFx0YmFja2dyb3VuZCxcblx0fSApO1xufTtcblxuZXhwb3J0IGNvbnN0IFJhaWwgPSBzdHlsZWQuc3BhbmBcblx0YmFja2dyb3VuZC1jb2xvcjogJHsgQ09MT1JTLmxpZ2h0R3JheVsgNjAwIF0gfTtcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0bGVmdDogMDtcblx0cG9pbnRlci1ldmVudHM6IG5vbmU7XG5cdHJpZ2h0OiAwO1xuXHRkaXNwbGF5OiBibG9jaztcblx0aGVpZ2h0OiAkeyByYWlsSGVpZ2h0IH1weDtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHRtYXJnaW4tdG9wOiAkeyAoIHJhbmdlSGVpZ2h0VmFsdWUgLSByYWlsSGVpZ2h0ICkgLyAyIH1weDtcblx0dG9wOiAwO1xuXHRib3JkZXItcmFkaXVzOiAkeyByYWlsSGVpZ2h0IH1weDtcblxuXHQkeyByYWlsQmFja2dyb3VuZENvbG9yIH07XG5gO1xuXG5jb25zdCB0cmFja0JhY2tncm91bmRDb2xvciA9ICggeyBkaXNhYmxlZCwgdHJhY2tDb2xvciB9ICkgPT4ge1xuXHRsZXQgYmFja2dyb3VuZCA9IHRyYWNrQ29sb3IgfHwgJ2N1cnJlbnRDb2xvcic7XG5cblx0aWYgKCBkaXNhYmxlZCApIHtcblx0XHRiYWNrZ3JvdW5kID0gQ09MT1JTLmxpZ2h0R3JheVsgODAwIF07XG5cdH1cblxuXHRyZXR1cm4gY3NzKCB7XG5cdFx0YmFja2dyb3VuZCxcblx0fSApO1xufTtcblxuZXhwb3J0IGNvbnN0IFRyYWNrID0gc3R5bGVkLnNwYW5gXG5cdGJhY2tncm91bmQtY29sb3I6IGN1cnJlbnRDb2xvcjtcblx0Ym9yZGVyLXJhZGl1czogJHsgcmFpbEhlaWdodCB9cHg7XG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGhlaWdodDogJHsgcmFpbEhlaWdodCB9cHg7XG5cdHBvaW50ZXItZXZlbnRzOiBub25lO1xuXHRkaXNwbGF5OiBibG9jaztcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHRtYXJnaW4tdG9wOiAkeyAoIHJhbmdlSGVpZ2h0VmFsdWUgLSByYWlsSGVpZ2h0ICkgLyAyIH1weDtcblx0dG9wOiAwO1xuXG5cdCR7IHRyYWNrQmFja2dyb3VuZENvbG9yIH07XG5gO1xuXG5leHBvcnQgY29uc3QgTWFya3NXcmFwcGVyID0gc3R5bGVkLnNwYW5gXG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGRpc3BsYXk6IGJsb2NrO1xuXHRwb2ludGVyLWV2ZW50czogbm9uZTtcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHR3aWR0aDogMTAwJTtcblx0dXNlci1zZWxlY3Q6IG5vbmU7XG5gO1xuXG5jb25zdCBtYXJrRmlsbCA9ICggeyBkaXNhYmxlZCwgaXNGaWxsZWQgfSApID0+IHtcblx0bGV0IGJhY2tncm91bmRDb2xvciA9IGlzRmlsbGVkID8gJ2N1cnJlbnRDb2xvcicgOiBDT0xPUlMubGlnaHRHcmF5WyA2MDAgXTtcblxuXHRpZiAoIGRpc2FibGVkICkge1xuXHRcdGJhY2tncm91bmRDb2xvciA9IENPTE9SUy5saWdodEdyYXlbIDgwMCBdO1xuXHR9XG5cblx0cmV0dXJuIGNzcygge1xuXHRcdGJhY2tncm91bmRDb2xvcixcblx0fSApO1xufTtcblxuZXhwb3J0IGNvbnN0IE1hcmsgPSBzdHlsZWQuc3BhbmBcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0aGVpZ2h0OiAkeyB0aHVtYlNpemUgfXB4O1xuXHRsZWZ0OiAwO1xuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdHRvcDogLTRweDtcblx0d2lkdGg6IDFweDtcblxuXHQkeyBtYXJrRmlsbCB9O1xuYDtcblxuY29uc3QgbWFya0xhYmVsRmlsbCA9ICggeyBpc0ZpbGxlZCB9ICkgPT4ge1xuXHRyZXR1cm4gY3NzKCB7XG5cdFx0Y29sb3I6IGlzRmlsbGVkID8gQ09MT1JTLmRhcmtHcmF5WyAzMDAgXSA6IENPTE9SUy5saWdodEdyYXlbIDYwMCBdLFxuXHR9ICk7XG59O1xuXG5leHBvcnQgY29uc3QgTWFya0xhYmVsID0gc3R5bGVkLnNwYW5gXG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGNvbG9yOiAkeyBDT0xPUlMubGlnaHRHcmF5WyA2MDAgXSB9O1xuXHRsZWZ0OiAwO1xuXHRmb250LXNpemU6IDExcHg7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0dG9wOiAxMnB4O1xuXHR0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoIC01MCUgKTtcblx0d2hpdGUtc3BhY2U6IG5vd3JhcDtcblxuXHQkeyBtYXJrTGFiZWxGaWxsIH07XG5gO1xuXG5jb25zdCB0aHVtYkNvbG9yID0gKCB7IGRpc2FibGVkIH0gKSA9PlxuXHRkaXNhYmxlZFxuXHRcdD8gY3NzYFxuXHRcdFx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAkeyBDT0xPUlMubGlnaHRHcmF5WyA4MDAgXSB9O1xuXHRcdCAgYFxuXHRcdDogY3NzYFxuXHRcdFx0XHRiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoIC0td3AtYWRtaW4tdGhlbWUtY29sb3IgKTtcblx0XHQgIGA7XG5cbmV4cG9ydCBjb25zdCBUaHVtYldyYXBwZXIgPSBzdHlsZWQuc3BhbmBcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0ZGlzcGxheTogZmxleDtcblx0aGVpZ2h0OiAkeyB0aHVtYlNpemUgfXB4O1xuXHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcblx0bWFyZ2luLXRvcDogJHsgKCByYW5nZUhlaWdodFZhbHVlIC0gdGh1bWJTaXplICkgLyAyIH1weDtcblx0b3V0bGluZTogMDtcblx0cG9pbnRlci1ldmVudHM6IG5vbmU7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0dG9wOiAwO1xuXHR1c2VyLXNlbGVjdDogbm9uZTtcblx0d2lkdGg6ICR7IHRodW1iU2l6ZSB9cHg7XG5cdGJvcmRlci1yYWRpdXM6IDUwJTtcblxuXHQkeyB0aHVtYkNvbG9yIH07XG5cdCR7IHJ0bCggeyBtYXJnaW5MZWZ0OiAtMTAgfSApIH07XG5cdCR7IHJ0bChcblx0XHR7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVgoIDQuNXB4ICknIH0sXG5cdFx0eyB0cmFuc2Zvcm06ICd0cmFuc2xhdGVYKCAtNC41cHggKScgfVxuXHQpIH07XG5gO1xuXG5jb25zdCB0aHVtYkZvY3VzID0gKCB7IGlzRm9jdXNlZCB9ICkgPT4ge1xuXHRyZXR1cm4gaXNGb2N1c2VkXG5cdFx0PyBjc3NgXG5cdFx0XHRcdCY6OmJlZm9yZSB7XG5cdFx0XHRcdFx0Y29udGVudDogJyAnO1xuXHRcdFx0XHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0XHRcdFx0XHRiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoIC0td3AtYWRtaW4tdGhlbWUtY29sb3IgKTtcblx0XHRcdFx0XHRvcGFjaXR5OiAwLjQ7XG5cdFx0XHRcdFx0Ym9yZGVyLXJhZGl1czogNTAlO1xuXHRcdFx0XHRcdGhlaWdodDogJHsgdGh1bWJTaXplICsgOCB9cHg7XG5cdFx0XHRcdFx0d2lkdGg6ICR7IHRodW1iU2l6ZSArIDggfXB4O1xuXHRcdFx0XHRcdHRvcDogLTRweDtcblx0XHRcdFx0XHRsZWZ0OiAtNHB4O1xuXHRcdFx0XHR9XG5cdFx0ICBgXG5cdFx0OiAnJztcbn07XG5cbmV4cG9ydCBjb25zdCBUaHVtYiA9IHN0eWxlZC5zcGFuYFxuXHRhbGlnbi1pdGVtczogY2VudGVyO1xuXHRib3JkZXItcmFkaXVzOiA1MCU7XG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGhlaWdodDogMTAwJTtcblx0b3V0bGluZTogMDtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHR1c2VyLXNlbGVjdDogbm9uZTtcblx0d2lkdGg6IDEwMCU7XG5cblx0JHsgdGh1bWJDb2xvciB9O1xuXHQkeyB0aHVtYkZvY3VzIH07XG5gO1xuXG5leHBvcnQgY29uc3QgSW5wdXRSYW5nZSA9IHN0eWxlZC5pbnB1dGBcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0Y3Vyc29yOiBwb2ludGVyO1xuXHRkaXNwbGF5OiBibG9jaztcblx0aGVpZ2h0OiAxMDAlO1xuXHRsZWZ0OiAwO1xuXHRtYXJnaW46IDAgLSR7IHRodW1iU2l6ZSAvIDIgfXB4O1xuXHRvcGFjaXR5OiAwO1xuXHRvdXRsaW5lOiBub25lO1xuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdHJpZ2h0OiAwO1xuXHR0b3A6IDA7XG5cdHdpZHRoOiBjYWxjKCAxMDAlICsgJHsgdGh1bWJTaXplIH1weCApO1xuYDtcblxuY29uc3QgdG9vbHRpcFNob3cgPSAoIHsgc2hvdyB9ICkgPT4ge1xuXHRyZXR1cm4gY3NzKCB7XG5cdFx0b3BhY2l0eTogc2hvdyA/IDEgOiAwLFxuXHR9ICk7XG59O1xuXG5jb25zdCB0b29sdGlwUG9zaXRpb24gPSAoIHsgcG9zaXRpb24gfSApID0+IHtcblx0Y29uc3QgaXNCb3R0b20gPSBwb3NpdGlvbiA9PT0gJ2JvdHRvbSc7XG5cblx0aWYgKCBpc0JvdHRvbSApIHtcblx0XHRyZXR1cm4gY3NzYFxuXHRcdFx0Ym90dG9tOiAtODAlO1xuXHRcdGA7XG5cdH1cblxuXHRyZXR1cm4gY3NzYFxuXHRcdHRvcDogLTgwJTtcblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBUb29sdGlwID0gc3R5bGVkLnNwYW5gXG5cdGJhY2tncm91bmQ6IHJnYmEoIDAsIDAsIDAsIDAuOCApO1xuXHRib3JkZXItcmFkaXVzOiAycHg7XG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGNvbG9yOiB3aGl0ZTtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRmb250LXNpemU6IDEycHg7XG5cdG1pbi13aWR0aDogMzJweDtcblx0b3BhY2l0eTogMDtcblx0cGFkZGluZzogNHB4IDhweDtcblx0cG9pbnRlci1ldmVudHM6IG5vbmU7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHR0cmFuc2l0aW9uOiBvcGFjaXR5IDEyMG1zIGVhc2U7XG5cdHVzZXItc2VsZWN0OiBub25lO1xuXHRsaW5lLWhlaWdodDogMS40O1xuXG5cdCR7IHRvb2x0aXBTaG93IH07XG5cdCR7IHRvb2x0aXBQb3NpdGlvbiB9O1xuXHQkeyByZWR1Y2VNb3Rpb24oICd0cmFuc2l0aW9uJyApIH07XG5cdCR7IHJ0bChcblx0XHR7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVgoLTUwJSknIH0sXG5cdFx0eyB0cmFuc2Zvcm06ICd0cmFuc2xhdGVYKDUwJSknIH1cblx0KSB9XG5gO1xuXG4vLyBAdG9kbzogUmVmYWN0b3IgUmFuZ2VDb250cm9sIHdpdGggbGF0ZXN0IEhTdGFjayBjb25maWd1cmF0aW9uXG4vLyBAd29yZHByZXNzL2NvbXBvbmVudHMvdWkvaHN0YWNrLlxuZXhwb3J0IGNvbnN0IElucHV0TnVtYmVyID0gc3R5bGVkKCBOdW1iZXJDb250cm9sIClgXG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGRpc3BsYXk6IGlubGluZS1ibG9jaztcblx0Zm9udC1zaXplOiAxM3B4O1xuXHRtYXJnaW4tdG9wOiAwO1xuXHR3aWR0aDogJHsgc3BhY2UoIDE2ICkgfSAhaW1wb3J0YW50O1xuXG5cdGlucHV0W3R5cGU9J251bWJlciddJiB7XG5cdFx0JHsgcmFuZ2VIZWlnaHQgfTtcblx0fVxuXG5cdCR7IHJ0bCggeyBtYXJnaW5MZWZ0OiBgJHsgc3BhY2UoIDQgKSB9ICFpbXBvcnRhbnRgIH0gKSB9XG5gO1xuXG5leHBvcnQgY29uc3QgQWN0aW9uUmlnaHRXcmFwcGVyID0gc3R5bGVkLnNwYW5gXG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGRpc3BsYXk6IGJsb2NrO1xuXHRtYXJnaW4tdG9wOiAwO1xuXG5cdGJ1dHRvbixcblx0YnV0dG9uLmlzLXNtYWxsIHtcblx0XHRtYXJnaW4tbGVmdDogMDtcblx0XHQkeyByYW5nZUhlaWdodCB9O1xuXHR9XG5cblx0JHsgcnRsKCB7IG1hcmdpbkxlZnQ6IDggfSApIH1cbmA7XG4iXX0= */"));

const markLabelFill = _ref9 => {
  let {
    isFilled
  } = _ref9;
  return /*#__PURE__*/css({
    color: isFilled ? COLORS.darkGray[300] : COLORS.lightGray[600]
  }, process.env.NODE_ENV === "production" ? "" : ";label:markLabelFill;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
};

export const MarkLabel = _styled("span", process.env.NODE_ENV === "production" ? {
  target: "exqw8y26"
} : {
  target: "exqw8y26",
  label: "MarkLabel"
})("box-sizing:border-box;color:", COLORS.lightGray[600], ";left:0;font-size:11px;position:absolute;top:12px;transform:translateX( -50% );white-space:nowrap;", markLabelFill, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));

var _ref3 = process.env.NODE_ENV === "production" ? {
  name: "1sb75b3",
  styles: "background-color:var( --wp-admin-theme-color )"
} : {
  name: "ccoztc-thumbColor",
  styles: "background-color:var( --wp-admin-theme-color );label:thumbColor;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};

const thumbColor = _ref10 => {
  let {
    disabled
  } = _ref10;
  return disabled ? /*#__PURE__*/css("background-color:", COLORS.lightGray[800], ";" + (process.env.NODE_ENV === "production" ? "" : ";label:thumbColor;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */") : _ref3;
};

export const ThumbWrapper = _styled("span", process.env.NODE_ENV === "production" ? {
  target: "exqw8y25"
} : {
  target: "exqw8y25",
  label: "ThumbWrapper"
})("align-items:center;box-sizing:border-box;display:flex;height:", thumbSize, "px;justify-content:center;margin-top:", (rangeHeightValue - thumbSize) / 2, "px;outline:0;pointer-events:none;position:absolute;top:0;user-select:none;width:", thumbSize, "px;border-radius:50%;", thumbColor, ";", rtl({
  marginLeft: -10
}), ";", rtl({
  transform: 'translateX( 4.5px )'
}, {
  transform: 'translateX( -4.5px )'
}), ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));

const thumbFocus = _ref11 => {
  let {
    isFocused
  } = _ref11;
  return isFocused ? /*#__PURE__*/css("&::before{content:' ';position:absolute;background-color:var( --wp-admin-theme-color );opacity:0.4;border-radius:50%;height:", thumbSize + 8, "px;width:", thumbSize + 8, "px;top:-4px;left:-4px;}" + (process.env.NODE_ENV === "production" ? "" : ";label:thumbFocus;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */") : '';
};

export const Thumb = _styled("span", process.env.NODE_ENV === "production" ? {
  target: "exqw8y24"
} : {
  target: "exqw8y24",
  label: "Thumb"
})("align-items:center;border-radius:50%;box-sizing:border-box;height:100%;outline:0;position:absolute;user-select:none;width:100%;", thumbColor, ";", thumbFocus, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));
export const InputRange = _styled("input", process.env.NODE_ENV === "production" ? {
  target: "exqw8y23"
} : {
  target: "exqw8y23",
  label: "InputRange"
})("box-sizing:border-box;cursor:pointer;display:block;height:100%;left:0;margin:0 -", thumbSize / 2, "px;opacity:0;outline:none;position:absolute;right:0;top:0;width:calc( 100% + ", thumbSize, "px );" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));

const tooltipShow = _ref12 => {
  let {
    show
  } = _ref12;
  return /*#__PURE__*/css({
    opacity: show ? 1 : 0
  }, process.env.NODE_ENV === "production" ? "" : ";label:tooltipShow;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
};

var _ref = process.env.NODE_ENV === "production" ? {
  name: "1cypxip",
  styles: "top:-80%"
} : {
  name: "e8g0c9-tooltipPosition",
  styles: "top:-80%;label:tooltipPosition;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};

var _ref2 = process.env.NODE_ENV === "production" ? {
  name: "1lr98c4",
  styles: "bottom:-80%"
} : {
  name: "848kg9-tooltipPosition",
  styles: "bottom:-80%;label:tooltipPosition;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvcmFuZ2UtY29udHJvbC9zdHlsZXMvcmFuZ2UtY29udHJvbC1zdHlsZXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBaVFZIiwiZmlsZSI6IkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvcmFuZ2UtY29udHJvbC9zdHlsZXMvcmFuZ2UtY29udHJvbC1zdHlsZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuLyoqXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuXG4vKipcbiAqIEludGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgTnVtYmVyQ29udHJvbCBmcm9tICcuLi8uLi9udW1iZXItY29udHJvbCc7XG5pbXBvcnQgeyBDT0xPUlMsIHJlZHVjZU1vdGlvbiwgcnRsIH0gZnJvbSAnLi4vLi4vdXRpbHMnO1xuaW1wb3J0IHsgc3BhY2UgfSBmcm9tICcuLi8uLi91aS91dGlscy9zcGFjZSc7XG5cbmNvbnN0IHJhbmdlSGVpZ2h0VmFsdWUgPSAzMDtcbmNvbnN0IHJhaWxIZWlnaHQgPSA0O1xuY29uc3QgcmFuZ2VIZWlnaHQgPSAoKSA9PlxuXHRjc3MoIHsgaGVpZ2h0OiByYW5nZUhlaWdodFZhbHVlLCBtaW5IZWlnaHQ6IHJhbmdlSGVpZ2h0VmFsdWUgfSApO1xuY29uc3QgdGh1bWJTaXplID0gMTI7XG5cbmV4cG9ydCBjb25zdCBSb290ID0gc3R5bGVkLmRpdmBcblx0LXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0YWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG5cdGRpc3BsYXk6IGlubGluZS1mbGV4O1xuXHRqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG5cdHBhZGRpbmc6IDA7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0dG91Y2gtYWN0aW9uOiBub25lO1xuXHR3aWR0aDogMTAwJTtcbmA7XG5cbmNvbnN0IHdyYXBwZXJDb2xvciA9ICggeyBjb2xvcjogY29sb3JQcm9wID0gQ09MT1JTLnVpLmJvcmRlckZvY3VzIH0gKSA9PiB7XG5cdHJldHVybiBjc3MoIHsgY29sb3I6IGNvbG9yUHJvcCB9ICk7XG59O1xuY29uc3Qgd3JhcHBlck1hcmdpbiA9ICggeyBtYXJrcyB9ICkgPT5cblx0Y3NzKCB7IG1hcmdpbkJvdHRvbTogbWFya3MgPyAxNiA6IG51bGwgfSApO1xuXG5leHBvcnQgY29uc3QgV3JhcHBlciA9IHN0eWxlZC5kaXZgXG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGNvbG9yOiAkeyBDT0xPUlMuYmx1ZS5tZWRpdW0uZm9jdXMgfTtcblx0ZGlzcGxheTogYmxvY2s7XG5cdGZsZXg6IDE7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0d2lkdGg6IDEwMCU7XG5cblx0JHsgd3JhcHBlckNvbG9yIH07XG5cdCR7IHJhbmdlSGVpZ2h0IH07XG5cdCR7IHdyYXBwZXJNYXJnaW4gfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBCZWZvcmVJY29uV3JhcHBlciA9IHN0eWxlZC5zcGFuYFxuXHRtYXJnaW4tdG9wOiAkeyByYWlsSGVpZ2h0IH1weDtcblxuXHQkeyBydGwoIHsgbWFyZ2luUmlnaHQ6IDYgfSApIH1cbmA7XG5cbmV4cG9ydCBjb25zdCBBZnRlckljb25XcmFwcGVyID0gc3R5bGVkLnNwYW5gXG5cdG1hcmdpbi10b3A6ICR7IHJhaWxIZWlnaHQgfXB4O1xuXG5cdCR7IHJ0bCggeyBtYXJnaW5MZWZ0OiA2IH0gKSB9XG5gO1xuXG5jb25zdCByYWlsQmFja2dyb3VuZENvbG9yID0gKCB7IGRpc2FibGVkLCByYWlsQ29sb3IgfSApID0+IHtcblx0bGV0IGJhY2tncm91bmQgPSByYWlsQ29sb3IgfHwgbnVsbDtcblxuXHRpZiAoIGRpc2FibGVkICkge1xuXHRcdGJhY2tncm91bmQgPSBDT0xPUlMubGlnaHRHcmF5WyA0MDAgXTtcblx0fVxuXG5cdHJldHVybiBjc3MoIHtcblx0XHRiYWNrZ3JvdW5kLFxuXHR9ICk7XG59O1xuXG5leHBvcnQgY29uc3QgUmFpbCA9IHN0eWxlZC5zcGFuYFxuXHRiYWNrZ3JvdW5kLWNvbG9yOiAkeyBDT0xPUlMubGlnaHRHcmF5WyA2MDAgXSB9O1xuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRsZWZ0OiAwO1xuXHRwb2ludGVyLWV2ZW50czogbm9uZTtcblx0cmlnaHQ6IDA7XG5cdGRpc3BsYXk6IGJsb2NrO1xuXHRoZWlnaHQ6ICR7IHJhaWxIZWlnaHQgfXB4O1xuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdG1hcmdpbi10b3A6ICR7ICggcmFuZ2VIZWlnaHRWYWx1ZSAtIHJhaWxIZWlnaHQgKSAvIDIgfXB4O1xuXHR0b3A6IDA7XG5cdGJvcmRlci1yYWRpdXM6ICR7IHJhaWxIZWlnaHQgfXB4O1xuXG5cdCR7IHJhaWxCYWNrZ3JvdW5kQ29sb3IgfTtcbmA7XG5cbmNvbnN0IHRyYWNrQmFja2dyb3VuZENvbG9yID0gKCB7IGRpc2FibGVkLCB0cmFja0NvbG9yIH0gKSA9PiB7XG5cdGxldCBiYWNrZ3JvdW5kID0gdHJhY2tDb2xvciB8fCAnY3VycmVudENvbG9yJztcblxuXHRpZiAoIGRpc2FibGVkICkge1xuXHRcdGJhY2tncm91bmQgPSBDT0xPUlMubGlnaHRHcmF5WyA4MDAgXTtcblx0fVxuXG5cdHJldHVybiBjc3MoIHtcblx0XHRiYWNrZ3JvdW5kLFxuXHR9ICk7XG59O1xuXG5leHBvcnQgY29uc3QgVHJhY2sgPSBzdHlsZWQuc3BhbmBcblx0YmFja2dyb3VuZC1jb2xvcjogY3VycmVudENvbG9yO1xuXHRib3JkZXItcmFkaXVzOiAkeyByYWlsSGVpZ2h0IH1weDtcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0aGVpZ2h0OiAkeyByYWlsSGVpZ2h0IH1weDtcblx0cG9pbnRlci1ldmVudHM6IG5vbmU7XG5cdGRpc3BsYXk6IGJsb2NrO1xuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdG1hcmdpbi10b3A6ICR7ICggcmFuZ2VIZWlnaHRWYWx1ZSAtIHJhaWxIZWlnaHQgKSAvIDIgfXB4O1xuXHR0b3A6IDA7XG5cblx0JHsgdHJhY2tCYWNrZ3JvdW5kQ29sb3IgfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBNYXJrc1dyYXBwZXIgPSBzdHlsZWQuc3BhbmBcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0ZGlzcGxheTogYmxvY2s7XG5cdHBvaW50ZXItZXZlbnRzOiBub25lO1xuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdHdpZHRoOiAxMDAlO1xuXHR1c2VyLXNlbGVjdDogbm9uZTtcbmA7XG5cbmNvbnN0IG1hcmtGaWxsID0gKCB7IGRpc2FibGVkLCBpc0ZpbGxlZCB9ICkgPT4ge1xuXHRsZXQgYmFja2dyb3VuZENvbG9yID0gaXNGaWxsZWQgPyAnY3VycmVudENvbG9yJyA6IENPTE9SUy5saWdodEdyYXlbIDYwMCBdO1xuXG5cdGlmICggZGlzYWJsZWQgKSB7XG5cdFx0YmFja2dyb3VuZENvbG9yID0gQ09MT1JTLmxpZ2h0R3JheVsgODAwIF07XG5cdH1cblxuXHRyZXR1cm4gY3NzKCB7XG5cdFx0YmFja2dyb3VuZENvbG9yLFxuXHR9ICk7XG59O1xuXG5leHBvcnQgY29uc3QgTWFyayA9IHN0eWxlZC5zcGFuYFxuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRoZWlnaHQ6ICR7IHRodW1iU2l6ZSB9cHg7XG5cdGxlZnQ6IDA7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0dG9wOiAtNHB4O1xuXHR3aWR0aDogMXB4O1xuXG5cdCR7IG1hcmtGaWxsIH07XG5gO1xuXG5jb25zdCBtYXJrTGFiZWxGaWxsID0gKCB7IGlzRmlsbGVkIH0gKSA9PiB7XG5cdHJldHVybiBjc3MoIHtcblx0XHRjb2xvcjogaXNGaWxsZWQgPyBDT0xPUlMuZGFya0dyYXlbIDMwMCBdIDogQ09MT1JTLmxpZ2h0R3JheVsgNjAwIF0sXG5cdH0gKTtcbn07XG5cbmV4cG9ydCBjb25zdCBNYXJrTGFiZWwgPSBzdHlsZWQuc3BhbmBcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0Y29sb3I6ICR7IENPTE9SUy5saWdodEdyYXlbIDYwMCBdIH07XG5cdGxlZnQ6IDA7XG5cdGZvbnQtc2l6ZTogMTFweDtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHR0b3A6IDEycHg7XG5cdHRyYW5zZm9ybTogdHJhbnNsYXRlWCggLTUwJSApO1xuXHR3aGl0ZS1zcGFjZTogbm93cmFwO1xuXG5cdCR7IG1hcmtMYWJlbEZpbGwgfTtcbmA7XG5cbmNvbnN0IHRodW1iQ29sb3IgPSAoIHsgZGlzYWJsZWQgfSApID0+XG5cdGRpc2FibGVkXG5cdFx0PyBjc3NgXG5cdFx0XHRcdGJhY2tncm91bmQtY29sb3I6ICR7IENPTE9SUy5saWdodEdyYXlbIDgwMCBdIH07XG5cdFx0ICBgXG5cdFx0OiBjc3NgXG5cdFx0XHRcdGJhY2tncm91bmQtY29sb3I6IHZhciggLS13cC1hZG1pbi10aGVtZS1jb2xvciApO1xuXHRcdCAgYDtcblxuZXhwb3J0IGNvbnN0IFRodW1iV3JhcHBlciA9IHN0eWxlZC5zcGFuYFxuXHRhbGlnbi1pdGVtczogY2VudGVyO1xuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRkaXNwbGF5OiBmbGV4O1xuXHRoZWlnaHQ6ICR7IHRodW1iU2l6ZSB9cHg7XG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXHRtYXJnaW4tdG9wOiAkeyAoIHJhbmdlSGVpZ2h0VmFsdWUgLSB0aHVtYlNpemUgKSAvIDIgfXB4O1xuXHRvdXRsaW5lOiAwO1xuXHRwb2ludGVyLWV2ZW50czogbm9uZTtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHR0b3A6IDA7XG5cdHVzZXItc2VsZWN0OiBub25lO1xuXHR3aWR0aDogJHsgdGh1bWJTaXplIH1weDtcblx0Ym9yZGVyLXJhZGl1czogNTAlO1xuXG5cdCR7IHRodW1iQ29sb3IgfTtcblx0JHsgcnRsKCB7IG1hcmdpbkxlZnQ6IC0xMCB9ICkgfTtcblx0JHsgcnRsKFxuXHRcdHsgdHJhbnNmb3JtOiAndHJhbnNsYXRlWCggNC41cHggKScgfSxcblx0XHR7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVgoIC00LjVweCApJyB9XG5cdCkgfTtcbmA7XG5cbmNvbnN0IHRodW1iRm9jdXMgPSAoIHsgaXNGb2N1c2VkIH0gKSA9PiB7XG5cdHJldHVybiBpc0ZvY3VzZWRcblx0XHQ/IGNzc2Bcblx0XHRcdFx0Jjo6YmVmb3JlIHtcblx0XHRcdFx0XHRjb250ZW50OiAnICc7XG5cdFx0XHRcdFx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcdFx0XHRcdGJhY2tncm91bmQtY29sb3I6IHZhciggLS13cC1hZG1pbi10aGVtZS1jb2xvciApO1xuXHRcdFx0XHRcdG9wYWNpdHk6IDAuNDtcblx0XHRcdFx0XHRib3JkZXItcmFkaXVzOiA1MCU7XG5cdFx0XHRcdFx0aGVpZ2h0OiAkeyB0aHVtYlNpemUgKyA4IH1weDtcblx0XHRcdFx0XHR3aWR0aDogJHsgdGh1bWJTaXplICsgOCB9cHg7XG5cdFx0XHRcdFx0dG9wOiAtNHB4O1xuXHRcdFx0XHRcdGxlZnQ6IC00cHg7XG5cdFx0XHRcdH1cblx0XHQgIGBcblx0XHQ6ICcnO1xufTtcblxuZXhwb3J0IGNvbnN0IFRodW1iID0gc3R5bGVkLnNwYW5gXG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cdGJvcmRlci1yYWRpdXM6IDUwJTtcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0aGVpZ2h0OiAxMDAlO1xuXHRvdXRsaW5lOiAwO1xuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdHVzZXItc2VsZWN0OiBub25lO1xuXHR3aWR0aDogMTAwJTtcblxuXHQkeyB0aHVtYkNvbG9yIH07XG5cdCR7IHRodW1iRm9jdXMgfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBJbnB1dFJhbmdlID0gc3R5bGVkLmlucHV0YFxuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRjdXJzb3I6IHBvaW50ZXI7XG5cdGRpc3BsYXk6IGJsb2NrO1xuXHRoZWlnaHQ6IDEwMCU7XG5cdGxlZnQ6IDA7XG5cdG1hcmdpbjogMCAtJHsgdGh1bWJTaXplIC8gMiB9cHg7XG5cdG9wYWNpdHk6IDA7XG5cdG91dGxpbmU6IG5vbmU7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0cmlnaHQ6IDA7XG5cdHRvcDogMDtcblx0d2lkdGg6IGNhbGMoIDEwMCUgKyAkeyB0aHVtYlNpemUgfXB4ICk7XG5gO1xuXG5jb25zdCB0b29sdGlwU2hvdyA9ICggeyBzaG93IH0gKSA9PiB7XG5cdHJldHVybiBjc3MoIHtcblx0XHRvcGFjaXR5OiBzaG93ID8gMSA6IDAsXG5cdH0gKTtcbn07XG5cbmNvbnN0IHRvb2x0aXBQb3NpdGlvbiA9ICggeyBwb3NpdGlvbiB9ICkgPT4ge1xuXHRjb25zdCBpc0JvdHRvbSA9IHBvc2l0aW9uID09PSAnYm90dG9tJztcblxuXHRpZiAoIGlzQm90dG9tICkge1xuXHRcdHJldHVybiBjc3NgXG5cdFx0XHRib3R0b206IC04MCU7XG5cdFx0YDtcblx0fVxuXG5cdHJldHVybiBjc3NgXG5cdFx0dG9wOiAtODAlO1xuXHRgO1xufTtcblxuZXhwb3J0IGNvbnN0IFRvb2x0aXAgPSBzdHlsZWQuc3BhbmBcblx0YmFja2dyb3VuZDogcmdiYSggMCwgMCwgMCwgMC44ICk7XG5cdGJvcmRlci1yYWRpdXM6IDJweDtcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0Y29sb3I6IHdoaXRlO1xuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdGZvbnQtc2l6ZTogMTJweDtcblx0bWluLXdpZHRoOiAzMnB4O1xuXHRvcGFjaXR5OiAwO1xuXHRwYWRkaW5nOiA0cHggOHB4O1xuXHRwb2ludGVyLWV2ZW50czogbm9uZTtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cdHRyYW5zaXRpb246IG9wYWNpdHkgMTIwbXMgZWFzZTtcblx0dXNlci1zZWxlY3Q6IG5vbmU7XG5cdGxpbmUtaGVpZ2h0OiAxLjQ7XG5cblx0JHsgdG9vbHRpcFNob3cgfTtcblx0JHsgdG9vbHRpcFBvc2l0aW9uIH07XG5cdCR7IHJlZHVjZU1vdGlvbiggJ3RyYW5zaXRpb24nICkgfTtcblx0JHsgcnRsKFxuXHRcdHsgdHJhbnNmb3JtOiAndHJhbnNsYXRlWCgtNTAlKScgfSxcblx0XHR7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVgoNTAlKScgfVxuXHQpIH1cbmA7XG5cbi8vIEB0b2RvOiBSZWZhY3RvciBSYW5nZUNvbnRyb2wgd2l0aCBsYXRlc3QgSFN0YWNrIGNvbmZpZ3VyYXRpb25cbi8vIEB3b3JkcHJlc3MvY29tcG9uZW50cy91aS9oc3RhY2suXG5leHBvcnQgY29uc3QgSW5wdXROdW1iZXIgPSBzdHlsZWQoIE51bWJlckNvbnRyb2wgKWBcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRmb250LXNpemU6IDEzcHg7XG5cdG1hcmdpbi10b3A6IDA7XG5cdHdpZHRoOiAkeyBzcGFjZSggMTYgKSB9ICFpbXBvcnRhbnQ7XG5cblx0aW5wdXRbdHlwZT0nbnVtYmVyJ10mIHtcblx0XHQkeyByYW5nZUhlaWdodCB9O1xuXHR9XG5cblx0JHsgcnRsKCB7IG1hcmdpbkxlZnQ6IGAkeyBzcGFjZSggNCApIH0gIWltcG9ydGFudGAgfSApIH1cbmA7XG5cbmV4cG9ydCBjb25zdCBBY3Rpb25SaWdodFdyYXBwZXIgPSBzdHlsZWQuc3BhbmBcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0ZGlzcGxheTogYmxvY2s7XG5cdG1hcmdpbi10b3A6IDA7XG5cblx0YnV0dG9uLFxuXHRidXR0b24uaXMtc21hbGwge1xuXHRcdG1hcmdpbi1sZWZ0OiAwO1xuXHRcdCR7IHJhbmdlSGVpZ2h0IH07XG5cdH1cblxuXHQkeyBydGwoIHsgbWFyZ2luTGVmdDogOCB9ICkgfVxuYDtcbiJdfQ== */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};

const tooltipPosition = _ref13 => {
  let {
    position
  } = _ref13;
  const isBottom = position === 'bottom';

  if (isBottom) {
    return _ref2;
  }

  return _ref;
};

export const Tooltip = _styled("span", process.env.NODE_ENV === "production" ? {
  target: "exqw8y22"
} : {
  target: "exqw8y22",
  label: "Tooltip"
})("background:rgba( 0, 0, 0, 0.8 );border-radius:2px;box-sizing:border-box;color:white;display:inline-block;font-size:12px;min-width:32px;opacity:0;padding:4px 8px;pointer-events:none;position:absolute;text-align:center;transition:opacity 120ms ease;user-select:none;line-height:1.4;", tooltipShow, ";", tooltipPosition, ";", reduceMotion('transition'), ";", rtl({
  transform: 'translateX(-50%)'
}, {
  transform: 'translateX(50%)'
}), ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */")); // @todo: Refactor RangeControl with latest HStack configuration
// @wordpress/components/ui/hstack.

export const InputNumber = /*#__PURE__*/_styled(NumberControl, process.env.NODE_ENV === "production" ? {
  target: "exqw8y21"
} : {
  target: "exqw8y21",
  label: "InputNumber"
})("box-sizing:border-box;display:inline-block;font-size:13px;margin-top:0;width:", space(16), "!important;input[type='number']&{", rangeHeight, ";}", rtl({
  marginLeft: `${space(4)} !important`
}), ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));
export const ActionRightWrapper = _styled("span", process.env.NODE_ENV === "production" ? {
  target: "exqw8y20"
} : {
  target: "exqw8y20",
  label: "ActionRightWrapper"
})("box-sizing:border-box;display:block;margin-top:0;button,button.is-small{margin-left:0;", rangeHeight, ";}", rtl({
  marginLeft: 8
}), ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));
//# sourceMappingURL=range-control-styles.js.map