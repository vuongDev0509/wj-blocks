{"version":3,"sources":["@wordpress/dom/src/dom/is-entirely-selected.js"],"names":["assertIsDefined","isInputOrTextArea","isEntirelySelected","element","selectionStart","value","length","selectionEnd","isContentEditable","ownerDocument","defaultView","selection","getSelection","range","rangeCount","getRangeAt","startContainer","endContainer","startOffset","endOffset","childNodes","lastChild","lastChildContentLength","nodeType","TEXT_NODE","data","firstChild"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,eAAT,QAAgC,4BAAhC;AACA,OAAOC,iBAAP,MAA8B,yBAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,kBAAT,CAA6BC,OAA7B,EAAuC;AACrD,MAAKF,iBAAiB,CAAEE,OAAF,CAAtB,EAAoC;AACnC,WACCA,OAAO,CAACC,cAAR,KAA2B,CAA3B,IACAD,OAAO,CAACE,KAAR,CAAcC,MAAd,KAAyBH,OAAO,CAACI,YAFlC;AAIA;;AAED,MAAK,CAAEJ,OAAO,CAACK,iBAAf,EAAmC;AAClC,WAAO,IAAP;AACA;;AAVoD,MAY7CC,aAZ6C,GAY3BN,OAZ2B,CAY7CM,aAZ6C;AAAA,MAa7CC,WAb6C,GAa7BD,aAb6B,CAa7CC,WAb6C;AAcrDV,EAAAA,eAAe,CAAEU,WAAF,EAAe,aAAf,CAAf;AACA,MAAMC,SAAS,GAAGD,WAAW,CAACE,YAAZ,EAAlB;AACAZ,EAAAA,eAAe,CAAEW,SAAF,EAAa,WAAb,CAAf;AACA,MAAME,KAAK,GAAGF,SAAS,CAACG,UAAV,GAAuBH,SAAS,CAACI,UAAV,CAAsB,CAAtB,CAAvB,GAAmD,IAAjE;;AAEA,MAAK,CAAEF,KAAP,EAAe;AACd,WAAO,IAAP;AACA;;AArBoD,MAuB7CG,cAvB6C,GAuBYH,KAvBZ,CAuB7CG,cAvB6C;AAAA,MAuB7BC,YAvB6B,GAuBYJ,KAvBZ,CAuB7BI,YAvB6B;AAAA,MAuBfC,WAvBe,GAuBYL,KAvBZ,CAuBfK,WAvBe;AAAA,MAuBFC,SAvBE,GAuBYN,KAvBZ,CAuBFM,SAvBE;;AAyBrD,MACCH,cAAc,KAAKb,OAAnB,IACAc,YAAY,KAAKd,OADjB,IAEAe,WAAW,KAAK,CAFhB,IAGAC,SAAS,KAAKhB,OAAO,CAACiB,UAAR,CAAmBd,MAJlC,EAKE;AACD,WAAO,IAAP;AACA;;AAED,MAAMe,SAAS,GAAGlB,OAAO,CAACkB,SAA1B;AACArB,EAAAA,eAAe,CAAEqB,SAAF,EAAa,WAAb,CAAf;AACA,MAAMC,sBAAsB,GAC3BD,SAAS,CAACE,QAAV,KAAuBF,SAAS,CAACG,SAAjC;AACG;AAAsBH,EAAAA,SAAF,CAAcI,IAAd,CAAmBnB,MAD1C,GAEGe,SAAS,CAACD,UAAV,CAAqBd,MAHzB;AAKA,SACCU,cAAc,KAAKb,OAAO,CAACuB,UAA3B,IACAT,YAAY,KAAKd,OAAO,CAACkB,SADzB,IAEAH,WAAW,KAAK,CAFhB,IAGAC,SAAS,KAAKG,sBAJf;AAMA","sourcesContent":["/**\n * Internal dependencies\n */\nimport { assertIsDefined } from '../utils/assert-is-defined';\nimport isInputOrTextArea from './is-input-or-text-area';\n\n/**\n * Check whether the contents of the element have been entirely selected.\n * Returns true if there is no possibility of selection.\n *\n * @param {HTMLElement} element The element to check.\n *\n * @return {boolean} True if entirely selected, false if not.\n */\nexport default function isEntirelySelected( element ) {\n\tif ( isInputOrTextArea( element ) ) {\n\t\treturn (\n\t\t\telement.selectionStart === 0 &&\n\t\t\telement.value.length === element.selectionEnd\n\t\t);\n\t}\n\n\tif ( ! element.isContentEditable ) {\n\t\treturn true;\n\t}\n\n\tconst { ownerDocument } = element;\n\tconst { defaultView } = ownerDocument;\n\tassertIsDefined( defaultView, 'defaultView' );\n\tconst selection = defaultView.getSelection();\n\tassertIsDefined( selection, 'selection' );\n\tconst range = selection.rangeCount ? selection.getRangeAt( 0 ) : null;\n\n\tif ( ! range ) {\n\t\treturn true;\n\t}\n\n\tconst { startContainer, endContainer, startOffset, endOffset } = range;\n\n\tif (\n\t\tstartContainer === element &&\n\t\tendContainer === element &&\n\t\tstartOffset === 0 &&\n\t\tendOffset === element.childNodes.length\n\t) {\n\t\treturn true;\n\t}\n\n\tconst lastChild = element.lastChild;\n\tassertIsDefined( lastChild, 'lastChild' );\n\tconst lastChildContentLength =\n\t\tlastChild.nodeType === lastChild.TEXT_NODE\n\t\t\t? /** @type {Text} */ ( lastChild ).data.length\n\t\t\t: lastChild.childNodes.length;\n\n\treturn (\n\t\tstartContainer === element.firstChild &&\n\t\tendContainer === element.lastChild &&\n\t\tstartOffset === 0 &&\n\t\tendOffset === lastChildContentLength\n\t);\n}\n"]}